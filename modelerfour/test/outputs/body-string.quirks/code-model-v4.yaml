!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_6
    $key: Error
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: status
      schema: !<!NumberSchema> &ref_1
        $key: typeForstatus
        type: integer
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForstatus
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: message
      schema: !<!StringSchema> &ref_2
        $key: Error-message
        type: string
        description: MISSING-SCHEMA-DESCRIPTION-STRING
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Error-message
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Error
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_12
    $key: RefColorConstant
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: ColorConstant
      schema: !<!ConstantSchema> &ref_0
        $key: ColorConstant
        type: constant
        description: Referenced Color Constant Description.
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        value: green-color
        valueType: !<!StringSchema> 
          $key: constant
          type: string
          description: constant
          language: !<!Languages> 
            default:
              name: constant
              description: constant
          protocol: !<!Protocols> {}
        extensions:
          x-ms-enum:
            name: ColorConstant
            modelAsString: false
        language: !<!Languages> 
          default:
            name: ColorConstant
            description: Referenced Color Constant Description.
        protocol: !<!Protocols> {}
      description: Referenced Color Constant Description.
      required: true
      serializedName: ColorConstant
      language: !<!Languages> 
        default:
          name: ColorConstant
          description: Referenced Color Constant Description.
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: field1
      schema: !<!StringSchema> &ref_3
        $key: RefColorConstant-field1
        type: string
        description: Sample string.
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: RefColorConstant-field1
            description: Sample string.
        protocol: !<!Protocols> {}
      description: Sample string.
      required: false
      serializedName: field1
      language: !<!Languages> 
        default:
          name: field1
          description: Sample string.
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: RefColorConstant
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  choices:
  - !<!ChoiceSchema> &ref_11
    $key: Colors
    choices:
    - !<!ChoiceValue> 
      value: red color
      language:
        default:
          name: red color
          description: ''
    - !<!ChoiceValue> 
      value: green-color
      language:
        default:
          name: green-color
          description: ''
    - !<!ChoiceValue> 
      value: blue_color
      language:
        default:
          name: blue_color
          description: ''
    type: choice
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    choiceType: !<!StringSchema> 
      $key: choice
      type: string
      description: choice
      language: !<!Languages> 
        default:
          name: choice
          description: choice
      protocol: !<!Protocols> {}
    extensions:
      x-ms-enum:
        name: Colors
        modelAsString: false
    language: !<!Languages> 
      default:
        name: Colors
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  byteArrays:
  - !<!ByteArraySchema> &ref_10
    $key: paths·string-base64encoding·get·responses·200·content·application-json·schema
    type: byte-array
    format: base64url
    description: MISSING-SCHEMA-DESCRIPTION-BYTEARRAY
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·string-base64encoding·get·responses·200·content·application-json·schema
        description: MISSING-SCHEMA-DESCRIPTION-BYTEARRAY
    protocol: !<!Protocols> {}
  constants:
  - !<!ConstantSchema> &ref_5
    $key: paths·string-null·get·responses·200·content·application-json·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·string-null·get·responses·200·content·application-json·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_7
    $key: paths·string-empty·get·responses·200·content·application-json·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·string-empty·get·responses·200·content·application-json·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_8
    $key: paths·string-mbcs·get·responses·200·content·application-json·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: 啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·string-mbcs·get·responses·200·content·application-json·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_9
    $key: paths·string-whitespace·get·responses·200·content·application-json·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: '    Now is the time for all good men to come to the aid of their country    '
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·string-whitespace·get·responses·200·content·application-json·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - *ref_0
  numbers:
  - *ref_1
  strings:
  - *ref_2
  - *ref_3
info: !<!Info> 
  description: Test Infrastructure for AutoRest Swagger BAT
  title: body-string.quirks
operationGroups:
- !<!OperationGroup> 
  $key: string
  operations:
  - !<!Operation> 
    $key: getNull
    description: Get null string value value
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /string/null
          method: get
          servers:
          - !<!HttpServer> &ref_4
            url: 'http://localhost:3000/'
            language:
              default:
                name: server-name
                description: MISSING-SERVER-DESCRIPTION
    responses:
    - !<!SchemaResponse> 
      schema: *ref_5
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getNull
        description: Get null string value value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putNull
    description: Set string value null
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringBody
        schema: *ref_2
        description: ''
        implementation: Client
        extensions:
          x-ms-requestBody-name: stringBody
        language: !<!Languages> 
          default:
            name: stringBody
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /string/null
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_4
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNull
        description: Set string value null
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getEmpty
    description: Get empty string value value ''
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /string/empty
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_7
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getEmpty
        description: Get empty string value value ''
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putEmpty
    description: Set string value empty ''
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringBody
        schema: *ref_2
        description: ''
        implementation: Client
        extensions:
          x-ms-requestBody-name: stringBody
        language: !<!Languages> 
          default:
            name: stringBody
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /string/empty
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_4
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putEmpty
        description: Set string value empty ''
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getMbcs
    description: Get mbcs string value '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /string/mbcs
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getMbcs
        description: Get mbcs string value '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putMbcs
    description: Set string value mbcs '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringBody
        schema: *ref_2
        description: ''
        implementation: Client
        extensions:
          x-ms-requestBody-name: stringBody
        language: !<!Languages> 
          default:
            name: stringBody
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /string/mbcs
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_4
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putMbcs
        description: Set string value mbcs '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getWhitespace
    description: Get string value with leading and trailing whitespace '<tab><space><space>Now is the time for all good men to come to the aid of their country<tab><space><space>'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /string/whitespace
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getWhitespace
        description: Get string value with leading and trailing whitespace '<tab><space><space>Now is the time for all good men to come to the aid of their country<tab><space><space>'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putWhitespace
    description: Set String value with leading and trailing whitespace '<tab><space><space>Now is the time for all good men to come to the aid of their country<tab><space><space>'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringBody
        schema: *ref_2
        description: ''
        implementation: Client
        extensions:
          x-ms-requestBody-name: stringBody
        language: !<!Languages> 
          default:
            name: stringBody
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /string/whitespace
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_4
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putWhitespace
        description: Set String value with leading and trailing whitespace '<tab><space><space>Now is the time for all good men to come to the aid of their country<tab><space><space>'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getNotProvided
    description: Get String value when no string value is sent in response payload
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /string/notProvided
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getNotProvided
        description: Get String value when no string value is sent in response payload
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getBase64Encoded
    description: Get value that is base64 encoded
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /string/base64Encoding
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_10
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getBase64Encoded
        description: Get value that is base64 encoded
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getBase64UrlEncoded
    description: Get value that is base64url encoded
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /string/base64UrlEncoding
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_10
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getBase64UrlEncoded
        description: Get value that is base64url encoded
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putBase64UrlEncoded
    description: Put value that is base64url encoded
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringBody
        schema: *ref_10
        description: ''
        implementation: Client
        extensions:
          x-ms-requestBody-name: stringBody
        language: !<!Languages> 
          default:
            name: stringBody
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /string/base64UrlEncoding
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_4
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putBase64UrlEncoded
        description: Put value that is base64url encoded
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getNullBase64UrlEncoded
    description: Get null value that is expected to be base64url encoded
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /string/nullBase64UrlEncoding
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_10
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getNullBase64UrlEncoded
        description: Get null value that is expected to be base64url encoded
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: string
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: enum
  operations:
  - !<!Operation> 
    $key: getNotExpandable
    description: 'Get enum value ''red color'' from enumeration of ''red color'', ''green-color'', ''blue_color''.'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /string/enum/notExpandable
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getNotExpandable
        description: 'Get enum value ''red color'' from enumeration of ''red color'', ''green-color'', ''blue_color''.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putNotExpandable
    description: 'Sends value ''red color'' from enumeration of ''red color'', ''green-color'', ''blue_color'''
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringBody
        schema: *ref_11
        description: ''
        implementation: Client
        extensions:
          x-ms-requestBody-name: stringBody
        language: !<!Languages> 
          default:
            name: stringBody
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /string/enum/notExpandable
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_4
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNotExpandable
        description: 'Sends value ''red color'' from enumeration of ''red color'', ''green-color'', ''blue_color'''
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getReferenced
    description: 'Get enum value ''red color'' from enumeration of ''red color'', ''green-color'', ''blue_color''.'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /string/enum/Referenced
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getReferenced
        description: 'Get enum value ''red color'' from enumeration of ''red color'', ''green-color'', ''blue_color''.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putReferenced
    description: 'Sends value ''red color'' from enumeration of ''red color'', ''green-color'', ''blue_color'''
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: enumStringBody
        schema: *ref_11
        description: ''
        implementation: Client
        extensions:
          x-ms-requestBody-name: enumStringBody
        language: !<!Languages> 
          default:
            name: enumStringBody
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /string/enum/Referenced
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_4
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putReferenced
        description: 'Sends value ''red color'' from enumeration of ''red color'', ''green-color'', ''blue_color'''
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getReferencedConstant
    description: Get value 'green-color' from the constant.
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /string/enum/ReferencedConstant
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getReferencedConstant
        description: Get value 'green-color' from the constant.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putReferencedConstant
    description: Sends value 'green-color' from a constant
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: enumStringBody
        schema: *ref_12
        description: ''
        implementation: Client
        extensions:
          x-ms-requestBody-name: enumStringBody
        language: !<!Languages> 
          default:
            name: enumStringBody
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /string/enum/ReferencedConstant
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_4
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putReferencedConstant
        description: Sends value 'green-color' from a constant
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: enum
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> 
    servers:
    - *ref_4
