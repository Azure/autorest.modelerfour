!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_1
    $key: Resource
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    children: !<!Relations> 
      all:
      - !<!ObjectSchema> &ref_2
        $key: Product
        type: object
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        parents: !<!Relations> 
          all:
          - *ref_1
          immediate:
          - *ref_1
        properties:
        - !<!Property> 
          $key: properties
          schema: !<!ObjectSchema> &ref_3
            $key: Product-properties
            type: object
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
            apiVersions:
            - !<!ApiVersion> 
              version: 1.0.0
            properties:
            - !<!Property> 
              $key: provisioningState
              schema: !<!StringSchema> &ref_0
                $key: CloudError-message
                type: string
                description: MISSING-SCHEMA-DESCRIPTION-STRING
                apiVersions:
                - !<!ApiVersion> 
                  version: 1.0.0
                language: !<!Languages> 
                  default:
                    name: CloudError-message
                    description: MISSING-SCHEMA-DESCRIPTION-STRING
                    header: Location
                protocol: !<!Protocols> {}
              description: PROPERTY-DESCRIPTION-MISSING
              serializedName: provisioningState
              language: !<!Languages> 
                default:
                  name: provisioningState
                  description: PROPERTY-DESCRIPTION-MISSING
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: provisioningStateValues
              schema: !<!SealedChoiceSchema> &ref_16
                $key: Product-properties-provisioningStateValues
                choices:
                - !<!ChoiceValue> 
                  value: Succeeded
                  language:
                    default:
                      name: Succeeded
                      description: ''
                - !<!ChoiceValue> 
                  value: Failed
                  language:
                    default:
                      name: Failed
                      description: ''
                - !<!ChoiceValue> 
                  value: canceled
                  language:
                    default:
                      name: canceled
                      description: ''
                - !<!ChoiceValue> 
                  value: Accepted
                  language:
                    default:
                      name: Accepted
                      description: ''
                - !<!ChoiceValue> 
                  value: Creating
                  language:
                    default:
                      name: Creating
                      description: ''
                - !<!ChoiceValue> 
                  value: Created
                  language:
                    default:
                      name: Created
                      description: ''
                - !<!ChoiceValue> 
                  value: Updating
                  language:
                    default:
                      name: Updating
                      description: ''
                - !<!ChoiceValue> 
                  value: Updated
                  language:
                    default:
                      name: Updated
                      description: ''
                - !<!ChoiceValue> 
                  value: Deleting
                  language:
                    default:
                      name: Deleting
                      description: ''
                - !<!ChoiceValue> 
                  value: Deleted
                  language:
                    default:
                      name: Deleted
                      description: ''
                - !<!ChoiceValue> 
                  value: OK
                  language:
                    default:
                      name: OK
                      description: ''
                type: sealed-choice
                description: MISSING-SCHEMA-DESCRIPTION-CHOICE
                apiVersions:
                - !<!ApiVersion> 
                  version: 1.0.0
                choiceType: !<!StringSchema> &ref_11
                  $key: string
                  type: string
                  description: ''
                  language: !<!Languages> 
                    default:
                      name: string
                      description: ''
                  protocol: !<!Protocols> {}
                language: !<!Languages> 
                  default:
                    name: Product-properties-provisioningStateValues
                    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
                protocol: !<!Protocols> {}
              description: PROPERTY-DESCRIPTION-MISSING
              readOnly: true
              serializedName: provisioningStateValues
              language: !<!Languages> 
                default:
                  name: provisioningStateValues
                  description: PROPERTY-DESCRIPTION-MISSING
              protocol: !<!Protocols> {}
            extensions:
              x-ms-client-flatten: true
            language: !<!Languages> 
              default:
                name: Product-properties
                description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
                namespace: Api10
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: properties
          language: !<!Languages> 
            default:
              name: properties
              description: PROPERTY-DESCRIPTION-MISSING
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: Product
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
            namespace: Api10
        protocol: !<!Protocols> {}
      immediate:
      - *ref_2
    properties:
    - !<!Property> 
      $key: id
      schema: !<!StringSchema> &ref_8
        $key: Resource-id
        type: string
        description: Resource Id
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Resource-id
            description: Resource Id
        protocol: !<!Protocols> {}
      description: Resource Id
      readOnly: true
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: Resource Id
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: type
      schema: !<!StringSchema> &ref_9
        $key: Resource-type
        type: string
        description: Resource Type
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Resource-type
            description: Resource Type
        protocol: !<!Protocols> {}
      description: Resource Type
      readOnly: true
      serializedName: type
      language: !<!Languages> 
        default:
          name: type
          description: Resource Type
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: tags
      schema: !<!DictionarySchema> &ref_15
        $key: Resource-tags
        type: dictionary
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        elementType: *ref_0
        language: !<!Languages> 
          default:
            name: Resource-tags
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: tags
      language: !<!Languages> 
        default:
          name: tags
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: location
      schema: *ref_0
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: location
      language: !<!Languages> 
        default:
          name: location
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: name
      schema: !<!StringSchema> &ref_10
        $key: Resource-name
        type: string
        description: Resource Name
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Resource-name
            description: Resource Name
        protocol: !<!Protocols> {}
      description: Resource Name
      readOnly: true
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: Resource Name
      protocol: !<!Protocols> {}
    extensions:
      x-ms-azure-resource: true
    language: !<!Languages> 
      default:
        name: Resource
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> 
    $key: Resource-tags
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: Resource-tags
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - *ref_2
  - *ref_3
  - !<!ObjectSchema> &ref_22
    $key: CloudError
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: status
      schema: !<!NumberSchema> &ref_19
        $key: typeForstatus
        type: integer
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForstatus
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: message
      schema: *ref_0
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    extensions:
      x-ms-external: true
    language: !<!Languages> 
      default:
        name: CloudError
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_25
    $key: Sku
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: name
      schema: *ref_0
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: id
      schema: *ref_0
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Sku
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_4
    $key: SubResource
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    children: !<!Relations> 
      all:
      - !<!ObjectSchema> &ref_5
        $key: SubProduct
        type: object
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        parents: !<!Relations> 
          all:
          - *ref_4
          immediate:
          - *ref_4
        properties:
        - !<!Property> 
          $key: properties
          schema: !<!ObjectSchema> &ref_6
            $key: SubProduct-properties
            type: object
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
            apiVersions:
            - !<!ApiVersion> 
              version: 1.0.0
            properties:
            - !<!Property> 
              $key: provisioningState
              schema: *ref_0
              description: PROPERTY-DESCRIPTION-MISSING
              serializedName: provisioningState
              language: !<!Languages> 
                default:
                  name: provisioningState
                  description: PROPERTY-DESCRIPTION-MISSING
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: provisioningStateValues
              schema: !<!SealedChoiceSchema> &ref_17
                $key: SubProduct-properties-provisioningStateValues
                choices:
                - !<!ChoiceValue> 
                  value: Succeeded
                  language:
                    default:
                      name: Succeeded
                      description: ''
                - !<!ChoiceValue> 
                  value: Failed
                  language:
                    default:
                      name: Failed
                      description: ''
                - !<!ChoiceValue> 
                  value: canceled
                  language:
                    default:
                      name: canceled
                      description: ''
                - !<!ChoiceValue> 
                  value: Accepted
                  language:
                    default:
                      name: Accepted
                      description: ''
                - !<!ChoiceValue> 
                  value: Creating
                  language:
                    default:
                      name: Creating
                      description: ''
                - !<!ChoiceValue> 
                  value: Created
                  language:
                    default:
                      name: Created
                      description: ''
                - !<!ChoiceValue> 
                  value: Updating
                  language:
                    default:
                      name: Updating
                      description: ''
                - !<!ChoiceValue> 
                  value: Updated
                  language:
                    default:
                      name: Updated
                      description: ''
                - !<!ChoiceValue> 
                  value: Deleting
                  language:
                    default:
                      name: Deleting
                      description: ''
                - !<!ChoiceValue> 
                  value: Deleted
                  language:
                    default:
                      name: Deleted
                      description: ''
                - !<!ChoiceValue> 
                  value: OK
                  language:
                    default:
                      name: OK
                      description: ''
                type: sealed-choice
                description: MISSING-SCHEMA-DESCRIPTION-CHOICE
                apiVersions:
                - !<!ApiVersion> 
                  version: 1.0.0
                choiceType: !<!StringSchema> &ref_13
                  $key: string
                  type: string
                  description: ''
                  language: !<!Languages> 
                    default:
                      name: string
                      description: ''
                  protocol: !<!Protocols> {}
                language: !<!Languages> 
                  default:
                    name: SubProduct-properties-provisioningStateValues
                    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
                protocol: !<!Protocols> {}
              description: PROPERTY-DESCRIPTION-MISSING
              readOnly: true
              serializedName: provisioningStateValues
              language: !<!Languages> 
                default:
                  name: provisioningStateValues
                  description: PROPERTY-DESCRIPTION-MISSING
              protocol: !<!Protocols> {}
            extensions:
              x-ms-client-flatten: true
            language: !<!Languages> 
              default:
                name: SubProduct-properties
                description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
                namespace: Api10
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: properties
          language: !<!Languages> 
            default:
              name: properties
              description: PROPERTY-DESCRIPTION-MISSING
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: SubProduct
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
            namespace: Api10
        protocol: !<!Protocols> {}
      immediate:
      - *ref_5
    properties:
    - !<!Property> 
      $key: id
      schema: !<!StringSchema> &ref_12
        $key: SubResource-id
        type: string
        description: Sub Resource Id
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: SubResource-id
            description: Sub Resource Id
        protocol: !<!Protocols> {}
      description: Sub Resource Id
      readOnly: true
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: Sub Resource Id
      protocol: !<!Protocols> {}
    extensions:
      x-ms-azure-resource: true
    language: !<!Languages> 
      default:
        name: SubResource
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - *ref_5
  - *ref_6
  - !<!ObjectSchema> 
    $key: OperationResult
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: status
      schema: !<!SealedChoiceSchema> &ref_18
        $key: OperationResult-status
        choices:
        - !<!ChoiceValue> 
          value: Succeeded
          language:
            default:
              name: Succeeded
              description: ''
        - !<!ChoiceValue> 
          value: Failed
          language:
            default:
              name: Failed
              description: ''
        - !<!ChoiceValue> 
          value: canceled
          language:
            default:
              name: canceled
              description: ''
        - !<!ChoiceValue> 
          value: Accepted
          language:
            default:
              name: Accepted
              description: ''
        - !<!ChoiceValue> 
          value: Creating
          language:
            default:
              name: Creating
              description: ''
        - !<!ChoiceValue> 
          value: Created
          language:
            default:
              name: Created
              description: ''
        - !<!ChoiceValue> 
          value: Updating
          language:
            default:
              name: Updating
              description: ''
        - !<!ChoiceValue> 
          value: Updated
          language:
            default:
              name: Updated
              description: ''
        - !<!ChoiceValue> 
          value: Deleting
          language:
            default:
              name: Deleting
              description: ''
        - !<!ChoiceValue> 
          value: Deleted
          language:
            default:
              name: Deleted
              description: ''
        - !<!ChoiceValue> 
          value: OK
          language:
            default:
              name: OK
              description: ''
        type: sealed-choice
        description: The status of the request
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        choiceType: !<!StringSchema> &ref_14
          $key: string
          type: string
          description: The status of the request
          language: !<!Languages> 
            default:
              name: string
              description: The status of the request
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: OperationResult-status
            description: The status of the request
        protocol: !<!Protocols> {}
      description: The status of the request
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: The status of the request
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: error
      schema: !<!ObjectSchema> &ref_7
        $key: OperationResult-error
        type: object
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        properties:
        - !<!Property> 
          $key: code
          schema: !<!NumberSchema> &ref_20
            $key: typeForcode
            type: integer
            description: The error code for an operation failure
            precision: 32
            language: !<!Languages> 
              default:
                name: typeForcode
                description: The error code for an operation failure
            protocol: !<!Protocols> {}
          description: The error code for an operation failure
          serializedName: code
          language: !<!Languages> 
            default:
              name: code
              description: The error code for an operation failure
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: message
          schema: *ref_0
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: message
          language: !<!Languages> 
            default:
              name: message
              description: PROPERTY-DESCRIPTION-MISSING
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: OperationResult-error
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
            namespace: Api10
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: error
      language: !<!Languages> 
        default:
          name: error
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: OperationResult
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - *ref_7
  dictionaries:
  - *ref_15
  numbers:
  - *ref_19
  - !<!NumberSchema> &ref_23
    $key: paths·lro-putasync-retry-succeeded·put·responses·200·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-putasync-retry-succeeded·put·responses·200·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_24
    $key: paths·lro-putasync-retry-failed·put·responses·200·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-putasync-retry-failed·put·responses·200·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_26
    $key: paths·lro-delete-provisioning-202-accepted-200-succeeded·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-delete-provisioning-202-accepted-200-succeeded·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_27
    $key: paths·lro-delete-provisioning-202-deleting-200-failed·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-delete-provisioning-202-deleting-200-failed·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_28
    $key: paths·lro-delete-provisioning-202-deleting-200-canceled·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-delete-provisioning-202-deleting-200-canceled·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_29
    $key: paths·lro-delete-202-retry-200·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-delete-202-retry-200·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_30
    $key: paths·lro-delete-202-noretry-204·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-delete-202-noretry-204·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_31
    $key: paths·lro-deleteasync-retry-succeeded·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-deleteasync-retry-succeeded·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_32
    $key: paths·lro-deleteasync-noretry-succeeded·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-deleteasync-noretry-succeeded·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_33
    $key: paths·lro-deleteasync-retry-failed·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-deleteasync-retry-failed·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_34
    $key: paths·lro-deleteasync-retry-canceled·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-deleteasync-retry-canceled·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_35
    $key: paths·lro-post-202-retry-200·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-post-202-retry-200·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_36
    $key: paths·lro-post-202-noretry-204·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-post-202-noretry-204·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_37
    $key: paths·lro-postasync-retry-succeeded·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-postasync-retry-succeeded·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_38
    $key: paths·lro-postasync-noretry-succeeded·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-postasync-noretry-succeeded·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_39
    $key: paths·lro-postasync-retry-failed·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-postasync-retry-failed·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_40
    $key: paths·lro-postasync-retry-canceled·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-postasync-retry-canceled·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_41
    $key: paths·lro-retryerror-putasync-retry-succeeded·put·responses·200·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-retryerror-putasync-retry-succeeded·put·responses·200·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_42
    $key: paths·lro-retryerror-delete-provisioning-202-accepted-200-succeeded·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-retryerror-delete-provisioning-202-accepted-200-succeeded·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_43
    $key: paths·lro-retryerror-delete-202-retry-200·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-retryerror-delete-202-retry-200·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_44
    $key: paths·lro-retryerror-deleteasync-retry-succeeded·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-retryerror-deleteasync-retry-succeeded·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_45
    $key: paths·lro-retryerror-post-202-retry-200·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-retryerror-post-202-retry-200·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_46
    $key: paths·lro-retryerror-postasync-retry-succeeded·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-retryerror-postasync-retry-succeeded·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_47
    $key: paths·lro-nonretryerror-putasync-retry-400·put·responses·200·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-nonretryerror-putasync-retry-400·put·responses·200·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_48
    $key: paths·lro-nonretryerror-delete-400·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-nonretryerror-delete-400·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_49
    $key: paths·lro-nonretryerror-delete-202-retry-400·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-nonretryerror-delete-202-retry-400·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_50
    $key: paths·lro-nonretryerror-deleteasync-retry-400·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-nonretryerror-deleteasync-retry-400·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_51
    $key: paths·lro-nonretryerror-post-400·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-nonretryerror-post-400·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_52
    $key: paths·lro-nonretryerror-post-202-retry-400·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-nonretryerror-post-202-retry-400·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_53
    $key: paths·lro-nonretryerror-postasync-retry-400·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-nonretryerror-postasync-retry-400·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_54
    $key: paths·lro-error-putasync-retry-nostatus·put·responses·200·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-putasync-retry-nostatus·put·responses·200·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_55
    $key: paths·lro-error-putasync-retry-nostatuspayload·put·responses·200·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-putasync-retry-nostatuspayload·put·responses·200·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_56
    $key: paths·lro-error-deleteasync-retry-nostatus·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-deleteasync-retry-nostatus·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_57
    $key: paths·lro-error-post-202-nolocation·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-post-202-nolocation·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_58
    $key: paths·lro-error-postasync-retry-nopayload·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-postasync-retry-nopayload·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_59
    $key: paths·lro-error-putasync-retry-invalidheader·put·responses·200·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-putasync-retry-invalidheader·put·responses·200·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_60
    $key: paths·lro-error-putasync-retry-invalidjsonpolling·put·responses·200·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-putasync-retry-invalidjsonpolling·put·responses·200·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_61
    $key: paths·lro-error-delete-202-retry-invalidheader·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-delete-202-retry-invalidheader·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_62
    $key: paths·lro-error-deleteasync-retry-invalidheader·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-deleteasync-retry-invalidheader·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_63
    $key: paths·lro-error-deleteasync-retry-invalidjsonpolling·delete·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-deleteasync-retry-invalidjsonpolling·delete·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_64
    $key: paths·lro-error-post-202-retry-invalidheader·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-post-202-retry-invalidheader·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_65
    $key: paths·lro-error-postasync-retry-invalidheader·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-postasync-retry-invalidheader·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_66
    $key: paths·lro-error-postasync-retry-invalidjsonpolling·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-error-postasync-retry-invalidjsonpolling·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_67
    $key: paths·lro-customheader-putasync-retry-succeeded·put·responses·200·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-customheader-putasync-retry-succeeded·put·responses·200·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_68
    $key: paths·lro-customheader-post-202-retry-200·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-customheader-post-202-retry-200·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_69
    $key: paths·lro-customheader-postasync-retry-succeeded·post·responses·202·headers·retry_after·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·lro-customheader-postasync-retry-succeeded·post·responses·202·headers·retry_after·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        header: Retry-After
    protocol: !<!Protocols> {}
  - *ref_20
  sealedChoices:
  - *ref_16
  - *ref_17
  - *ref_18
  strings:
  - *ref_8
  - *ref_9
  - *ref_0
  - *ref_10
  - *ref_11
  - *ref_12
  - *ref_13
  - *ref_14
info: !<!Info> 
  description: Long-running Operation for AutoRest
  title: lro
operationGroups:
- !<!OperationGroup> 
  $key: LROs
  operations:
  - !<!Operation> 
    $key: put200Succeeded
    description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Succeeded’.'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/200/succeeded
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - !<!HttpServer> &ref_21
            url: 'http://localhost:3000/'
            language:
              default:
                name: server-name
                description: MISSING-SERVER-DESCRIPTION
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put200Succeeded
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Succeeded’.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put200SucceededNoState
    description: 'Long running put request, service returns a 200 to the initial request, with an entity that does not contain ProvisioningState=’Succeeded’.'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/200/succeeded/nostate
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put200SucceededNoState
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that does not contain ProvisioningState=’Succeeded’.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put202Retry200
    description: 'Long running put request, service returns a 202 to the initial request, with a location header that points to a polling URL that returns a 200 and an entity that doesn''t contains ProvisioningState'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/202/retry/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put202Retry200
        description: 'Long running put request, service returns a 202 to the initial request, with a location header that points to a polling URL that returns a 200 and an entity that doesn''t contains ProvisioningState'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put201CreatingSucceeded200
    description: 'Long running put request, service returns a 201 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/201/creating/succeeded/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put201CreatingSucceeded200
        description: 'Long running put request, service returns a 201 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put200UpdatingSucceeded204
    description: 'Long running put request, service returns a 201 to the initial request, with an entity that contains ProvisioningState=’Updating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/200/updating/succeeded/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put200UpdatingSucceeded204
        description: 'Long running put request, service returns a 201 to the initial request, with an entity that contains ProvisioningState=’Updating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put201CreatingFailed200
    description: 'Long running put request, service returns a 201 to the initial request, with an entity that contains ProvisioningState=’Created’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Failed’'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/201/created/failed/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put201CreatingFailed200
        description: 'Long running put request, service returns a 201 to the initial request, with an entity that contains ProvisioningState=’Created’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Failed’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put200Acceptedcanceled200
    description: 'Long running put request, service returns a 201 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Canceled’'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/200/accepted/canceled/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put200Acceptedcanceled200
        description: 'Long running put request, service returns a 201 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Canceled’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putNoHeaderInRetry
    description: 'Long running put request, service returns a 202 to the initial request with location header. Subsequent calls to operation status do not contain location header.'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/noheader/202/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNoHeaderInRetry
        description: 'Long running put request, service returns a 202 to the initial request with location header. Subsequent calls to operation status do not contain location header.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncRetrySucceeded
    description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putasync/retry/succeeded
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_23
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRetrySucceeded
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncNoRetrySucceeded
    description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putasync/noretry/succeeded
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncNoRetrySucceeded
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncRetryFailed
    description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putasync/retry/failed
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_24
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRetryFailed
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncNoRetrycanceled
    description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putasync/noretry/canceled
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncNoRetrycanceled
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncNoHeaderInRetry
    description: 'Long running put request, service returns a 202 to the initial request with Azure-AsyncOperation header. Subsequent calls to operation status do not contain Azure-AsyncOperation header.'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putasync/noheader/201/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncNoHeaderInRetry
        description: 'Long running put request, service returns a 202 to the initial request with Azure-AsyncOperation header. Subsequent calls to operation status do not contain Azure-AsyncOperation header.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putNonResource
    description: Long running put request with non resource.
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: sku
        schema: *ref_25
        description: sku to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: sku
        language: !<!Languages> 
          default:
            name: sku
            description: sku to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putnonresource/202/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_25
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNonResource
        description: Long running put request with non resource.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncNonResource
    description: Long running put request with non resource.
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: sku
        schema: *ref_25
        description: Sku to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: sku
        language: !<!Languages> 
          default:
            name: sku
            description: Sku to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putnonresourceasync/202/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_25
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncNonResource
        description: Long running put request with non resource.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putSubResource
    description: Long running put request with sub resource.
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_5
        description: Sub Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Sub Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putsubresource/202/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_5
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putSubResource
        description: Long running put request with sub resource.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncSubResource
    description: Long running put request with sub resource.
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_5
        description: Sub Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Sub Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putsubresourceasync/202/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_5
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncSubResource
        description: Long running put request with sub resource.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteProvisioning202Accepted200Succeeded
    description: 'Long running delete request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Accepted’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/delete/provisioning/202/accepted/200/succeeded
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_26
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteProvisioning202Accepted200Succeeded
        description: 'Long running delete request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Accepted’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteProvisioning202DeletingFailed200
    description: 'Long running delete request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Failed’'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/delete/provisioning/202/deleting/200/failed
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_27
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteProvisioning202DeletingFailed200
        description: 'Long running delete request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Failed’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteProvisioning202Deletingcanceled200
    description: 'Long running delete request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Canceled’'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/delete/provisioning/202/deleting/200/canceled
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_28
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteProvisioning202Deletingcanceled200
        description: 'Long running delete request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Canceled’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete204Succeeded
    description: Long running delete succeeds and returns right away
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/delete/204/succeeded
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete204Succeeded
        description: Long running delete succeeds and returns right away
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete202Retry200
    description: 'Long running delete request, service returns a 202 to the initial request. Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/delete/202/retry/200
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_29
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete202Retry200
        description: 'Long running delete request, service returns a 202 to the initial request. Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete202NoRetry204
    description: 'Long running delete request, service returns a 202 to the initial request. Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/delete/202/noretry/204
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_30
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete202NoRetry204
        description: 'Long running delete request, service returns a 202 to the initial request. Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteNoHeaderInRetry
    description: 'Long running delete request, service returns a location header in the initial request. Subsequent calls to operation status do not contain location header.'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/delete/noheader
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          statusCodes:
          - '202'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteNoHeaderInRetry
        description: 'Long running delete request, service returns a location header in the initial request. Subsequent calls to operation status do not contain location header.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteAsyncNoHeaderInRetry
    description: 'Long running delete request, service returns an Azure-AsyncOperation header in the initial request. Subsequent calls to operation status do not contain Azure-AsyncOperation header.'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/deleteasync/noheader/202/204
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          statusCodes:
          - '202'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncNoHeaderInRetry
        description: 'Long running delete request, service returns an Azure-AsyncOperation header in the initial request. Subsequent calls to operation status do not contain Azure-AsyncOperation header.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteAsyncRetrySucceeded
    description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/deleteasync/retry/succeeded
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_31
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRetrySucceeded
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteAsyncNoRetrySucceeded
    description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/deleteasync/noretry/succeeded
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_32
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncNoRetrySucceeded
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteAsyncRetryFailed
    description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/deleteasync/retry/failed
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_33
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRetryFailed
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteAsyncRetrycanceled
    description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/deleteasync/retry/canceled
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_34
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRetrycanceled
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post200WithPayload
    description: 'Long running post request, service returns a 202 to the initial request, with ''Location'' header. Poll returns a 200 with a response body after success.'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/post/payload/200
          method: post
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_25
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_25
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: post200WithPayload
        description: 'Long running post request, service returns a 202 to the initial request, with ''Location'' header. Poll returns a 200 with a response body after success.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post202Retry200
    description: 'Long running post request, service returns a 202 to the initial request, with ''Location'' and ''Retry-After'' headers, Polls return a 200 with a response body after success'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/post/202/retry/200
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_35
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202Retry200
        description: 'Long running post request, service returns a 202 to the initial request, with ''Location'' and ''Retry-After'' headers, Polls return a 200 with a response body after success'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post202NoRetry204
    description: 'Long running post request, service returns a 202 to the initial request, with ''Location'' header, 204 with noresponse body after success'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/post/202/noretry/204
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_36
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202NoRetry204
        description: 'Long running post request, service returns a 202 to the initial request, with ''Location'' header, 204 with noresponse body after success'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postDoubleHeadersFinalLocationGet
    description: 'Long running post request, service returns a 202 to the initial request with both Location and Azure-Async header. Poll Azure-Async and it''s success. Should poll Location to get the final object'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/LROPostDoubleHeadersFinalLocationGet
          method: post
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    language: !<!Languages> 
      default:
        name: postDoubleHeadersFinalLocationGet
        description: 'Long running post request, service returns a 202 to the initial request with both Location and Azure-Async header. Poll Azure-Async and it''s success. Should poll Location to get the final object'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postDoubleHeadersFinalAzureHeaderGet
    description: 'Long running post request, service returns a 202 to the initial request with both Location and Azure-Async header. Poll Azure-Async and it''s success. Should NOT poll Location to get the final object'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/LROPostDoubleHeadersFinalAzureHeaderGet
          method: post
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    language: !<!Languages> 
      default:
        name: postDoubleHeadersFinalAzureHeaderGet
        description: 'Long running post request, service returns a 202 to the initial request with both Location and Azure-Async header. Poll Azure-Async and it''s success. Should NOT poll Location to get the final object'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postDoubleHeadersFinalAzureHeaderGetDefault
    description: >-
      Long running post request, service returns a 202 to the initial request with both Location and Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final object if you support initial Autorest
      behavior.
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/LROPostDoubleHeadersFinalAzureHeaderGetDefault
          method: post
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: postDoubleHeadersFinalAzureHeaderGetDefault
        description: >-
          Long running post request, service returns a 202 to the initial request with both Location and Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final object if you support initial Autorest
          behavior.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postAsyncRetrySucceeded
    description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/postasync/retry/succeeded
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_37
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRetrySucceeded
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postAsyncNoRetrySucceeded
    description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/postasync/noretry/succeeded
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_38
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncNoRetrySucceeded
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postAsyncRetryFailed
    description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/postasync/retry/failed
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_39
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRetryFailed
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postAsyncRetrycanceled
    description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/postasync/retry/canceled
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_40
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRetrycanceled
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: LROs
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: LRORetrys
  operations:
  - !<!Operation> 
    $key: put201CreatingSucceeded200
    description: >-
      Long running put request, service returns a 500, then a 201 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
      ProvisioningState=’Succeeded’
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/retryerror/put/201/creating/succeeded/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put201CreatingSucceeded200
        description: >-
          Long running put request, service returns a 500, then a 201 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
          ProvisioningState=’Succeeded’
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncRelativeRetrySucceeded
    description: 'Long running put request, service returns a 500, then a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/retryerror/putasync/retry/succeeded
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_41
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRelativeRetrySucceeded
        description: 'Long running put request, service returns a 500, then a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteProvisioning202Accepted200Succeeded
    description: >-
      Long running delete request, service returns a 500, then a  202 to the initial request, with an entity that contains ProvisioningState=’Accepted’.  Polls return this value until the last poll returns a ‘200’ with
      ProvisioningState=’Succeeded’
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/retryerror/delete/provisioning/202/accepted/200/succeeded
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_42
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteProvisioning202Accepted200Succeeded
        description: >-
          Long running delete request, service returns a 500, then a  202 to the initial request, with an entity that contains ProvisioningState=’Accepted’.  Polls return this value until the last poll returns a ‘200’ with
          ProvisioningState=’Succeeded’
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete202Retry200
    description: 'Long running delete request, service returns a 500, then a 202 to the initial request. Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/retryerror/delete/202/retry/200
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_43
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete202Retry200
        description: 'Long running delete request, service returns a 500, then a 202 to the initial request. Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteAsyncRelativeRetrySucceeded
    description: 'Long running delete request, service returns a 500, then a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/retryerror/deleteasync/retry/succeeded
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_44
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRelativeRetrySucceeded
        description: 'Long running delete request, service returns a 500, then a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post202Retry200
    description: 'Long running post request, service returns a 500, then a 202 to the initial request, with ''Location'' and ''Retry-After'' headers, Polls return a 200 with a response body after success'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/retryerror/post/202/retry/200
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_45
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202Retry200
        description: 'Long running post request, service returns a 500, then a 202 to the initial request, with ''Location'' and ''Retry-After'' headers, Polls return a 200 with a response body after success'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postAsyncRelativeRetrySucceeded
    description: 'Long running post request, service returns a 500, then a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/retryerror/postasync/retry/succeeded
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_46
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRelativeRetrySucceeded
        description: 'Long running post request, service returns a 500, then a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: LRORetrys
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: LROSADs
  operations:
  - !<!Operation> 
    $key: putNonRetry400
    description: 'Long running put request, service returns a 400 to the initial request'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/put/400
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNonRetry400
        description: 'Long running put request, service returns a 400 to the initial request'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putNonRetry201Creating400
    description: 'Long running put request, service returns a Product with ''ProvisioningState'' = ''Creating'' and 201 response code'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/put/201/creating/400
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNonRetry201Creating400
        description: 'Long running put request, service returns a Product with ''ProvisioningState'' = ''Creating'' and 201 response code'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putNonRetry201Creating400InvalidJson
    description: 'Long running put request, service returns a Product with ''ProvisioningState'' = ''Creating'' and 201 response code'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/put/201/creating/400/invalidjson
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNonRetry201Creating400InvalidJson
        description: 'Long running put request, service returns a Product with ''ProvisioningState'' = ''Creating'' and 201 response code'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncRelativeRetry400
    description: 'Long running put request, service returns a 200 with ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/putasync/retry/400
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_47
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRelativeRetry400
        description: 'Long running put request, service returns a 200 with ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteNonRetry400
    description: 'Long running delete request, service returns a 400 with an error body'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/nonretryerror/delete/400
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_48
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteNonRetry400
        description: 'Long running delete request, service returns a 400 with an error body'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete202NonRetry400
    description: 'Long running delete request, service returns a 202 with a location header'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/nonretryerror/delete/202/retry/400
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_49
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete202NonRetry400
        description: 'Long running delete request, service returns a 202 with a location header'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteAsyncRelativeRetry400
    description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/nonretryerror/deleteasync/retry/400
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_50
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRelativeRetry400
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postNonRetry400
    description: 'Long running post request, service returns a 400 with no error body'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/post/400
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_51
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postNonRetry400
        description: 'Long running post request, service returns a 400 with no error body'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post202NonRetry400
    description: 'Long running post request, service returns a 202 with a location header'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/post/202/retry/400
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_52
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202NonRetry400
        description: 'Long running post request, service returns a 202 with a location header'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postAsyncRelativeRetry400
    description: 'Long running post request, service returns a 202 to the initial request Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/postasync/retry/400
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_53
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRelativeRetry400
        description: 'Long running post request, service returns a 202 to the initial request Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putError201NoProvisioningStatePayload
    description: 'Long running put request, service returns a 201 to the initial request with no payload'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/put/201/noprovisioningstatepayload
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putError201NoProvisioningStatePayload
        description: 'Long running put request, service returns a 201 to the initial request with no payload'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncRelativeRetryNoStatus
    description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/putasync/retry/nostatus
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_54
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRelativeRetryNoStatus
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncRelativeRetryNoStatusPayload
    description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/putasync/retry/nostatuspayload
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_55
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRelativeRetryNoStatusPayload
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete204Succeeded
    description: 'Long running delete request, service returns a 204 to the initial request, indicating success.'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/error/delete/204/nolocation
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete204Succeeded
        description: 'Long running delete request, service returns a 204 to the initial request, indicating success.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteAsyncRelativeRetryNoStatus
    description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/error/deleteasync/retry/nostatus
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_56
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRelativeRetryNoStatus
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post202NoLocation
    description: 'Long running post request, service returns a 202 to the initial request, without a location header.'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/post/202/nolocation
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_57
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202NoLocation
        description: 'Long running post request, service returns a 202 to the initial request, without a location header.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postAsyncRelativeRetryNoPayload
    description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/postasync/retry/nopayload
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_58
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRelativeRetryNoPayload
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put200InvalidJson
    description: 'Long running put request, service returns a 200 to the initial request, with an entity that is not a valid json'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/put/200/invalidjson
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put200InvalidJson
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that is not a valid json'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncRelativeRetryInvalidHeader
    description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. The endpoint indicated in the Azure-AsyncOperation header is invalid.'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/putasync/retry/invalidheader
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_59
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRelativeRetryInvalidHeader
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. The endpoint indicated in the Azure-AsyncOperation header is invalid.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putAsyncRelativeRetryInvalidJsonPolling
    description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/putasync/retry/invalidjsonpolling
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_60
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRelativeRetryInvalidJsonPolling
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete202RetryInvalidHeader
    description: 'Long running delete request, service returns a 202 to the initial request receing a reponse with an invalid ''Location'' and ''Retry-After'' headers'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/error/delete/202/retry/invalidheader
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_61
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete202RetryInvalidHeader
        description: 'Long running delete request, service returns a 202 to the initial request receing a reponse with an invalid ''Location'' and ''Retry-After'' headers'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteAsyncRelativeRetryInvalidHeader
    description: 'Long running delete request, service returns a 202 to the initial request. The endpoint indicated in the Azure-AsyncOperation header is invalid'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/error/deleteasync/retry/invalidheader
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_62
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRelativeRetryInvalidHeader
        description: 'Long running delete request, service returns a 202 to the initial request. The endpoint indicated in the Azure-AsyncOperation header is invalid'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: deleteAsyncRelativeRetryInvalidJsonPolling
    description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /lro/error/deleteasync/retry/invalidjsonpolling
          method: delete
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_63
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRelativeRetryInvalidJsonPolling
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post202RetryInvalidHeader
    description: 'Long running post request, service returns a 202 to the initial request, with invalid ''Location'' and ''Retry-After'' headers.'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/post/202/retry/invalidheader
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_64
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202RetryInvalidHeader
        description: 'Long running post request, service returns a 202 to the initial request, with invalid ''Location'' and ''Retry-After'' headers.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postAsyncRelativeRetryInvalidHeader
    description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. The endpoint indicated in the Azure-AsyncOperation header is invalid.'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/postasync/retry/invalidheader
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_65
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRelativeRetryInvalidHeader
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. The endpoint indicated in the Azure-AsyncOperation header is invalid.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postAsyncRelativeRetryInvalidJsonPolling
    description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/postasync/retry/invalidjsonpolling
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_66
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRelativeRetryInvalidJsonPolling
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: LROSADs
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: LROsCustomHeader
  operations:
  - !<!Operation> 
    $key: putAsyncRetrySucceeded
    description: >-
      x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all requests. Long running put request, service returns a 200 to the initial request, with an entity that contains
      ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/customheader/putasync/retry/succeeded
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_67
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRetrySucceeded
        description: >-
          x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all requests. Long running put request, service returns a 200 to the initial request, with an entity that contains
          ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put201CreatingSucceeded200
    description: >-
      x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all requests. Long running put request, service returns a 201 to the initial request, with an entity that contains
      ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/customheader/put/201/creating/succeeded/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_2
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put201CreatingSucceeded200
        description: >-
          x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all requests. Long running put request, service returns a 201 to the initial request, with an entity that contains
          ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post202Retry200
    description: >-
      x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all requests. Long running post request, service returns a 202 to the initial request, with 'Location' and 'Retry-After' headers, Polls
      return a 200 with a response body after success
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/customheader/post/202/retry/200
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_68
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202Retry200
        description: >-
          x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all requests. Long running post request, service returns a 202 to the initial request, with 'Location' and 'Retry-After' headers, Polls
          return a 200 with a response body after success
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postAsyncRetrySucceeded
    description: >-
      x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all requests. Long running post request, service returns a 202 to the initial request, with an entity that contains
      ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: product
        schema: *ref_2
        description: Product to put
        implementation: Client
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/customheader/postasync/retry/succeeded
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_21
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_0
          - *ref_0
          - *ref_69
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRetrySucceeded
        description: >-
          x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all requests. Long running post request, service returns a 202 to the initial request, with an entity that contains
          ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: LROsCustomHeader
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> 
    servers:
    - *ref_21
