!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_33
    $key: Error
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: status
      schema: !<!NumberSchema> &ref_8
        $key: typeForstatus
        type: integer
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForstatus
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: message
      schema: !<!StringSchema> &ref_9
        $key: Error-message
        type: string
        description: MISSING-SCHEMA-DESCRIPTION-STRING
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Error-message
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Error
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_6
    $key: MyException
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    children: !<!Relations> 
      all:
      - !<!ObjectSchema> &ref_7
        $key: B
        type: object
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        parents: !<!Relations> 
          all:
          - *ref_6
          immediate:
          - *ref_6
        properties:
        - !<!Property> 
          $key: textStatusCode
          schema: !<!StringSchema> &ref_27
            $key: B-textStatusCode
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
            - !<!ApiVersion> 
              version: 1.0.0
            language: !<!Languages> 
              default:
                name: B-textStatusCode
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: textStatusCode
          language: !<!Languages> 
            default:
              name: textStatusCode
              description: PROPERTY-DESCRIPTION-MISSING
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: B
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
            namespace: Api10
        protocol: !<!Protocols> {}
      immediate:
      - *ref_7
    properties:
    - !<!Property> 
      $key: statusCode
      schema: !<!StringSchema> &ref_26
        $key: A-statusCode
        type: string
        description: MISSING-SCHEMA-DESCRIPTION-STRING
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: A-statusCode
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: statusCode
      language: !<!Languages> 
        default:
          name: statusCode
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    extensions:
      x-ms-client-name: MyException
    language: !<!Languages> 
      default:
        name: MyException
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - *ref_7
  - !<!ObjectSchema> &ref_98
    $key: C
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: httpCode
      schema: !<!StringSchema> &ref_28
        $key: C-httpCode
        type: string
        description: MISSING-SCHEMA-DESCRIPTION-STRING
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: C-httpCode
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: httpCode
      language: !<!Languages> 
        default:
          name: httpCode
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: C
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_99
    $key: D
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: httpStatusCode
      schema: !<!StringSchema> &ref_29
        $key: D-httpStatusCode
        type: string
        description: MISSING-SCHEMA-DESCRIPTION-STRING
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: D-httpStatusCode
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: httpStatusCode
      language: !<!Languages> 
        default:
          name: httpStatusCode
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: D
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  arrays:
  - !<!ArraySchema> &ref_54
    $key: paths·http-redirect-300·get·responses·300·content·application-json·schema
    type: array
    description: 'A list of location options for the request [''/http/success/get/200'']'
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: !<!StringSchema> &ref_30
      $key: get-300-application-json-itemsItem
      type: string
      description: MISSING-SCHEMA-DESCRIPTION-STRING
      apiVersions:
      - !<!ApiVersion> 
        version: 1.0.0
      language: !<!Languages> 
        default:
          name: get-300-application-json-itemsItem
          description: MISSING-SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-300·get·responses·300·content·application-json·schema
        description: 'A list of location options for the request [''/http/success/get/200'']'
    protocol: !<!Protocols> {}
  booleans:
  - !<!BooleanSchema> &ref_0
    $key: boolean
    type: boolean
    description: Simple boolean value true
    language: !<!Languages> 
      default:
        name: boolean
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_1
    $key: boolean
    type: boolean
    description: Simple boolean value true
    language: !<!Languages> 
      default:
        name: boolean
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_2
    $key: boolean
    type: boolean
    description: Simple boolean value true
    language: !<!Languages> 
      default:
        name: boolean
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_3
    $key: boolean
    type: boolean
    description: Simple boolean value true
    language: !<!Languages> 
      default:
        name: boolean
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_4
    $key: boolean
    type: boolean
    description: Simple boolean value true
    language: !<!Languages> 
      default:
        name: boolean
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_38
    $key: paths·http-success-200·put·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-200·put·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_39
    $key: paths·http-success-200·patch·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-200·patch·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_40
    $key: paths·http-success-200·post·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-200·post·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_41
    $key: paths·http-success-200·delete·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-200·delete·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_42
    $key: paths·http-success-201·put·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-201·put·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_43
    $key: paths·http-success-201·post·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-201·post·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_44
    $key: paths·http-success-202·put·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-202·put·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_45
    $key: paths·http-success-202·patch·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-202·patch·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_46
    $key: paths·http-success-202·post·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-202·post·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_47
    $key: paths·http-success-202·delete·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-202·delete·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_48
    $key: paths·http-success-204·put·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-204·put·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_49
    $key: paths·http-success-204·patch·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-204·patch·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_51
    $key: paths·http-success-204·post·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-204·post·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_50
    $key: paths·http-success-204·delete·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-success-204·delete·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_57
    $key: paths·http-redirect-301·put·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-redirect-301·put·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_61
    $key: paths·http-redirect-302·patch·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-redirect-302·patch·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_63
    $key: paths·http-redirect-303·post·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-redirect-303·post·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_74
    $key: paths·http-redirect-307·put·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-redirect-307·put·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_68
    $key: paths·http-redirect-307·patch·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-redirect-307·patch·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_70
    $key: paths·http-redirect-307·post·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-redirect-307·post·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_72
    $key: paths·http-redirect-307·delete·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-redirect-307·delete·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_76
    $key: paths·http-failure-client-400·put·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-400·put·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_77
    $key: paths·http-failure-client-400·patch·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-400·patch·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_78
    $key: paths·http-failure-client-400·post·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-400·post·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_79
    $key: paths·http-failure-client-400·delete·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-400·delete·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_80
    $key: paths·http-failure-client-404·put·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-404·put·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_81
    $key: paths·http-failure-client-405·patch·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-405·patch·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_82
    $key: paths·http-failure-client-406·post·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-406·post·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_83
    $key: paths·http-failure-client-407·delete·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-407·delete·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_84
    $key: paths·http-failure-client-409·put·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-409·put·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_85
    $key: paths·http-failure-client-413·put·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-413·put·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_86
    $key: paths·http-failure-client-414·patch·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-414·patch·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_87
    $key: paths·http-failure-client-415·post·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-415·post·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_88
    $key: paths·http-failure-client-417·delete·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-client-417·delete·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_89
    $key: paths·http-failure-server-505·post·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-server-505·post·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_90
    $key: paths·http-failure-server-505·delete·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-failure-server-505·delete·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_91
    $key: paths·http-retry-500·put·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-retry-500·put·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_92
    $key: paths·http-retry-500·patch·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-retry-500·patch·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_5
    $key: boolean
    type: boolean
    description: Simple boolean value true
    language: !<!Languages> 
      default:
        name: boolean
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_94
    $key: paths·http-retry-503·post·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-retry-503·post·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_95
    $key: paths·http-retry-503·delete·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-retry-503·delete·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_96
    $key: paths·http-retry-504·put·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-retry-504·put·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_97
    $key: paths·http-retry-504·patch·requestbody·content·application-json·schema
    type: boolean
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·http-retry-504·patch·requestbody·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  constants:
  - !<!ConstantSchema> &ref_32
    $key: paths·http-failure-emptybody-error·get·responses·200·content·application-json·schema
    type: constant
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: true
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_0
    language: !<!Languages> 
      default:
        name: paths·http-failure-emptybody-error·get·responses·200·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_34
    $key: paths·http-failure-nomodel-error·get·responses·200·content·application-json·schema
    type: constant
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: true
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: paths·http-failure-nomodel-error·get·responses·200·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_35
    $key: paths·http-failure-nomodel-empty·get·responses·200·content·application-json·schema
    type: constant
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: true
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: paths·http-failure-nomodel-empty·get·responses·200·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_36
    $key: paths·http-success-200·get·responses·200·content·application-json·schema
    type: constant
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: true
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_3
    language: !<!Languages> 
      default:
        name: paths·http-success-200·get·responses·200·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_37
    $key: paths·http-success-200·options·responses·200·content·application-json·schema
    type: constant
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: true
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_4
    language: !<!Languages> 
      default:
        name: paths·http-success-200·options·responses·200·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_52
    $key: paths·http-redirect-300·head·responses·300·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/head/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_10
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-300·head·responses·300·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_53
    $key: paths·http-redirect-300·get·responses·300·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/get/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_11
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-300·get·responses·300·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_55
    $key: paths·http-redirect-301·head·responses·301·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/head/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_12
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-301·head·responses·301·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_56
    $key: paths·http-redirect-301·get·responses·301·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/get/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_13
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-301·get·responses·301·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_58
    $key: paths·http-redirect-301·put·responses·301·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/failure/500
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_14
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-301·put·responses·301·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_59
    $key: paths·http-redirect-302·head·responses·302·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/head/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_15
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-302·head·responses·302·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_60
    $key: paths·http-redirect-302·get·responses·302·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/get/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_16
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-302·get·responses·302·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_62
    $key: paths·http-redirect-302·patch·responses·302·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/failure/500
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_17
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-302·patch·responses·302·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_64
    $key: paths·http-redirect-303·post·responses·303·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/get/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_18
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-303·post·responses·303·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_65
    $key: paths·http-redirect-307·head·responses·307·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/head/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_19
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-307·head·responses·307·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_66
    $key: paths·http-redirect-307·get·responses·307·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/get/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_20
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-307·get·responses·307·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_67
    $key: paths·http-redirect-307·options·responses·307·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/options/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_21
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-307·options·responses·307·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_75
    $key: paths·http-redirect-307·put·responses·307·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/put/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_22
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-307·put·responses·307·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_69
    $key: paths·http-redirect-307·patch·responses·307·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/patch/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_23
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-307·patch·responses·307·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_71
    $key: paths·http-redirect-307·post·responses·307·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/post/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_24
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-307·post·responses·307·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_73
    $key: paths·http-redirect-307·delete·responses·307·headers·location·schema
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: /http/success/delete/200
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_25
      $key: string
      type: string
      description: ''
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·http-redirect-307·delete·responses·307·headers·location·schema
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        header: Location
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_93
    $key: paths·http-retry-502·options·responses·200·content·application-json·schema
    type: constant
    description: Simple boolean value true
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    value: !<!ConstantValue> 
      value: true
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_5
    language: !<!Languages> 
      default:
        name: paths·http-retry-502·options·responses·200·content·application-json·schema
        description: Simple boolean value true
    protocol: !<!Protocols> {}
  numbers:
  - *ref_8
  strings:
  - *ref_9
  - *ref_10
  - *ref_11
  - *ref_30
  - *ref_12
  - *ref_13
  - *ref_14
  - *ref_15
  - *ref_16
  - *ref_17
  - *ref_18
  - *ref_19
  - *ref_20
  - *ref_21
  - *ref_22
  - *ref_23
  - *ref_24
  - *ref_25
  - *ref_26
  - *ref_27
  - *ref_28
  - *ref_29
info: !<!Info> 
  description: Test Infrastructure for AutoRest
  title: httpInfrastructure.quirks
operationGroups:
- !<!OperationGroup> 
  $key: httpFailure
  operations:
  - !<!Operation> 
    $key: getEmptyError
    description: Get empty error form server
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/emptybody/error
          method: get
          servers:
          - !<!HttpServer> &ref_31
            url: 'http://localhost:3000/'
            language:
              default:
                name: server-name
                description: MISSING-SERVER-DESCRIPTION
    responses:
    - !<!SchemaResponse> 
      schema: *ref_32
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getEmptyError
        description: Get empty error form server
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getNoModelError
    description: Get empty error form server
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/nomodel/error
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_34
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: getNoModelError
        description: Get empty error form server
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getNoModelEmpty
    description: Get empty response from server
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/nomodel/empty
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_35
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: getNoModelEmpty
        description: Get empty response from server
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: httpFailure
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: httpSuccess
  operations:
  - !<!Operation> 
    $key: head200
    description: Return 200 status code if successful
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/success/200
          method: head
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head200
        description: Return 200 status code if successful
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200
    description: Get 200 success
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/success/200
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_36
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200
        description: Get 200 success
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: options200
    description: Options 200 success
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/success/200
          method: options
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_37
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: options200
        description: Options 200 success
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put200
    description: Put boolean value true returning 200 success
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_38
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/200
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put200
        description: Put boolean value true returning 200 success
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: patch200
    description: Patch true Boolean value in request returning 200
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_39
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/200
          method: patch
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: patch200
        description: Patch true Boolean value in request returning 200
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post200
    description: Post bollean value true in request that returns a 200
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_40
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/200
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post200
        description: Post bollean value true in request that returns a 200
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete200
    description: Delete simple boolean value true returns 200
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_41
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/200
          method: delete
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: delete200
        description: Delete simple boolean value true returns 200
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put201
    description: Put true Boolean value in request returns 201
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_42
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/201
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put201
        description: Put true Boolean value in request returns 201
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post201
    description: Post true Boolean value in request returns 201 (Created)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_43
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/201
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post201
        description: Post true Boolean value in request returns 201 (Created)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put202
    description: Put true Boolean value in request returns 202 (Accepted)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_44
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/202
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put202
        description: Put true Boolean value in request returns 202 (Accepted)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: patch202
    description: Patch true Boolean value in request returns 202
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_45
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/202
          method: patch
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: patch202
        description: Patch true Boolean value in request returns 202
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post202
    description: Post true Boolean value in request returns 202 (Accepted)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_46
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/202
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202
        description: Post true Boolean value in request returns 202 (Accepted)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete202
    description: Delete true Boolean value in request returns 202 (accepted)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_47
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/202
          method: delete
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: delete202
        description: Delete true Boolean value in request returns 202 (accepted)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: head204
    description: Return 204 status code if successful
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/success/204
          method: head
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head204
        description: Return 204 status code if successful
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put204
    description: Put true Boolean value in request returns 204 (no content)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_48
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/204
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put204
        description: Put true Boolean value in request returns 204 (no content)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: patch204
    description: Patch true Boolean value in request returns 204 (no content)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_49
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/204
          method: patch
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: patch204
        description: Patch true Boolean value in request returns 204 (no content)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete204
    description: Delete true Boolean value in request returns 204 (no content)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_50
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/204
          method: delete
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: delete204
        description: Delete true Boolean value in request returns 204 (no content)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: head404
    description: Return 404 status code
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/success/404
          method: head
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '404'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head404
        description: Return 404 status code
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: httpSuccess
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: HttpSuccess
  operations:
  - !<!Operation> 
    $key: post204
    description: Post true Boolean value in request returns 204 (no content)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_51
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/success/204
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post204
        description: Post true Boolean value in request returns 204 (no content)
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: HttpSuccess
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: httpRedirects
  operations:
  - !<!Operation> 
    $key: head300
    description: Return 300 status code and redirect to /http/success/200
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/redirect/300
          method: head
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_52
            header: Location
          statusCodes:
          - '300'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head300
        description: Return 300 status code and redirect to /http/success/200
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get300
    description: Return 300 status code and redirect to /http/success/200
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/redirect/300
          method: get
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_54
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - *ref_53
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '300'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get300
        description: Return 300 status code and redirect to /http/success/200
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: head301
    description: Return 301 status code and redirect to /http/success/200
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/redirect/301
          method: head
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_55
            header: Location
          statusCodes:
          - '301'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head301
        description: Return 301 status code and redirect to /http/success/200
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get301
    description: Return 301 status code and redirect to /http/success/200
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/redirect/301
          method: get
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_56
            header: Location
          statusCodes:
          - '301'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get301
        description: Return 301 status code and redirect to /http/success/200
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put301
    description: 'Put true Boolean value in request returns 301.  This request should not be automatically redirected, but should return the received 301 to the caller for evaluation'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_57
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/redirect/301
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_58
            header: Location
          statusCodes:
          - '301'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put301
        description: 'Put true Boolean value in request returns 301.  This request should not be automatically redirected, but should return the received 301 to the caller for evaluation'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: head302
    description: Return 302 status code and redirect to /http/success/200
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/redirect/302
          method: head
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_59
            header: Location
          statusCodes:
          - '302'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head302
        description: Return 302 status code and redirect to /http/success/200
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get302
    description: Return 302 status code and redirect to /http/success/200
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/redirect/302
          method: get
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_60
            header: Location
          statusCodes:
          - '302'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get302
        description: Return 302 status code and redirect to /http/success/200
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: patch302
    description: 'Patch true Boolean value in request returns 302.  This request should not be automatically redirected, but should return the received 302 to the caller for evaluation'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_61
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/redirect/302
          method: patch
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_62
            header: Location
          statusCodes:
          - '302'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: patch302
        description: 'Patch true Boolean value in request returns 302.  This request should not be automatically redirected, but should return the received 302 to the caller for evaluation'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post303
    description: 'Post true Boolean value in request returns 303.  This request should be automatically redirected usign a get, ultimately returning a 200 status code'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_63
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/redirect/303
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_64
            header: Location
          statusCodes:
          - '303'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post303
        description: 'Post true Boolean value in request returns 303.  This request should be automatically redirected usign a get, ultimately returning a 200 status code'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: head307
    description: 'Redirect with 307, resulting in a 200 success'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/redirect/307
          method: head
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_65
            header: Location
          statusCodes:
          - '307'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head307
        description: 'Redirect with 307, resulting in a 200 success'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get307
    description: 'Redirect get with 307, resulting in a 200 success'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/redirect/307
          method: get
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_66
            header: Location
          statusCodes:
          - '307'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get307
        description: 'Redirect get with 307, resulting in a 200 success'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: options307
    description: 'options redirected with 307, resulting in a 200 after redirect'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/redirect/307
          method: options
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_67
            header: Location
          statusCodes:
          - '307'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: options307
        description: 'options redirected with 307, resulting in a 200 after redirect'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: patch307
    description: 'Patch redirected with 307, resulting in a 200 after redirect'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_68
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/redirect/307
          method: patch
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_69
            header: Location
          statusCodes:
          - '307'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: patch307
        description: 'Patch redirected with 307, resulting in a 200 after redirect'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post307
    description: 'Post redirected with 307, resulting in a 200 after redirect'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_70
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/redirect/307
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_71
            header: Location
          statusCodes:
          - '307'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post307
        description: 'Post redirected with 307, resulting in a 200 after redirect'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete307
    description: 'Delete redirected with 307, resulting in a 200 after redirect'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_72
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/redirect/307
          method: delete
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_73
            header: Location
          statusCodes:
          - '307'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: delete307
        description: 'Delete redirected with 307, resulting in a 200 after redirect'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: httpRedirects
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: HttpRedirects
  operations:
  - !<!Operation> 
    $key: put307
    description: 'Put redirected with 307, resulting in a 200 after redirect'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_74
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/redirect/307
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_75
            header: Location
          statusCodes:
          - '307'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put307
        description: 'Put redirected with 307, resulting in a 200 after redirect'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: HttpRedirects
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: httpClientFailure
  operations:
  - !<!Operation> 
    $key: head400
    description: Return 400 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/400
          method: head
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head400
        description: Return 400 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get400
    description: Return 400 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/400
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get400
        description: Return 400 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: options400
    description: Return 400 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/400
          method: options
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: options400
        description: Return 400 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put400
    description: Return 400 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_76
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/400
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put400
        description: Return 400 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: patch400
    description: Return 400 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_77
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/400
          method: patch
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: patch400
        description: Return 400 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post400
    description: Return 400 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_78
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/400
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post400
        description: Return 400 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete400
    description: Return 400 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_79
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/400
          method: delete
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: delete400
        description: Return 400 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: head401
    description: Return 401 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/401
          method: head
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head401
        description: Return 401 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get402
    description: Return 402 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/402
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get402
        description: Return 402 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: options403
    description: Return 403 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/403
          method: options
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: options403
        description: Return 403 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get403
    description: Return 403 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/403
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get403
        description: Return 403 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put404
    description: Return 404 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_80
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/404
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put404
        description: Return 404 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: patch405
    description: Return 405 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_81
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/405
          method: patch
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: patch405
        description: Return 405 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post406
    description: Return 406 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_82
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/406
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post406
        description: Return 406 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete407
    description: Return 407 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_83
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/407
          method: delete
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: delete407
        description: Return 407 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put409
    description: Return 409 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_84
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/409
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put409
        description: Return 409 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: head410
    description: Return 410 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/410
          method: head
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head410
        description: Return 410 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get411
    description: Return 411 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/411
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get411
        description: Return 411 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: options412
    description: Return 412 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/412
          method: options
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: options412
        description: Return 412 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get412
    description: Return 412 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/412
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get412
        description: Return 412 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put413
    description: Return 413 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_85
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/413
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put413
        description: Return 413 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: patch414
    description: Return 414 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_86
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/414
          method: patch
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: patch414
        description: Return 414 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post415
    description: Return 415 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_87
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/415
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post415
        description: Return 415 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get416
    description: Return 416 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/416
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get416
        description: Return 416 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete417
    description: Return 417 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_88
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/client/417
          method: delete
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: delete417
        description: Return 417 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: head429
    description: Return 429 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/client/429
          method: head
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head429
        description: Return 429 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: httpClientFailure
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: httpServerFailure
  operations:
  - !<!Operation> 
    $key: head501
    description: Return 501 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/server/501
          method: head
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head501
        description: Return 501 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get501
    description: Return 501 status code - should be represented in the client as an error
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/failure/server/501
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get501
        description: Return 501 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post505
    description: Return 505 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_89
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/server/505
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post505
        description: Return 505 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete505
    description: Return 505 status code - should be represented in the client as an error
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_90
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/failure/server/505
          method: delete
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: delete505
        description: Return 505 status code - should be represented in the client as an error
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: httpServerFailure
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: httpRetry
  operations:
  - !<!Operation> 
    $key: head408
    description: 'Return 408 status code, then 200 after retry'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/retry/408
          method: head
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: head408
        description: 'Return 408 status code, then 200 after retry'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put500
    description: 'Return 500 status code, then 200 after retry'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_91
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/retry/500
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put500
        description: 'Return 500 status code, then 200 after retry'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: patch500
    description: 'Return 500 status code, then 200 after retry'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_92
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/retry/500
          method: patch
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: patch500
        description: 'Return 500 status code, then 200 after retry'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get502
    description: 'Return 502 status code, then 200 after retry'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/retry/502
          method: get
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get502
        description: 'Return 502 status code, then 200 after retry'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: options502
    description: 'Return 502 status code, then 200 after retry'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/retry/502
          method: options
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_93
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: options502
        description: 'Return 502 status code, then 200 after retry'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: post503
    description: 'Return 503 status code, then 200 after retry'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_94
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/retry/503
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post503
        description: 'Return 503 status code, then 200 after retry'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: delete503
    description: 'Return 503 status code, then 200 after retry'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_95
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/retry/503
          method: delete
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: delete503
        description: 'Return 503 status code, then 200 after retry'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: put504
    description: 'Return 504 status code, then 200 after retry'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_96
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/retry/504
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put504
        description: 'Return 504 status code, then 200 after retry'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: patch504
    description: 'Return 504 status code, then 200 after retry'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: booleanValue
        schema: *ref_97
        description: Simple boolean value true
        implementation: Method
        extensions:
          x-ms-requestBody-name: booleanValue
        language: !<!Languages> 
          default:
            name: booleanValue
            description: Simple boolean value true
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /http/retry/504
          method: patch
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: patch504
        description: 'Return 504 status code, then 200 after retry'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: httpRetry
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: multipleResponses
  operations:
  - !<!Operation> 
    $key: get200Model204NoModelDefaultError200Valid
    description: 'Send a 200 response with valid payload: {''statusCode'': ''200''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/204/none/default/Error/response/200/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200Model204NoModelDefaultError200Valid
        description: 'Send a 200 response with valid payload: {''statusCode'': ''200''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200Model204NoModelDefaultError204Valid
    description: Send a 204 response with no payload
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/204/none/default/Error/response/204/none
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200Model204NoModelDefaultError204Valid
        description: Send a 204 response with no payload
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200Model204NoModelDefaultError201Invalid
    description: 'Send a 201 response with valid payload: {''statusCode'': ''201''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/204/none/default/Error/response/201/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200Model204NoModelDefaultError201Invalid
        description: 'Send a 201 response with valid payload: {''statusCode'': ''201''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200Model204NoModelDefaultError202None
    description: 'Send a 202 response with no payload:'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/204/none/default/Error/response/202/none
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200Model204NoModelDefaultError202None
        description: 'Send a 202 response with no payload:'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200Model204NoModelDefaultError400Valid
    description: 'Send a 400 response with valid error payload: {''status'': 400, ''message'': ''client error''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/204/none/default/Error/response/400/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200Model204NoModelDefaultError400Valid
        description: 'Send a 400 response with valid error payload: {''status'': 400, ''message'': ''client error''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200Model201ModelDefaultError200Valid
    description: 'Send a 200 response with valid payload: {''statusCode'': ''200''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/201/B/default/Error/response/200/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_7
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200Model201ModelDefaultError200Valid
        description: 'Send a 200 response with valid payload: {''statusCode'': ''200''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200Model201ModelDefaultError201Valid
    description: 'Send a 201 response with valid payload: {''statusCode'': ''201'', ''textStatusCode'': ''Created''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/201/B/default/Error/response/201/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_7
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200Model201ModelDefaultError201Valid
        description: 'Send a 201 response with valid payload: {''statusCode'': ''201'', ''textStatusCode'': ''Created''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200Model201ModelDefaultError400Valid
    description: 'Send a 400 response with valid payload: {''code'': ''400'', ''message'': ''client error''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/201/B/default/Error/response/400/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_7
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200Model201ModelDefaultError400Valid
        description: 'Send a 400 response with valid payload: {''code'': ''400'', ''message'': ''client error''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200ModelA201ModelC404ModelDDefaultError200Valid
    description: 'Send a 200 response with valid payload: {''statusCode'': ''200''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/201/C/404/D/default/Error/response/200/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_98
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    - !<!SchemaResponse> 
      schema: *ref_99
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '404'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200ModelA201ModelC404ModelDDefaultError200Valid
        description: 'Send a 200 response with valid payload: {''statusCode'': ''200''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200ModelA201ModelC404ModelDDefaultError201Valid
    description: 'Send a 200 response with valid payload: {''httpCode'': ''201''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/201/C/404/D/default/Error/response/201/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_98
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    - !<!SchemaResponse> 
      schema: *ref_99
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '404'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200ModelA201ModelC404ModelDDefaultError201Valid
        description: 'Send a 200 response with valid payload: {''httpCode'': ''201''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200ModelA201ModelC404ModelDDefaultError404Valid
    description: 'Send a 200 response with valid payload: {''httpStatusCode'': ''404''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/201/C/404/D/default/Error/response/404/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_98
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    - !<!SchemaResponse> 
      schema: *ref_99
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '404'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200ModelA201ModelC404ModelDDefaultError404Valid
        description: 'Send a 200 response with valid payload: {''httpStatusCode'': ''404''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200ModelA201ModelC404ModelDDefaultError400Valid
    description: 'Send a 400 response with valid payload: {''code'': ''400'', ''message'': ''client error''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/201/C/404/D/default/Error/response/400/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_98
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    - !<!SchemaResponse> 
      schema: *ref_99
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '404'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get200ModelA201ModelC404ModelDDefaultError400Valid
        description: 'Send a 400 response with valid payload: {''code'': ''400'', ''message'': ''client error''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get202None204NoneDefaultError202None
    description: Send a 202 response with no payload
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/202/none/204/none/default/Error/response/202/none
          method: get
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get202None204NoneDefaultError202None
        description: Send a 202 response with no payload
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get202None204NoneDefaultError204None
    description: Send a 204 response with no payload
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/202/none/204/none/default/Error/response/204/none
          method: get
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get202None204NoneDefaultError204None
        description: Send a 204 response with no payload
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get202None204NoneDefaultError400Valid
    description: 'Send a 400 response with valid payload: {''code'': ''400'', ''message'': ''client error''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/202/none/204/none/default/Error/response/400/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get202None204NoneDefaultError400Valid
        description: 'Send a 400 response with valid payload: {''code'': ''400'', ''message'': ''client error''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get202None204NoneDefaultNone202Invalid
    description: 'Send a 202 response with an unexpected payload {''property'': ''value''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/202/none/204/none/default/none/response/202/invalid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get202None204NoneDefaultNone202Invalid
        description: 'Send a 202 response with an unexpected payload {''property'': ''value''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get202None204NoneDefaultNone204None
    description: Send a 204 response with no payload
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/202/none/204/none/default/none/response/204/none
          method: get
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get202None204NoneDefaultNone204None
        description: Send a 204 response with no payload
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get202None204NoneDefaultNone400None
    description: Send a 400 response with no payload
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/202/none/204/none/default/none/response/400/none
          method: get
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get202None204NoneDefaultNone400None
        description: Send a 400 response with no payload
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get202None204NoneDefaultNone400Invalid
    description: 'Send a 400 response with an unexpected payload {''property'': ''value''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/202/none/204/none/default/none/response/400/invalid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: get202None204NoneDefaultNone400Invalid
        description: 'Send a 400 response with an unexpected payload {''property'': ''value''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getDefaultModelA200Valid
    description: 'Send a 200 response with valid payload: {''statusCode'': ''200''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/default/A/response/200/valid
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getDefaultModelA200Valid
        description: 'Send a 200 response with valid payload: {''statusCode'': ''200''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getDefaultModelA200None
    description: Send a 200 response with no payload
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/default/A/response/200/none
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getDefaultModelA200None
        description: Send a 200 response with no payload
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getDefaultModelA400Valid
    description: 'Send a 400 response with valid payload: {''statusCode'': ''400''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/default/A/response/400/valid
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getDefaultModelA400Valid
        description: 'Send a 400 response with valid payload: {''statusCode'': ''400''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getDefaultModelA400None
    description: Send a 400 response with no payload
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/default/A/response/400/none
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getDefaultModelA400None
        description: Send a 400 response with no payload
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getDefaultNone200Invalid
    description: 'Send a 200 response with invalid payload: {''statusCode'': ''200''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/default/none/response/200/invalid
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getDefaultNone200Invalid
        description: 'Send a 200 response with invalid payload: {''statusCode'': ''200''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getDefaultNone200None
    description: Send a 200 response with no payload
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/default/none/response/200/none
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getDefaultNone200None
        description: Send a 200 response with no payload
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getDefaultNone400Invalid
    description: 'Send a 400 response with valid payload: {''statusCode'': ''400''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/default/none/response/400/invalid
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getDefaultNone400Invalid
        description: 'Send a 400 response with valid payload: {''statusCode'': ''400''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getDefaultNone400None
    description: Send a 400 response with no payload
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/default/none/response/400/none
          method: get
          servers:
          - *ref_31
    exceptions:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getDefaultNone400None
        description: Send a 400 response with no payload
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200ModelA200None
    description: 'Send a 200 response with no payload, when a payload is expected - client should return a null object of thde type for model A'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/response/200/none
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: get200ModelA200None
        description: 'Send a 200 response with no payload, when a payload is expected - client should return a null object of thde type for model A'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200ModelA200Valid
    description: 'Send a 200 response with payload {''statusCode'': ''200''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/response/200/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: get200ModelA200Valid
        description: 'Send a 200 response with payload {''statusCode'': ''200''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200ModelA200Invalid
    description: 'Send a 200 response with invalid payload {''statusCodeInvalid'': ''200''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/response/200/invalid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: get200ModelA200Invalid
        description: 'Send a 200 response with invalid payload {''statusCodeInvalid'': ''200''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200ModelA400None
    description: Send a 400 response with no payload client should treat as an http error with no error model
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/response/400/none
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: get200ModelA400None
        description: Send a 400 response with no payload client should treat as an http error with no error model
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200ModelA400Valid
    description: 'Send a 200 response with payload {''statusCode'': ''400''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/response/400/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: get200ModelA400Valid
        description: 'Send a 200 response with payload {''statusCode'': ''400''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200ModelA400Invalid
    description: 'Send a 200 response with invalid payload {''statusCodeInvalid'': ''400''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/response/400/invalid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: get200ModelA400Invalid
        description: 'Send a 200 response with invalid payload {''statusCodeInvalid'': ''400''}'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: get200ModelA202Valid
    description: 'Send a 202 response with payload {''statusCode'': ''202''}'
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /http/payloads/200/A/response/202/valid
          method: get
          servers:
          - *ref_31
    responses:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: get200ModelA202Valid
        description: 'Send a 202 response with payload {''statusCode'': ''202''}'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: multipleResponses
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> 
    servers:
    - *ref_31
