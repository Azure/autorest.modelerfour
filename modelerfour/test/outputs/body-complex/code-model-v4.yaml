!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
    - !<!ObjectSchema> &ref_48
      $key: basic
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: id
          schema: !<!NumberSchema> &ref_8
            $key: typeForid
            type: integer
            description: Basic Id
            precision: 32
            language: !<!Languages> 
              default:
                name: typeForid
                description: Basic Id
            protocol: !<!Protocols> {}
          description: Basic Id
          serializedName: id
          language: !<!Languages> 
            default:
              name: id
              description: Basic Id
              uid: 'property:371'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: basic-name
          schema: !<!StringSchema> &ref_23
            $key: basic-name
            type: string
            description: Name property with a very long description that does not fit on a single line and a line break.
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: basic-name
                description: Name property with a very long description that does not fit on a single line and a line break.
            protocol: !<!Protocols> {}
          description: Name property with a very long description that does not fit on a single line and a line break.
          serializedName: name
          language: !<!Languages> 
            default:
              name: basic-name
              description: Name property with a very long description that does not fit on a single line and a line break.
              uid: 'property:372'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: CMYKColors
          schema: !<!SealedChoiceSchema> &ref_45
            $key: CMYKColors
            choices:
              - !<!ChoiceValue> 
                value: cyan
                language:
                  default:
                    name: cyan
                    description: ''
              - !<!ChoiceValue> 
                value: Magenta
                language:
                  default:
                    name: Magenta
                    description: ''
              - !<!ChoiceValue> 
                value: YELLOW
                language:
                  default:
                    name: YELLOW
                    description: ''
              - !<!ChoiceValue> 
                value: blacK
                language:
                  default:
                    name: blacK
                    description: ''
            type: sealed-choice
            description: MISSING-SCHEMA-DESCRIPTION-CHOICE
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            choiceType: !<!StringSchema> 
              $key: choice
              type: string
              description: choice
              language: !<!Languages> 
                default:
                  name: choice
                  description: choice
              protocol: !<!Protocols> {}
            extensions:
              x-ms-enum:
                name: CMYKColors
                modelAsString: true
            language: !<!Languages> 
              default:
                name: CMYKColors
                description: MISSING-SCHEMA-DESCRIPTION-CHOICE
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: color
          language: !<!Languages> 
            default:
              name: CMYKColors
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:373'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: basic
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_49
      $key: Error
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: status
          schema: !<!NumberSchema> &ref_9
            $key: typeForstatus
            type: integer
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            precision: 32
            language: !<!Languages> 
              default:
                name: typeForstatus
                description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: status
          language: !<!Languages> 
            default:
              name: status
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:374'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: Error-message
          schema: !<!StringSchema> &ref_24
            $key: Error-message
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: Error-message
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: message
          language: !<!Languages> 
            default:
              name: Error-message
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:375'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: Error
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_50
      $key: int-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: field1
          schema: !<!NumberSchema> &ref_10
            $key: typeForfield1
            type: integer
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            precision: 32
            language: !<!Languages> 
              default:
                name: typeForfield1
                description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field1
          language: !<!Languages> 
            default:
              name: field1
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:377'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: field2
          schema: !<!NumberSchema> &ref_11
            $key: typeForfield2
            type: integer
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            precision: 32
            language: !<!Languages> 
              default:
                name: typeForfield2
                description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field2
          language: !<!Languages> 
            default:
              name: field2
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:378'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: int-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_51
      $key: long-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: field1
          schema: !<!NumberSchema> &ref_12
            $key: typeForfield1
            type: integer
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            precision: 64
            language: !<!Languages> 
              default:
                name: typeForfield1
                description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field1
          language: !<!Languages> 
            default:
              name: field1
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:379'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: field2
          schema: !<!NumberSchema> &ref_13
            $key: typeForfield2
            type: integer
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            precision: 64
            language: !<!Languages> 
              default:
                name: typeForfield2
                description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field2
          language: !<!Languages> 
            default:
              name: field2
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:380'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: long-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_52
      $key: float-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: field1
          schema: !<!NumberSchema> &ref_14
            $key: typeForfield1
            type: number
            description: MISSING-SCHEMA-DESCRIPTION-NUMBER
            precision: 32
            language: !<!Languages> 
              default:
                name: typeForfield1
                description: MISSING-SCHEMA-DESCRIPTION-NUMBER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field1
          language: !<!Languages> 
            default:
              name: field1
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:381'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: field2
          schema: !<!NumberSchema> &ref_15
            $key: typeForfield2
            type: number
            description: MISSING-SCHEMA-DESCRIPTION-NUMBER
            precision: 32
            language: !<!Languages> 
              default:
                name: typeForfield2
                description: MISSING-SCHEMA-DESCRIPTION-NUMBER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field2
          language: !<!Languages> 
            default:
              name: field2
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:382'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: float-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_53
      $key: double-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: field1
          schema: !<!NumberSchema> &ref_16
            $key: typeForfield1
            type: number
            description: MISSING-SCHEMA-DESCRIPTION-NUMBER
            precision: 64
            language: !<!Languages> 
              default:
                name: typeForfield1
                description: MISSING-SCHEMA-DESCRIPTION-NUMBER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field1
          language: !<!Languages> 
            default:
              name: field1
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:383'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose
          schema: !<!NumberSchema> &ref_17
            $key: typeForfield_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose
            type: number
            description: MISSING-SCHEMA-DESCRIPTION-NUMBER
            precision: 64
            language: !<!Languages> 
              default:
                name: typeForfield_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose
                description: MISSING-SCHEMA-DESCRIPTION-NUMBER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose
          language: !<!Languages> 
            default:
              name: field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:384'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: double-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_54
      $key: boolean-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: field_true
          schema: !<!BooleanSchema> &ref_84
            $key: typeForfield_true
            type: boolean
            description: MISSING-SCHEMA-DESCRIPTION-BOOLEAN
            language: !<!Languages> 
              default:
                name: typeForfield_true
                description: MISSING-SCHEMA-DESCRIPTION-BOOLEAN
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field_true
          language: !<!Languages> 
            default:
              name: field_true
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:385'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: field_false
          schema: !<!BooleanSchema> &ref_85
            $key: typeForfield_false
            type: boolean
            description: MISSING-SCHEMA-DESCRIPTION-BOOLEAN
            language: !<!Languages> 
              default:
                name: typeForfield_false
                description: MISSING-SCHEMA-DESCRIPTION-BOOLEAN
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field_false
          language: !<!Languages> 
            default:
              name: field_false
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:386'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: boolean-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_55
      $key: string-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: string-wrapper-field
          schema: !<!StringSchema> &ref_25
            $key: string-wrapper-field
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: string-wrapper-field
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field
          language: !<!Languages> 
            default:
              name: string-wrapper-field
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:387'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: string-wrapper-empty
          schema: !<!StringSchema> &ref_26
            $key: string-wrapper-empty
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: string-wrapper-empty
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: empty
          language: !<!Languages> 
            default:
              name: string-wrapper-empty
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:388'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: string-wrapper-null
          schema: !<!StringSchema> &ref_27
            $key: string-wrapper-null
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: string-wrapper-null
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: 'null'
          language: !<!Languages> 
            default:
              name: string-wrapper-null
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:389'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: string-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_56
      $key: date-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: date-wrapper-field
          schema: !<!DateSchema> &ref_88
            $key: date-wrapper-field
            type: date
            description: MISSING-SCHEMA-DESCRIPTION-DATE
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: date-wrapper-field
                description: MISSING-SCHEMA-DESCRIPTION-DATE
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field
          language: !<!Languages> 
            default:
              name: date-wrapper-field
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:390'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: date-wrapper-leap
          schema: !<!DateSchema> &ref_89
            $key: date-wrapper-leap
            type: date
            description: MISSING-SCHEMA-DESCRIPTION-DATE
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: date-wrapper-leap
                description: MISSING-SCHEMA-DESCRIPTION-DATE
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: leap
          language: !<!Languages> 
            default:
              name: date-wrapper-leap
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:391'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: date-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_57
      $key: datetime-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: datetime-wrapper-field
          schema: !<!DateTimeSchema> &ref_90
            $key: datetime-wrapper-field
            type: date-time
            format: date-time
            description: MISSING-SCHEMA-DESCRIPTION-DATETIME
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: datetime-wrapper-field
                description: MISSING-SCHEMA-DESCRIPTION-DATETIME
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field
          language: !<!Languages> 
            default:
              name: datetime-wrapper-field
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:392'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: datetime-wrapper-now
          schema: !<!DateTimeSchema> &ref_91
            $key: datetime-wrapper-now
            type: date-time
            format: date-time
            description: MISSING-SCHEMA-DESCRIPTION-DATETIME
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: datetime-wrapper-now
                description: MISSING-SCHEMA-DESCRIPTION-DATETIME
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: now
          language: !<!Languages> 
            default:
              name: datetime-wrapper-now
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:393'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: datetime-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_58
      $key: datetimerfc1123-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: datetimerfc1123-wrapper-field
          schema: !<!DateTimeSchema> &ref_92
            $key: datetimerfc1123-wrapper-field
            type: date-time
            format: date-time-rfc1123
            description: MISSING-SCHEMA-DESCRIPTION-DATETIME
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: datetimerfc1123-wrapper-field
                description: MISSING-SCHEMA-DESCRIPTION-DATETIME
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field
          language: !<!Languages> 
            default:
              name: datetimerfc1123-wrapper-field
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:394'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: datetimerfc1123-wrapper-now
          schema: !<!DateTimeSchema> &ref_93
            $key: datetimerfc1123-wrapper-now
            type: date-time
            format: date-time-rfc1123
            description: MISSING-SCHEMA-DESCRIPTION-DATETIME
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: datetimerfc1123-wrapper-now
                description: MISSING-SCHEMA-DESCRIPTION-DATETIME
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: now
          language: !<!Languages> 
            default:
              name: datetimerfc1123-wrapper-now
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:395'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: datetimerfc1123-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_59
      $key: duration-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: duration-wrapper-field
          schema: !<!DurationSchema> &ref_95
            $key: duration-wrapper-field
            type: duration
            description: MISSING-SCHEMA-DESCRIPTION-DURATION
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: duration-wrapper-field
                description: MISSING-SCHEMA-DESCRIPTION-DURATION
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field
          language: !<!Languages> 
            default:
              name: duration-wrapper-field
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:396'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: duration-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_60
      $key: byte-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: byte-wrapper-field
          schema: !<!ByteArraySchema> &ref_96
            $key: byte-wrapper-field
            type: byte-array
            format: byte
            description: MISSING-SCHEMA-DESCRIPTION-BYTEARRAY
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: byte-wrapper-field
                description: MISSING-SCHEMA-DESCRIPTION-BYTEARRAY
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: field
          language: !<!Languages> 
            default:
              name: byte-wrapper-field
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:397'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: byte-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_61
      $key: array-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: array-wrapper-array
          schema: !<!ArraySchema> &ref_98
            $key: array-wrapper-array
            type: array
            description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            elementType: !<!StringSchema> &ref_28
              $key: array-wrapper-arrayItem
              type: string
              description: MISSING-SCHEMA-DESCRIPTION-STRING
              apiVersions:
                - !<!ApiVersion> 
                  version: '2016-02-29'
              language: !<!Languages> 
                default:
                  name: array-wrapper-arrayItem
                  description: MISSING-SCHEMA-DESCRIPTION-STRING
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: array-wrapper-array
                description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: array
          language: !<!Languages> 
            default:
              name: array-wrapper-array
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:398'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: array-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_62
      $key: dictionary-wrapper
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: dictionary-wrapper-defaultProgram
          schema: !<!DictionarySchema> &ref_103
            $key: dictionary-wrapper-defaultProgram
            type: dictionary
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
            elementType: !<!StringSchema> &ref_29
              $key: components·schemas·dictionary_wrapper·properties·defaultprogram·additionalproperties
              type: string
              description: MISSING-SCHEMA-DESCRIPTION-STRING
              apiVersions:
                - !<!ApiVersion> 
                  version: '2016-02-29'
              language: !<!Languages> 
                default:
                  name: components·schemas·dictionary_wrapper·properties·defaultprogram·additionalproperties
                  description: MISSING-SCHEMA-DESCRIPTION-STRING
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: dictionary-wrapper-defaultProgram
                description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: defaultProgram
          language: !<!Languages> 
            default:
              name: dictionary-wrapper-defaultProgram
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:399'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: dictionary-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_0
      $key: pet
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: id
          schema: !<!NumberSchema> &ref_18
            $key: typeForid
            type: integer
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            precision: 32
            language: !<!Languages> 
              default:
                name: typeForid
                description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: id
          language: !<!Languages> 
            default:
              name: id
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:400'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: pet-name
          schema: !<!StringSchema> &ref_30
            $key: pet-name
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: pet-name
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: name
          language: !<!Languages> 
            default:
              name: pet-name
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:401'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: pet
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_65
      $key: cat
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: cat-color
          schema: !<!StringSchema> &ref_31
            $key: cat-color
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: cat-color
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: color
          language: !<!Languages> 
            default:
              name: cat-color
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:402'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: cat-hates
          schema: !<!ArraySchema> &ref_99
            $key: cat-hates
            type: array
            description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            elementType: !<!AndSchema> &ref_64
              $key: dog
              type: and
              description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
              allOf:
                - !<!ObjectSchema> &ref_1
                  $key: dog
                  type: object
                  description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '2016-02-29'
                  properties:
                    - !<!Property> 
                      $key: dog-food
                      schema: !<!StringSchema> &ref_32
                        $key: dog-food
                        type: string
                        description: MISSING-SCHEMA-DESCRIPTION-STRING
                        apiVersions:
                          - !<!ApiVersion> 
                            version: '2016-02-29'
                        language: !<!Languages> 
                          default:
                            name: dog-food
                            description: MISSING-SCHEMA-DESCRIPTION-STRING
                        protocol: !<!Protocols> {}
                      description: PROPERTY-DESCRIPTION-MISSING
                      serializedName: food
                      language: !<!Languages> 
                        default:
                          name: dog-food
                          description: PROPERTY-DESCRIPTION-MISSING
                          uid: 'property:403'
                      protocol: !<!Protocols> {}
                  language: !<!Languages> 
                    default:
                      name: dog
                      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
                      internal: true
                      namespace: Api20160229
                  protocol: !<!Protocols> {}
                - !<!AndSchema> &ref_63
                  $key: pet
                  type: and
                  description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
                  allOf:
                    - *ref_0
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '2016-02-29'
                  language: !<!Languages> 
                    default:
                      name: pet
                      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
                      namespace: Api20160229
                  protocol: !<!Protocols> {}
              apiVersions:
                - !<!ApiVersion> 
                  version: '2016-02-29'
              language: !<!Languages> 
                default:
                  name: dog
                  description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
                  namespace: Api20160229
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: cat-hates
                description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: hates
          language: !<!Languages> 
            default:
              name: cat-hates
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:404'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: cat
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - *ref_1
    - !<!ObjectSchema> &ref_66
      $key: siamese
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: siamese-breed
          schema: !<!StringSchema> &ref_33
            $key: siamese-breed
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: siamese-breed
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: breed
          language: !<!Languages> 
            default:
              name: siamese-breed
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:405'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: siamese
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_2
      $key: Fish
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: Fish-fishtype
          schema: !<!StringSchema> &ref_34
            $key: Fish-fishtype
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: Fish-fishtype
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          required: true
          serializedName: fishtype
          language: !<!Languages> 
            default:
              name: Fish-fishtype
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:406'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: Fish-species
          schema: !<!StringSchema> &ref_35
            $key: Fish-species
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: Fish-species
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          required: false
          serializedName: species
          language: !<!Languages> 
            default:
              name: Fish-species
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:407'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: length
          schema: !<!NumberSchema> &ref_19
            $key: typeForlength
            type: number
            description: MISSING-SCHEMA-DESCRIPTION-NUMBER
            precision: 32
            language: !<!Languages> 
              default:
                name: typeForlength
                description: MISSING-SCHEMA-DESCRIPTION-NUMBER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          required: true
          serializedName: length
          language: !<!Languages> 
            default:
              name: length
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:408'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: Fish-siblings
          schema: !<!ArraySchema> &ref_100
            $key: Fish-siblings
            type: array
            description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            elementType: *ref_2
            language: !<!Languages> 
              default:
                name: Fish-siblings
                description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          required: false
          serializedName: siblings
          language: !<!Languages> 
            default:
              name: Fish-siblings
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:409'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: Fish
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_3
      $key: DotFish
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: DotFish-fish.type
          schema: !<!StringSchema> &ref_36
            $key: DotFish-fish.type
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: DotFish-fish.type
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          required: true
          serializedName: fish.type
          language: !<!Languages> 
            default:
              name: DotFish-fish.type
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:410'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: DotFish-species
          schema: !<!StringSchema> &ref_37
            $key: DotFish-species
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: DotFish-species
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          required: false
          serializedName: species
          language: !<!Languages> 
            default:
              name: DotFish-species
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:411'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: DotFish
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_68
      $key: DotFishMarket
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: DotSalmon
          schema: !<!AndSchema> &ref_4
            $key: DotSalmon
            type: and
            description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
            allOf:
              - !<!ObjectSchema> &ref_6
                $key: DotSalmon
                type: object
                description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
                apiVersions:
                  - !<!ApiVersion> 
                    version: '2016-02-29'
                properties:
                  - !<!Property> 
                    $key: DotSalmon-location
                    schema: !<!StringSchema> &ref_38
                      $key: DotSalmon-location
                      type: string
                      description: MISSING-SCHEMA-DESCRIPTION-STRING
                      apiVersions:
                        - !<!ApiVersion> 
                          version: '2016-02-29'
                      language: !<!Languages> 
                        default:
                          name: DotSalmon-location
                          description: MISSING-SCHEMA-DESCRIPTION-STRING
                      protocol: !<!Protocols> {}
                    description: PROPERTY-DESCRIPTION-MISSING
                    serializedName: location
                    language: !<!Languages> 
                      default:
                        name: DotSalmon-location
                        description: PROPERTY-DESCRIPTION-MISSING
                        uid: 'property:412'
                    protocol: !<!Protocols> {}
                  - !<!Property> 
                    $key: iswild
                    schema: !<!BooleanSchema> &ref_86
                      $key: typeForiswild
                      type: boolean
                      description: MISSING-SCHEMA-DESCRIPTION-BOOLEAN
                      language: !<!Languages> 
                        default:
                          name: typeForiswild
                          description: MISSING-SCHEMA-DESCRIPTION-BOOLEAN
                      protocol: !<!Protocols> {}
                    description: PROPERTY-DESCRIPTION-MISSING
                    serializedName: iswild
                    language: !<!Languages> 
                      default:
                        name: iswild
                        description: PROPERTY-DESCRIPTION-MISSING
                        uid: 'property:413'
                    protocol: !<!Protocols> {}
                language: !<!Languages> 
                  default:
                    name: DotSalmon
                    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
                    internal: true
                    namespace: Api20160229
                protocol: !<!Protocols> {}
              - !<!AndSchema> &ref_5
                $key: DotFish
                type: and
                description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
                allOf:
                  - *ref_3
                apiVersions:
                  - !<!ApiVersion> 
                    version: '2016-02-29'
                language: !<!Languages> 
                  default:
                    name: DotFish
                    description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
                    namespace: Api20160229
                protocol: !<!Protocols> {}
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: DotSalmon
                description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
                namespace: Api20160229
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: sampleSalmon
          language: !<!Languages> 
            default:
              name: DotSalmon
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:414'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: DotFishMarket-salmons
          schema: !<!ArraySchema> &ref_101
            $key: DotFishMarket-salmons
            type: array
            description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            elementType: *ref_4
            language: !<!Languages> 
              default:
                name: DotFishMarket-salmons
                description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: salmons
          language: !<!Languages> 
            default:
              name: DotFishMarket-salmons
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:415'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: DotFish
          schema: *ref_5
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: sampleFish
          language: !<!Languages> 
            default:
              name: DotFish
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:416'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: DotFishMarket-fishes
          schema: !<!ArraySchema> &ref_102
            $key: DotFishMarket-fishes
            type: array
            description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            elementType: *ref_5
            language: !<!Languages> 
              default:
                name: DotFishMarket-fishes
                description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: fishes
          language: !<!Languages> 
            default:
              name: DotFishMarket-fishes
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:417'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: DotFishMarket
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - *ref_6
    - !<!ObjectSchema> &ref_69
      $key: salmon
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: salmon-location
          schema: !<!StringSchema> &ref_39
            $key: salmon-location
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: salmon-location
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: location
          language: !<!Languages> 
            default:
              name: salmon-location
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:418'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: iswild
          schema: !<!BooleanSchema> &ref_87
            $key: typeForiswild
            type: boolean
            description: MISSING-SCHEMA-DESCRIPTION-BOOLEAN
            language: !<!Languages> 
              default:
                name: typeForiswild
                description: MISSING-SCHEMA-DESCRIPTION-BOOLEAN
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: iswild
          language: !<!Languages> 
            default:
              name: iswild
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:419'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: salmon
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_71
      $key: readonly-obj
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: readonly-obj-id
          schema: !<!StringSchema> &ref_40
            $key: readonly-obj-id
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: readonly-obj-id
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          readOnly: true
          serializedName: id
          language: !<!Languages> 
            default:
              name: readonly-obj-id
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:420'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: size
          schema: !<!NumberSchema> &ref_20
            $key: typeForsize
            type: integer
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            precision: 32
            language: !<!Languages> 
              default:
                name: typeForsize
                description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: size
          language: !<!Languages> 
            default:
              name: size
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:421'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: readonly-obj
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_73
      $key: MyBaseType
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: MyKind
          schema: !<!SealedChoiceSchema> &ref_46
            $key: MyKind
            choices:
              - !<!ChoiceValue> 
                value: Kind1
                language:
                  default:
                    name: Kind1
                    description: ''
            type: sealed-choice
            description: MISSING-SCHEMA-DESCRIPTION-CHOICE
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            choiceType: !<!StringSchema> 
              $key: choice
              type: string
              description: choice
              language: !<!Languages> 
                default:
                  name: choice
                  description: choice
              protocol: !<!Protocols> {}
            extensions:
              x-ms-enum:
                name: MyKind
                modelAsString: true
                values:
                  - value: Kind1
            language: !<!Languages> 
              default:
                name: MyKind
                description: MISSING-SCHEMA-DESCRIPTION-CHOICE
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          required: true
          serializedName: kind
          language: !<!Languages> 
            default:
              name: MyKind
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:422'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: MyBaseType-propB1
          schema: !<!StringSchema> &ref_41
            $key: MyBaseType-propB1
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: MyBaseType-propB1
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          required: false
          serializedName: propB1
          language: !<!Languages> 
            default:
              name: MyBaseType-propB1
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:423'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: MyBaseHelperType
          schema: !<!AndSchema> &ref_72
            $key: MyBaseHelperType
            type: and
            description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
            allOf:
              - !<!ObjectSchema> &ref_7
                $key: MyBaseHelperType
                type: object
                description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
                apiVersions:
                  - !<!ApiVersion> 
                    version: '2016-02-29'
                properties:
                  - !<!Property> 
                    $key: MyBaseHelperType-propBH1
                    schema: !<!StringSchema> &ref_42
                      $key: MyBaseHelperType-propBH1
                      type: string
                      description: MISSING-SCHEMA-DESCRIPTION-STRING
                      apiVersions:
                        - !<!ApiVersion> 
                          version: '2016-02-29'
                      language: !<!Languages> 
                        default:
                          name: MyBaseHelperType-propBH1
                          description: MISSING-SCHEMA-DESCRIPTION-STRING
                      protocol: !<!Protocols> {}
                    description: PROPERTY-DESCRIPTION-MISSING
                    serializedName: propBH1
                    language: !<!Languages> 
                      default:
                        name: MyBaseHelperType-propBH1
                        description: PROPERTY-DESCRIPTION-MISSING
                        uid: 'property:424'
                    protocol: !<!Protocols> {}
                language: !<!Languages> 
                  default:
                    name: MyBaseHelperType
                    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
                    internal: true
                    namespace: Api20160229
                protocol: !<!Protocols> {}
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: MyBaseHelperType
                description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
                namespace: Api20160229
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          required: false
          serializedName: helper
          language: !<!Languages> 
            default:
              name: MyBaseHelperType
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:425'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: MyBaseType
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - *ref_7
    - !<!ObjectSchema> &ref_74
      $key: smart_salmon
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: smart_salmon-college_degree
          schema: !<!StringSchema> &ref_43
            $key: smart_salmon-college_degree
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: smart_salmon-college_degree
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: college_degree
          language: !<!Languages> 
            default:
              name: smart_salmon-college_degree
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:426'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: smart_salmon
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_77
      $key: shark
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: age
          schema: !<!NumberSchema> &ref_21
            $key: typeForage
            type: integer
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            precision: 32
            language: !<!Languages> 
              default:
                name: typeForage
                description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          required: false
          serializedName: age
          language: !<!Languages> 
            default:
              name: age
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:427'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: shark-birthday
          schema: !<!DateTimeSchema> &ref_94
            $key: shark-birthday
            type: date-time
            format: date-time
            description: MISSING-SCHEMA-DESCRIPTION-DATETIME
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: shark-birthday
                description: MISSING-SCHEMA-DESCRIPTION-DATETIME
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          required: true
          serializedName: birthday
          language: !<!Languages> 
            default:
              name: shark-birthday
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:428'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: shark
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_78
      $key: sawshark
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: sawshark-picture
          schema: !<!ByteArraySchema> &ref_97
            $key: sawshark-picture
            type: byte-array
            format: byte
            description: MISSING-SCHEMA-DESCRIPTION-BYTEARRAY
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: sawshark-picture
                description: MISSING-SCHEMA-DESCRIPTION-BYTEARRAY
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: picture
          language: !<!Languages> 
            default:
              name: sawshark-picture
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:429'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: sawshark
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_80
      $key: goblinshark
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: jawsize
          schema: !<!NumberSchema> &ref_22
            $key: typeForjawsize
            type: integer
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            precision: 32
            language: !<!Languages> 
              default:
                name: typeForjawsize
                description: MISSING-SCHEMA-DESCRIPTION-INTEGER
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: jawsize
          language: !<!Languages> 
            default:
              name: jawsize
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:430'
          protocol: !<!Protocols> {}
        - !<!Property> 
          $key: GoblinSharkColor
          schema: !<!SealedChoiceSchema> &ref_47
            $key: GoblinSharkColor
            choices:
              - !<!ChoiceValue> 
                value: pink
                language:
                  default:
                    name: pink
                    description: ''
              - !<!ChoiceValue> 
                value: gray
                language:
                  default:
                    name: gray
                    description: ''
              - !<!ChoiceValue> 
                value: brown
                language:
                  default:
                    name: brown
                    description: ''
            type: sealed-choice
            description: Colors possible
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            choiceType: !<!StringSchema> 
              $key: choice
              type: string
              description: choice
              language: !<!Languages> 
                default:
                  name: choice
                  description: choice
              protocol: !<!Protocols> {}
            defaultValue: gray
            extensions:
              x-ms-enum:
                name: GoblinSharkColor
                modelAsString: true
            language: !<!Languages> 
              default:
                name: GoblinSharkColor
                description: Colors possible
            protocol: !<!Protocols> {}
          description: Colors possible
          serializedName: color
          language: !<!Languages> 
            default:
              name: GoblinSharkColor
              description: Colors possible
              uid: 'property:431'
          protocol: !<!Protocols> {}
      extensions:
        x-ms-discriminator-value: goblin
      language: !<!Languages> 
        default:
          name: goblinshark
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_81
      $key: components·schemas·myderivedtype·allof·1
      type: object
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      properties:
        - !<!Property> 
          $key: MyDerivedType-1-propD1
          schema: !<!StringSchema> &ref_44
            $key: MyDerivedType-1-propD1
            type: string
            description: MISSING-SCHEMA-DESCRIPTION-STRING
            apiVersions:
              - !<!ApiVersion> 
                version: '2016-02-29'
            language: !<!Languages> 
              default:
                name: MyDerivedType-1-propD1
                description: MISSING-SCHEMA-DESCRIPTION-STRING
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: propD1
          language: !<!Languages> 
            default:
              name: MyDerivedType-1-propD1
              description: PROPERTY-DESCRIPTION-MISSING
              uid: 'property:432'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: components·schemas·myderivedtype·allof·1
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          internal: true
          namespace: Api20160229
      protocol: !<!Protocols> {}
  dictionaries:
    - *ref_103
    - !<!DictionarySchema> &ref_104
      $key: smart_salmon
      type: dictionary
      description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      elementType: !<!AndSchema> &ref_76
        $key: components·schemas·smart_salmon·additionalproperties
        type: and
        description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
        allOf: []
        apiVersions:
          - !<!ApiVersion> 
            version: '2016-02-29'
        language: !<!Languages> 
          default:
            name: components·schemas·smart_salmon·additionalproperties
            description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
            namespace: Api20160229
        protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: smart_salmon
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      protocol: !<!Protocols> {}
  ands:
    - !<!AndSchema> &ref_106
      $key: basic
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_48
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: basic
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_107
      $key: Error
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_49
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: Error
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_109
      $key: int-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_50
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: int-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_110
      $key: long-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_51
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: long-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_111
      $key: float-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_52
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: float-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_112
      $key: double-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_53
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: double-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_113
      $key: boolean-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_54
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: boolean-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_114
      $key: string-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_55
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: string-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_115
      $key: date-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_56
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: date-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_116
      $key: datetime-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_57
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: datetime-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_117
      $key: datetimerfc1123-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_58
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: datetimerfc1123-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_118
      $key: duration-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_59
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: duration-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_119
      $key: byte-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_60
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: byte-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_120
      $key: array-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_61
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: array-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_121
      $key: dictionary-wrapper
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_62
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: dictionary-wrapper
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - *ref_63
    - *ref_64
    - !<!AndSchema> &ref_67
      $key: cat
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_65
        - *ref_63
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: cat
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_122
      $key: siamese
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_66
        - *ref_67
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: siamese
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_70
      $key: Fish
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_2
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: Fish
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - *ref_5
    - *ref_4
    - !<!AndSchema> &ref_123
      $key: DotFishMarket
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_68
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: DotFishMarket
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_75
      $key: salmon
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_69
        - *ref_70
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: salmon
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_124
      $key: readonly-obj
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_71
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: readonly-obj
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - *ref_72
    - !<!AndSchema> &ref_82
      $key: MyBaseType
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_73
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: MyBaseType
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - *ref_76
    - !<!AndSchema> 
      $key: smart_salmon
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_74
        - *ref_75
        - *ref_104
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: smart_salmon
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_79
      $key: shark
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_77
        - *ref_70
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: shark
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> 
      $key: sawshark
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_78
        - *ref_79
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: sawshark
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> 
      $key: goblinshark
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_80
        - *ref_79
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: goblinshark
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> 
      $key: cookiecuttershark
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_79
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: cookiecuttershark
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> &ref_83
      $key: components·schemas·myderivedtype·allof·1
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_81
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: components·schemas·myderivedtype·allof·1
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
    - !<!AndSchema> 
      $key: MyDerivedType
      type: and
      description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
      allOf:
        - *ref_82
        - *ref_83
      apiVersions:
        - !<!ApiVersion> 
          version: '2016-02-29'
      language: !<!Languages> 
        default:
          name: MyDerivedType
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          namespace: Api20160229
      protocol: !<!Protocols> {}
  arrays:
    - *ref_98
    - *ref_99
    - *ref_100
    - *ref_101
    - *ref_102
  booleans:
    - *ref_84
    - *ref_85
    - *ref_86
    - *ref_87
  byteArrays:
    - *ref_96
    - *ref_97
  dateTimes:
    - *ref_90
    - *ref_91
    - *ref_92
    - *ref_93
    - *ref_94
  dates:
    - *ref_88
    - *ref_89
  durations:
    - *ref_95
  numbers:
    - *ref_8
    - *ref_9
    - *ref_10
    - *ref_11
    - *ref_12
    - *ref_13
    - *ref_14
    - *ref_15
    - *ref_16
    - *ref_17
    - *ref_18
    - *ref_19
    - *ref_20
    - *ref_21
    - *ref_22
  sealedChoices:
    - *ref_45
    - !<!SealedChoiceSchema> &ref_108
      choices:
        - !<!ChoiceValue> 
          value: 2014-04-01-preview
          language:
            default:
              name: 2014-04-01-preview
              description: ''
      type: sealed-choice
      description: MISSING-SCHEMA-DESCRIPTION-CHOICE
      choiceType: !<!StringSchema> 
        $key: choice
        type: string
        description: choice
        language: !<!Languages> 
          default:
            name: choice
            description: choice
        protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          description: MISSING-SCHEMA-DESCRIPTION-CHOICE
      protocol: !<!Protocols> {}
    - *ref_46
    - *ref_47
  strings:
    - *ref_23
    - *ref_24
    - *ref_25
    - *ref_26
    - *ref_27
    - *ref_28
    - *ref_29
    - *ref_30
    - *ref_31
    - *ref_32
    - *ref_33
    - *ref_34
    - *ref_35
    - *ref_36
    - *ref_37
    - *ref_38
    - *ref_39
    - *ref_40
    - *ref_41
    - *ref_42
    - *ref_43
    - *ref_44
info: !<!Info> 
  description: Test Infrastructure for AutoRest
  title: body-complex
operationGroups:
  - !<!OperationGroup> 
    $key: basic
    operations:
      - !<!Operation> 
        $key: getValid
        description: 'Get complex type {id: 2, name: ''abc'', color: ''YELLOW''}'
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/basic/valid
              method: get
              servers:
                - !<!HttpServer> &ref_105
                  url: 'http://localhost:3000/'
                  language:
                    default:
                      name: server-name
                      description: MISSING-SERVER-DESCRIPTION
        responses:
          - !<!SchemaResponse> 
            schema: *ref_106
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getValid
            description: 'Get complex type {id: 2, name: ''abc'', color: ''YELLOW''}'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putValid
        description: 'Please put {id: 2, name: ''abc'', color: ''Magenta''}'
        request: !<!Request> 
          parameters:
            - !<!Parameter> 
              $key: api-version
              schema: *ref_108
              description: API ID.
              implementation: Method
              language: !<!Languages> 
                default:
                  name: api-version
                  description: API ID.
                  uid: 'parameter:376'
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/basic/valid
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putValid
            description: 'Please put {id: 2, name: ''abc'', color: ''Magenta''}'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getInvalid
        description: Get a basic complex type that is invalid for the local strong type
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/basic/invalid
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_106
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getInvalid
            description: Get a basic complex type that is invalid for the local strong type
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getEmpty
        description: Get a basic complex type that is empty
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/basic/empty
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_106
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getEmpty
            description: Get a basic complex type that is empty
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getNull
        description: Get a basic complex type whose properties are null
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/basic/null
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_106
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getNull
            description: Get a basic complex type whose properties are null
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getNotProvided
        description: Get a basic complex type while the server doesn't provide a response payload
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/basic/notprovided
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_106
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getNotProvided
            description: Get a basic complex type while the server doesn't provide a response payload
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: primitive
    operations:
      - !<!Operation> 
        $key: getInt
        description: Get complex types with integer properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/primitive/integer
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_109
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getInt
            description: Get complex types with integer properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putInt
        description: Put complex types with integer properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/primitive/integer
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putInt
            description: Put complex types with integer properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getLong
        description: Get complex types with long properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/primitive/long
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_110
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getLong
            description: Get complex types with long properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putLong
        description: Put complex types with long properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/primitive/long
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putLong
            description: Put complex types with long properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getFloat
        description: Get complex types with float properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/primitive/float
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_111
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getFloat
            description: Get complex types with float properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putFloat
        description: Put complex types with float properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/primitive/float
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putFloat
            description: Put complex types with float properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getDouble
        description: Get complex types with double properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/primitive/double
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_112
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getDouble
            description: Get complex types with double properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putDouble
        description: Put complex types with double properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/primitive/double
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putDouble
            description: Put complex types with double properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getBool
        description: Get complex types with bool properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/primitive/bool
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_113
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getBool
            description: Get complex types with bool properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putBool
        description: Put complex types with bool properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/primitive/bool
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putBool
            description: Put complex types with bool properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getString
        description: Get complex types with string properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/primitive/string
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_114
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getString
            description: Get complex types with string properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putString
        description: Put complex types with string properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/primitive/string
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putString
            description: Put complex types with string properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getDate
        description: Get complex types with date properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/primitive/date
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_115
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getDate
            description: Get complex types with date properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putDate
        description: Put complex types with date properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/primitive/date
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putDate
            description: Put complex types with date properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getDateTime
        description: Get complex types with datetime properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/primitive/datetime
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_116
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getDateTime
            description: Get complex types with datetime properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putDateTime
        description: Put complex types with datetime properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/primitive/datetime
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putDateTime
            description: Put complex types with datetime properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getDateTimeRfc1123
        description: Get complex types with datetimeRfc1123 properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/primitive/datetimerfc1123
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_117
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getDateTimeRfc1123
            description: Get complex types with datetimeRfc1123 properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putDateTimeRfc1123
        description: Put complex types with datetimeRfc1123 properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/primitive/datetimerfc1123
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putDateTimeRfc1123
            description: Put complex types with datetimeRfc1123 properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getDuration
        description: Get complex types with duration properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/primitive/duration
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_118
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getDuration
            description: Get complex types with duration properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putDuration
        description: Put complex types with duration properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/primitive/duration
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putDuration
            description: Put complex types with duration properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getByte
        description: Get complex types with byte properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/primitive/byte
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_119
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getByte
            description: Get complex types with byte properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putByte
        description: Put complex types with byte properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/primitive/byte
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putByte
            description: Put complex types with byte properties
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: array
    operations:
      - !<!Operation> 
        $key: getValid
        description: Get complex types with array property
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/array/valid
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_120
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getValid
            description: Get complex types with array property
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putValid
        description: Put complex types with array property
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/array/valid
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putValid
            description: Put complex types with array property
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getEmpty
        description: Get complex types with array property which is empty
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/array/empty
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_120
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getEmpty
            description: Get complex types with array property which is empty
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putEmpty
        description: Put complex types with array property which is empty
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/array/empty
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putEmpty
            description: Put complex types with array property which is empty
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getNotProvided
        description: Get complex types with array property while server doesn't provide a response payload
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/array/notprovided
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_120
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getNotProvided
            description: Get complex types with array property while server doesn't provide a response payload
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: dictionary
    operations:
      - !<!Operation> 
        $key: getValid
        description: Get complex types with dictionary property
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/dictionary/typed/valid
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_121
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getValid
            description: Get complex types with dictionary property
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putValid
        description: Put complex types with dictionary property
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/dictionary/typed/valid
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putValid
            description: Put complex types with dictionary property
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getEmpty
        description: Get complex types with dictionary property which is empty
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/dictionary/typed/empty
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_121
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getEmpty
            description: Get complex types with dictionary property which is empty
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putEmpty
        description: Put complex types with dictionary property which is empty
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/dictionary/typed/empty
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putEmpty
            description: Put complex types with dictionary property which is empty
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getNull
        description: Get complex types with dictionary property which is null
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/dictionary/typed/null
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_121
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getNull
            description: Get complex types with dictionary property which is null
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getNotProvided
        description: Get complex types with dictionary property while server doesn't provide a response payload
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/dictionary/typed/notprovided
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_121
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getNotProvided
            description: Get complex types with dictionary property while server doesn't provide a response payload
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: inheritance
    operations:
      - !<!Operation> 
        $key: getValid
        description: Get complex types that extend others
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/inheritance/valid
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_122
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getValid
            description: Get complex types that extend others
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putValid
        description: Put complex types that extend others
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/inheritance/valid
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putValid
            description: Put complex types that extend others
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: polymorphism
    operations:
      - !<!Operation> 
        $key: getValid
        description: Get complex types that are polymorphic
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/polymorphism/valid
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_70
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getValid
            description: Get complex types that are polymorphic
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putValid
        description: Put complex types that are polymorphic
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/polymorphism/valid
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putValid
            description: Put complex types that are polymorphic
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getDotSyntax
        description: 'Get complex types that are polymorphic, JSON key contains a dot'
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/polymorphism/dotsyntax
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_5
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getDotSyntax
            description: 'Get complex types that are polymorphic, JSON key contains a dot'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getComposedWithDiscriminator
        description: 'Get complex object composing a polymorphic scalar property and array property with polymorphic element type, with discriminator specified. Deserialization must NOT fail and use the discriminator type specified on the wire.'
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/polymorphism/composedWithDiscriminator
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_123
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getComposedWithDiscriminator
            description: 'Get complex object composing a polymorphic scalar property and array property with polymorphic element type, with discriminator specified. Deserialization must NOT fail and use the discriminator type specified on the wire.'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getComposedWithoutDiscriminator
        description: 'Get complex object composing a polymorphic scalar property and array property with polymorphic element type, without discriminator specified on wire. Deserialization must NOT fail and use the explicit type of the property.'
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/polymorphism/composedWithoutDiscriminator
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_123
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getComposedWithoutDiscriminator
            description: 'Get complex object composing a polymorphic scalar property and array property with polymorphic element type, without discriminator specified on wire. Deserialization must NOT fail and use the explicit type of the property.'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: getComplicated
        description: 'Get complex types that are polymorphic, but not at the root of the hierarchy; also have additional properties'
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/polymorphism/complicated
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_75
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getComplicated
            description: 'Get complex types that are polymorphic, but not at the root of the hierarchy; also have additional properties'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putComplicated
        description: 'Put complex types that are polymorphic, but not at the root of the hierarchy; also have additional properties'
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/polymorphism/complicated
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putComplicated
            description: 'Put complex types that are polymorphic, but not at the root of the hierarchy; also have additional properties'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putMissingDiscriminator
        description: 'Put complex types that are polymorphic, omitting the discriminator'
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/polymorphism/missingdiscriminator
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        responses:
          - !<!SchemaResponse> 
            schema: *ref_75
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putMissingDiscriminator
            description: 'Put complex types that are polymorphic, omitting the discriminator'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putValidMissingRequired
        description: 'Put complex types that are polymorphic, attempting to omit required ''birthday'' field - the request should not be allowed from the client'
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/polymorphism/missingrequired/invalid
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putValidMissingRequired
            description: 'Put complex types that are polymorphic, attempting to omit required ''birthday'' field - the request should not be allowed from the client'
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: polymorphicrecursive
    operations:
      - !<!Operation> 
        $key: getValid
        description: Get complex types that are polymorphic and have recursive references
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/polymorphicrecursive/valid
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_70
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getValid
            description: Get complex types that are polymorphic and have recursive references
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putValid
        description: Put complex types that are polymorphic and have recursive references
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/polymorphicrecursive/valid
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putValid
            description: Put complex types that are polymorphic and have recursive references
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: readonlyproperty
    operations:
      - !<!Operation> 
        $key: getValid
        description: Get complex types that have readonly properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/readonlyproperty/valid
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_124
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getValid
            description: Get complex types that have readonly properties
        protocol: !<!Protocols> {}
      - !<!Operation> 
        $key: putValid
        description: Put complex types that have readonly properties
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpStreamRequest> 
              path: /complex/readonlyproperty/valid
              method: put
              mediaType: application/json
              servers:
                - *ref_105
              stream: true
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_107
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-requestBody-index: 0
        language: !<!Languages> 
          default:
            name: putValid
            description: Put complex types that have readonly properties
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: flattencomplex
    operations:
      - !<!Operation> 
        $key: getValid
        description: MISSING-OPERATION-DESCRIPTION
        request: !<!Request> 
          language: !<!Languages> 
            default:
              name: ''
              description: ''
          protocol: !<!Protocols> 
            http: !<!HttpRequest> 
              path: /complex/flatten/valid
              method: get
              servers:
                - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_82
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !<!Languages> 
          default:
            name: getValid
            description: MISSING-OPERATION-DESCRIPTION
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> 
    servers:
      - *ref_105
