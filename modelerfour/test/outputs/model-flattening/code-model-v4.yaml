!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_4
    $key: Resource
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: id
      schema: !<!StringSchema> &ref_9
        $key: Resource-id
        type: string
        description: Resource Id
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Resource-id
            description: Resource Id
        protocol: !<!Protocols> {}
      description: Resource Id
      readOnly: true
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: Resource Id
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: type
      schema: !<!StringSchema> &ref_10
        $key: Resource-type
        type: string
        description: Resource Type
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Resource-type
            description: Resource Type
        protocol: !<!Protocols> {}
      description: Resource Type
      readOnly: true
      serializedName: type
      language: !<!Languages> 
        default:
          name: type
          description: Resource Type
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: tags
      schema: !<!DictionarySchema> &ref_24
        $key: Resource-tags
        type: dictionary
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        elementType: !<!StringSchema> &ref_11
          $key: components·schemas·resource·properties·tags·additionalproperties
          type: string
          description: MISSING-SCHEMA-DESCRIPTION-STRING
          apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
          language: !<!Languages> 
            default:
              name: components·schemas·resource·properties·tags·additionalproperties
              description: MISSING-SCHEMA-DESCRIPTION-STRING
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: Resource-tags
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: tags
      language: !<!Languages> 
        default:
          name: tags
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: location
      schema: !<!StringSchema> &ref_12
        $key: Resource-location
        type: string
        description: Resource Location
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Resource-location
            description: Resource Location
        protocol: !<!Protocols> {}
      description: Resource Location
      serializedName: location
      language: !<!Languages> 
        default:
          name: location
          description: Resource Location
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: name
      schema: !<!StringSchema> &ref_13
        $key: Resource-name
        type: string
        description: Resource Name
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Resource-name
            description: Resource Name
        protocol: !<!Protocols> {}
      description: Resource Name
      readOnly: true
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: Resource Name
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Resource
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        internal: true
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_0
    $key: Error
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: status
      schema: !<!NumberSchema> &ref_39
        $key: typeForstatus
        type: integer
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForstatus
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: message
      schema: !<!StringSchema> &ref_14
        $key: Error-message
        type: string
        description: MISSING-SCHEMA-DESCRIPTION-STRING
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Error-message
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: parentError
      schema: *ref_0
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: parentError
      language: !<!Languages> 
        default:
          name: parentError
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Error
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        internal: true
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_3
    $key: FlattenedProduct
    type: object
    description: Flattened product.
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: properties
      schema: !<!AndSchema> &ref_27
        $key: FlattenedProduct-properties
        type: and
        description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
        allOf:
        - !<!ObjectSchema> &ref_1
          $key: FlattenedProduct-properties
          type: object
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
          apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
          properties:
          - !<!Property> 
            $key: p.name
            schema: !<!StringSchema> &ref_15
              $key: FlattenedProduct-properties-p.name
              type: string
              description: MISSING-SCHEMA-DESCRIPTION-STRING
              apiVersions:
              - !<!ApiVersion> 
                version: 1.0.0
              language: !<!Languages> 
                default:
                  name: FlattenedProduct-properties-p.name
                  description: MISSING-SCHEMA-DESCRIPTION-STRING
              protocol: !<!Protocols> {}
            description: PROPERTY-DESCRIPTION-MISSING
            serializedName: p.name
            language: !<!Languages> 
              default:
                name: p.name
                description: PROPERTY-DESCRIPTION-MISSING
            protocol: !<!Protocols> {}
          - !<!Property> 
            $key: type
            schema: !<!StringSchema> &ref_16
              $key: FlattenedProduct-properties-type
              type: string
              description: MISSING-SCHEMA-DESCRIPTION-STRING
              apiVersions:
              - !<!ApiVersion> 
                version: 1.0.0
              language: !<!Languages> 
                default:
                  name: FlattenedProduct-properties-type
                  description: MISSING-SCHEMA-DESCRIPTION-STRING
              protocol: !<!Protocols> {}
            description: PROPERTY-DESCRIPTION-MISSING
            serializedName: type
            language: !<!Languages> 
              default:
                name: type
                description: PROPERTY-DESCRIPTION-MISSING
            protocol: !<!Protocols> {}
          - !<!Property> 
            $key: provisioningStateValues
            schema: !<!SealedChoiceSchema> &ref_40
              $key: FlattenedProduct-properties-provisioningStateValues
              choices:
              - !<!ChoiceValue> 
                value: Succeeded
                language:
                  default:
                    name: Succeeded
                    description: ''
              - !<!ChoiceValue> 
                value: Failed
                language:
                  default:
                    name: Failed
                    description: ''
              - !<!ChoiceValue> 
                value: canceled
                language:
                  default:
                    name: canceled
                    description: ''
              - !<!ChoiceValue> 
                value: Accepted
                language:
                  default:
                    name: Accepted
                    description: ''
              - !<!ChoiceValue> 
                value: Creating
                language:
                  default:
                    name: Creating
                    description: ''
              - !<!ChoiceValue> 
                value: Created
                language:
                  default:
                    name: Created
                    description: ''
              - !<!ChoiceValue> 
                value: Updating
                language:
                  default:
                    name: Updating
                    description: ''
              - !<!ChoiceValue> 
                value: Updated
                language:
                  default:
                    name: Updated
                    description: ''
              - !<!ChoiceValue> 
                value: Deleting
                language:
                  default:
                    name: Deleting
                    description: ''
              - !<!ChoiceValue> 
                value: Deleted
                language:
                  default:
                    name: Deleted
                    description: ''
              - !<!ChoiceValue> 
                value: OK
                language:
                  default:
                    name: OK
                    description: ''
              type: sealed-choice
              description: MISSING-SCHEMA-DESCRIPTION-CHOICE
              apiVersions:
              - !<!ApiVersion> 
                version: 1.0.0
              choiceType: !<!StringSchema> 
                $key: choice
                type: string
                description: choice
                language: !<!Languages> 
                  default:
                    name: choice
                    description: choice
                protocol: !<!Protocols> {}
              language: !<!Languages> 
                default:
                  name: FlattenedProduct-properties-provisioningStateValues
                  description: MISSING-SCHEMA-DESCRIPTION-CHOICE
              protocol: !<!Protocols> {}
            description: PROPERTY-DESCRIPTION-MISSING
            readOnly: true
            serializedName: provisioningStateValues
            language: !<!Languages> 
              default:
                name: provisioningStateValues
                description: PROPERTY-DESCRIPTION-MISSING
            protocol: !<!Protocols> {}
          - !<!Property> 
            $key: provisioningState
            schema: !<!StringSchema> &ref_17
              $key: FlattenedProduct-properties-provisioningState
              type: string
              description: MISSING-SCHEMA-DESCRIPTION-STRING
              apiVersions:
              - !<!ApiVersion> 
                version: 1.0.0
              language: !<!Languages> 
                default:
                  name: FlattenedProduct-properties-provisioningState
                  description: MISSING-SCHEMA-DESCRIPTION-STRING
              protocol: !<!Protocols> {}
            description: PROPERTY-DESCRIPTION-MISSING
            serializedName: provisioningState
            language: !<!Languages> 
              default:
                name: provisioningState
                description: PROPERTY-DESCRIPTION-MISSING
            protocol: !<!Protocols> {}
          extensions:
            x-ms-client-flatten: true
          language: !<!Languages> 
            default:
              name: FlattenedProduct-properties
              description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
              internal: true
              namespace: Api10
          protocol: !<!Protocols> {}
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: FlattenedProduct-properties
            description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
            namespace: Api10
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: properties
      language: !<!Languages> 
        default:
          name: properties
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: FlattenedProduct
        description: Flattened product.
        internal: true
        namespace: Api10
    protocol: !<!Protocols> {}
  - *ref_1
  - !<!ObjectSchema> &ref_2
    $key: WrappedProduct
    type: object
    description: The wrapped produc.
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: value
      schema: !<!StringSchema> &ref_18
        $key: WrappedProduct-value
        type: string
        description: the product value
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: WrappedProduct-value
            description: the product value
        protocol: !<!Protocols> {}
      description: the product value
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: the product value
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: WrappedProduct
        description: The wrapped produc.
        internal: true
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_29
    $key: ProductWrapper
    type: object
    description: The wrapped produc.
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: property
      schema: !<!AndSchema> &ref_28
        $key: WrappedProduct
        type: and
        description: The wrapped produc.
        allOf:
        - *ref_2
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: WrappedProduct
            description: The wrapped produc.
            namespace: Api10
        protocol: !<!Protocols> {}
      description: The wrapped produc.
      serializedName: property
      language: !<!Languages> 
        default:
          name: property
          description: The wrapped produc.
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ProductWrapper
        description: The wrapped produc.
        internal: true
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_30
    $key: ResourceCollection
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: productresource
      schema: !<!AndSchema> &ref_5
        $key: FlattenedProduct
        type: and
        description: Flattened product.
        allOf:
        - *ref_3
        - !<!AndSchema> &ref_26
          $key: Resource
          type: and
          description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
          allOf:
          - *ref_4
          apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
          language: !<!Languages> 
            default:
              name: Resource
              description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
              namespace: Api10
          protocol: !<!Protocols> {}
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: FlattenedProduct
            description: Flattened product.
            namespace: Api10
        protocol: !<!Protocols> {}
      description: Flattened product.
      serializedName: productresource
      language: !<!Languages> 
        default:
          name: productresource
          description: Flattened product.
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: arrayofresources
      schema: !<!ArraySchema> &ref_38
        $key: ResourceCollection-arrayofresources
        type: array
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        elementType: *ref_5
        language: !<!Languages> 
          default:
            name: ResourceCollection-arrayofresources
            description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: arrayofresources
      language: !<!Languages> 
        default:
          name: arrayofresources
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: dictionaryofresources
      schema: !<!DictionarySchema> &ref_25
        $key: ResourceCollection-dictionaryofresources
        type: dictionary
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        elementType: *ref_5
        language: !<!Languages> 
          default:
            name: ResourceCollection-dictionaryofresources
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: dictionaryofresources
      language: !<!Languages> 
        default:
          name: dictionaryofresources
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ResourceCollection
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        internal: true
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_31
    $key: BaseProduct
    type: object
    description: The product documentation.
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: base_product_id
      schema: !<!StringSchema> &ref_19
        $key: productId
        type: string
        description: 'Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.'
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        extensions:
          x-ms-client-name: productId
        language: !<!Languages> 
          default:
            name: productId
            description: 'Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.'
        protocol: !<!Protocols> {}
      description: 'Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.'
      required: true
      serializedName: base_product_id
      language: !<!Languages> 
        default:
          name: base_product_id
          description: 'Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.'
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: base_product_description
      schema: !<!StringSchema> &ref_20
        $key: description
        type: string
        description: Description of product.
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        extensions:
          x-ms-client-name: description
        language: !<!Languages> 
          default:
            name: description
            description: Description of product.
        protocol: !<!Protocols> {}
      description: Description of product.
      required: false
      serializedName: base_product_description
      language: !<!Languages> 
        default:
          name: base_product_description
          description: Description of product.
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: BaseProduct
        description: The product documentation.
        internal: true
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_35
    $key: SimpleProduct
    type: object
    description: The product documentation.
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: details
      schema: !<!AndSchema> &ref_34
        $key: SimpleProductProperties
        type: and
        description: The product documentation.
        allOf:
        - !<!ObjectSchema> &ref_6
          $key: SimpleProductProperties
          type: object
          description: The product documentation.
          apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
          properties:
          - !<!Property> 
            $key: max_product_display_name
            schema: !<!StringSchema> &ref_21
              $key: SimpleProductProperties-max_product_display_name
              type: string
              description: Display name of product.
              apiVersions:
              - !<!ApiVersion> 
                version: 1.0.0
              language: !<!Languages> 
                default:
                  name: SimpleProductProperties-max_product_display_name
                  description: Display name of product.
              protocol: !<!Protocols> {}
            description: Display name of product.
            required: true
            serializedName: max_product_display_name
            language: !<!Languages> 
              default:
                name: max_product_display_name
                description: Display name of product.
            protocol: !<!Protocols> {}
          - !<!Property> 
            $key: max_product_capacity
            schema: !<!SealedChoiceSchema> &ref_41
              $key: capacity
              choices:
              - !<!ChoiceValue> 
                value: Large
                language:
                  default:
                    name: Large
                    description: ''
              type: sealed-choice
              description: 'Capacity of product. For example, 4 people.'
              apiVersions:
              - !<!ApiVersion> 
                version: 1.0.0
              choiceType: !<!StringSchema> 
                $key: choice
                type: string
                description: choice
                language: !<!Languages> 
                  default:
                    name: choice
                    description: choice
                protocol: !<!Protocols> {}
              extensions:
                x-ms-client-name: capacity
              language: !<!Languages> 
                default:
                  name: capacity
                  description: 'Capacity of product. For example, 4 people.'
              protocol: !<!Protocols> {}
            description: 'Capacity of product. For example, 4 people.'
            required: true
            serializedName: max_product_capacity
            language: !<!Languages> 
              default:
                name: max_product_capacity
                description: 'Capacity of product. For example, 4 people.'
            protocol: !<!Protocols> {}
          - !<!Property> 
            $key: max_product_image
            schema: !<!AndSchema> &ref_33
              $key: ProductUrl
              type: and
              description: The product URL.
              allOf:
              - !<!ObjectSchema> &ref_8
                $key: ProductUrl
                type: object
                description: The product URL.
                apiVersions:
                - !<!ApiVersion> 
                  version: 1.0.0
                properties:
                - !<!Property> 
                  $key: '@odata.value'
                  schema: !<!StringSchema> &ref_23
                    $key: ProductUrl-@odata.value
                    type: string
                    description: URL value.
                    apiVersions:
                    - !<!ApiVersion> 
                      version: 1.0.0
                    language: !<!Languages> 
                      default:
                        name: ProductUrl-@odata.value
                        description: URL value.
                    protocol: !<!Protocols> {}
                  description: URL value.
                  serializedName: '@odata.value'
                  language: !<!Languages> 
                    default:
                      name: '@odata.value'
                      description: URL value.
                  protocol: !<!Protocols> {}
                language: !<!Languages> 
                  default:
                    name: ProductUrl
                    description: The product URL.
                    internal: true
                    namespace: Api10
                protocol: !<!Protocols> {}
              - !<!AndSchema> &ref_32
                $key: GenericUrl
                type: and
                description: The Generic URL.
                allOf:
                - !<!ObjectSchema> &ref_7
                  $key: GenericUrl
                  type: object
                  description: The Generic URL.
                  apiVersions:
                  - !<!ApiVersion> 
                    version: 1.0.0
                  properties:
                  - !<!Property> 
                    $key: generic_value
                    schema: !<!StringSchema> &ref_22
                      $key: GenericUrl-generic_value
                      type: string
                      description: Generic URL value.
                      apiVersions:
                      - !<!ApiVersion> 
                        version: 1.0.0
                      language: !<!Languages> 
                        default:
                          name: GenericUrl-generic_value
                          description: Generic URL value.
                      protocol: !<!Protocols> {}
                    description: Generic URL value.
                    serializedName: generic_value
                    language: !<!Languages> 
                      default:
                        name: generic_value
                        description: Generic URL value.
                    protocol: !<!Protocols> {}
                  language: !<!Languages> 
                    default:
                      name: GenericUrl
                      description: The Generic URL.
                      internal: true
                      namespace: Api10
                  protocol: !<!Protocols> {}
                apiVersions:
                - !<!ApiVersion> 
                  version: 1.0.0
                language: !<!Languages> 
                  default:
                    name: GenericUrl
                    description: The Generic URL.
                    namespace: Api10
                protocol: !<!Protocols> {}
              apiVersions:
              - !<!ApiVersion> 
                version: 1.0.0
              language: !<!Languages> 
                default:
                  name: ProductUrl
                  description: The product URL.
                  namespace: Api10
              protocol: !<!Protocols> {}
            description: The product URL.
            required: false
            serializedName: max_product_image
            language: !<!Languages> 
              default:
                name: max_product_image
                description: The product URL.
            protocol: !<!Protocols> {}
          language: !<!Languages> 
            default:
              name: SimpleProductProperties
              description: The product documentation.
              internal: true
              namespace: Api10
          protocol: !<!Protocols> {}
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: SimpleProductProperties
            description: The product documentation.
            namespace: Api10
        protocol: !<!Protocols> {}
      description: The product documentation.
      serializedName: details
      language: !<!Languages> 
        default:
          name: details
          description: The product documentation.
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: SimpleProduct
        description: The product documentation.
        internal: true
        namespace: Api10
    protocol: !<!Protocols> {}
  - *ref_6
  - *ref_7
  - *ref_8
  dictionaries:
  - *ref_24
  - !<!DictionarySchema> &ref_48
    $key: rqsch
    type: dictionary
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    elementType: *ref_5
    language: !<!Languages> 
      default:
        name: rqsch
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    protocol: !<!Protocols> {}
  - !<!DictionarySchema> &ref_49
    $key: paths·model_flatten-dictionary·get·responses·200·content·application-json·schema
    type: dictionary
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    elementType: *ref_5
    language: !<!Languages> 
      default:
        name: paths·model_flatten-dictionary·get·responses·200·content·application-json·schema
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    protocol: !<!Protocols> {}
  - *ref_25
  ands:
  - *ref_26
  - !<!AndSchema> &ref_44
    $key: Error
    type: and
    description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
    allOf:
    - *ref_0
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: Error
        description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - *ref_27
  - *ref_5
  - *ref_28
  - !<!AndSchema> &ref_37
    $key: ProductWrapper
    type: and
    description: The wrapped produc.
    allOf:
    - *ref_29
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: ProductWrapper
        description: The wrapped produc.
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!AndSchema> &ref_50
    $key: ResourceCollection
    type: and
    description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
    allOf:
    - *ref_30
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: ResourceCollection
        description: MISSING-SCHEMA-DESCRIPTION-ANDSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!AndSchema> &ref_36
    $key: BaseProduct
    type: and
    description: The product documentation.
    allOf:
    - *ref_31
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: BaseProduct
        description: The product documentation.
        namespace: Api10
    protocol: !<!Protocols> {}
  - *ref_32
  - *ref_33
  - *ref_34
  - !<!AndSchema> &ref_51
    $key: SimpleProduct
    type: and
    description: The product documentation.
    allOf:
    - *ref_35
    - *ref_36
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: SimpleProduct
        description: The product documentation.
        namespace: Api10
    protocol: !<!Protocols> {}
  arrays:
  - !<!ArraySchema> &ref_43
    $key: rqsch
    type: array
    description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    elementType: *ref_26
    language: !<!Languages> 
      default:
        name: rqsch
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_45
    $key: paths·model_flatten-array·get·responses·200·content·application-json·schema
    type: array
    description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_5
    language: !<!Languages> 
      default:
        name: paths·model_flatten-array·get·responses·200·content·application-json·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_46
    $key: rqsch
    type: array
    description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    elementType: *ref_28
    language: !<!Languages> 
      default:
        name: rqsch
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_47
    $key: paths·model_flatten-wrappedarray·get·responses·200·content·application-json·schema
    type: array
    description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_37
    language: !<!Languages> 
      default:
        name: paths·model_flatten-wrappedarray·get·responses·200·content·application-json·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - *ref_38
  numbers:
  - *ref_39
  sealedChoices:
  - *ref_40
  - *ref_41
  strings:
  - *ref_9
  - *ref_10
  - *ref_11
  - *ref_12
  - *ref_13
  - *ref_14
  - *ref_15
  - *ref_16
  - *ref_17
  - *ref_18
  - *ref_19
  - *ref_20
  - *ref_21
  - *ref_22
  - *ref_23
  - !<!StringSchema> &ref_52
    $key: paths·model_flatten-customflattening-parametergrouping-name·put·parameters·0·schema
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·model_flatten-customflattening-parametergrouping-name·put·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
info: !<!Info> 
  description: Resource Flattening for AutoRest
  title: model-flattening
operationGroups:
- !<!OperationGroup> 
  $key: ''
  operations:
  - !<!Operation> 
    $key: putArray
    description: Put External Resource as an Array
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: ResourceArray
        schema: *ref_43
        description: External Resource as an Array to put
        extensions:
          x-ms-requestBody-name: ResourceArray
        language: !<!Languages> 
          default:
            name: ResourceArray
            description: External Resource as an Array to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            implementation: Client
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /model-flatten/array
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - !<!HttpServer> &ref_42
            url: 'http://localhost:3000/'
            language:
              default:
                name: server-name
                description: MISSING-SERVER-DESCRIPTION
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_44
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putArray
        description: Put External Resource as an Array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getArray
    description: Get External Resource as an Array
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /model-flatten/array
          method: get
          servers:
          - *ref_42
    responses:
    - !<!SchemaResponse> 
      schema: *ref_45
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_44
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getArray
        description: Get External Resource as an Array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putWrappedArray
    description: No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: ResourceArray
        schema: *ref_46
        description: External Resource as an Array to put
        extensions:
          x-ms-requestBody-name: ResourceArray
        language: !<!Languages> 
          default:
            name: ResourceArray
            description: External Resource as an Array to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            implementation: Client
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /model-flatten/wrappedarray
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_42
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_44
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putWrappedArray
        description: No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getWrappedArray
    description: No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /model-flatten/wrappedarray
          method: get
          servers:
          - *ref_42
    responses:
    - !<!SchemaResponse> 
      schema: *ref_47
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_44
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getWrappedArray
        description: No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putDictionary
    description: Put External Resource as a Dictionary
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: ResourceDictionary
        schema: *ref_48
        description: External Resource as a Dictionary to put
        extensions:
          x-ms-requestBody-name: ResourceDictionary
        language: !<!Languages> 
          default:
            name: ResourceDictionary
            description: External Resource as a Dictionary to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            implementation: Client
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /model-flatten/dictionary
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_42
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_44
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putDictionary
        description: Put External Resource as a Dictionary
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getDictionary
    description: Get External Resource as a Dictionary
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /model-flatten/dictionary
          method: get
          servers:
          - *ref_42
    responses:
    - !<!SchemaResponse> 
      schema: *ref_49
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_44
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getDictionary
        description: Get External Resource as a Dictionary
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putResourceCollection
    description: Put External Resource as a ResourceCollection
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: ResourceComplexObject
        schema: *ref_50
        description: External Resource as a ResourceCollection to put
        extensions:
          x-ms-requestBody-name: ResourceComplexObject
        language: !<!Languages> 
          default:
            name: ResourceComplexObject
            description: External Resource as a ResourceCollection to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            implementation: Client
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /model-flatten/resourcecollection
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_42
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_44
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putResourceCollection
        description: Put External Resource as a ResourceCollection
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getResourceCollection
    description: Get External Resource as a ResourceCollection
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /model-flatten/resourcecollection
          method: get
          servers:
          - *ref_42
    responses:
    - !<!SchemaResponse> 
      schema: *ref_50
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_44
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getResourceCollection
        description: Get External Resource as a ResourceCollection
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putSimpleProduct
    description: Put Simple Product with client flattening true on the model
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: SimpleBodyProduct
        schema: *ref_51
        description: Simple body product to put
        extensions:
          x-ms-requestBody-name: SimpleBodyProduct
        language: !<!Languages> 
          default:
            name: SimpleBodyProduct
            description: Simple body product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            implementation: Client
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /model-flatten/customFlattening
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_42
    responses:
    - !<!SchemaResponse> 
      schema: *ref_51
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_44
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putSimpleProduct
        description: Put Simple Product with client flattening true on the model
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: postFlattenedSimpleProduct
    description: Put Flattened Simple Product with client flattening true on the parameter
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: SimpleBodyProduct
        schema: *ref_51
        description: Simple body product to post
        extensions:
          x-ms-client-flatten: true
          x-ms-requestBody-name: SimpleBodyProduct
        language: !<!Languages> 
          default:
            name: SimpleBodyProduct
            description: Simple body product to post
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            implementation: Client
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /model-flatten/customFlattening
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_42
    responses:
    - !<!SchemaResponse> 
      schema: *ref_51
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_44
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postFlattenedSimpleProduct
        description: Put Flattened Simple Product with client flattening true on the parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putSimpleProductWithGrouping
    description: Put Simple Product with client flattening true on the model
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: name
        schema: *ref_52
        description: Product name with value 'groupproduct'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-grouping:
            name: flatten-parameter-group
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: name
            description: Product name with value 'groupproduct'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: SimpleBodyProduct
        schema: *ref_51
        description: Simple body product to put
        extensions:
          x-ms-client-flatten: true
          x-ms-parameter-grouping:
            name: flatten-parameter-group
          x-ms-requestBody-name: SimpleBodyProduct
        language: !<!Languages> 
          default:
            name: SimpleBodyProduct
            description: Simple body product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            implementation: Client
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '/model-flatten/customFlattening/parametergrouping/{name}/'
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_42
    responses:
    - !<!SchemaResponse> 
      schema: *ref_51
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_44
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putSimpleProductWithGrouping
        description: Put Simple Product with client flattening true on the model
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: ''
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> 
    servers:
    - *ref_42
