!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_4
    $key: Error
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: status
      schema: !<!NumberSchema> &ref_0
        $key: typeForstatus
        type: integer
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForstatus
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: message
      schema: !<!StringSchema> &ref_1
        $key: get-0-itemsItem
        type: string
        description: MISSING-SCHEMA-DESCRIPTION-STRING
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: get-0-itemsItem
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Error
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  choices:
  - !<!ChoiceSchema> &ref_17
    $key: UriColor
    choices:
    - !<!ChoiceValue> 
      value: red color
      language:
        default:
          name: red color
          description: ''
    - !<!ChoiceValue> 
      value: green color
      language:
        default:
          name: green color
          description: ''
    - !<!ChoiceValue> 
      value: blue color
      language:
        default:
          name: blue color
          description: ''
    type: choice
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    choiceType: !<!StringSchema> 
      $key: choice
      type: string
      description: choice
      language: !<!Languages> 
        default:
          name: choice
          description: choice
      protocol: !<!Protocols> {}
    extensions:
      x-ms-enum:
        name: UriColor
    language: !<!Languages> 
      default:
        name: UriColor
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  arrays:
  - !<!ArraySchema> &ref_25
    $key: paths·paths-array-arraypath1-2cbegin-21-2a-27-28-29-3b-3a-40-20-26-3d-2b-24-2c-2f-3f-23-5b-5dend-2c-2c-arraypath·get·parameters·0·schema
    type: array
    description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_1
    language: !<!Languages> 
      default:
        name: paths·paths-array-arraypath1-2cbegin-21-2a-27-28-29-3b-3a-40-20-26-3d-2b-24-2c-2f-3f-23-5b-5dend-2c-2c-arraypath·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_48
    $key: paths·queries-array-csv-string-valid·get·parameters·0·schema
    type: array
    description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_1
    language: !<!Languages> 
      default:
        name: paths·queries-array-csv-string-valid·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_49
    $key: paths·queries-array-csv-string-null·get·parameters·0·schema
    type: array
    description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_1
    language: !<!Languages> 
      default:
        name: paths·queries-array-csv-string-null·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_50
    $key: paths·queries-array-csv-string-empty·get·parameters·0·schema
    type: array
    description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_1
    language: !<!Languages> 
      default:
        name: paths·queries-array-csv-string-empty·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_51
    $key: paths·queries-array-ssv-string-valid·get·parameters·0·schema
    type: array
    description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_1
    language: !<!Languages> 
      default:
        name: paths·queries-array-ssv-string-valid·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_52
    $key: paths·queries-array-tsv-string-valid·get·parameters·0·schema
    type: array
    description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_1
    language: !<!Languages> 
      default:
        name: paths·queries-array-tsv-string-valid·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_53
    $key: paths·queries-array-pipes-string-valid·get·parameters·0·schema
    type: array
    description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_1
    language: !<!Languages> 
      default:
        name: paths·queries-array-pipes-string-valid·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  booleans:
  - !<!BooleanSchema> &ref_29
    $key: paths·queries-bool-null·get·parameters·0·schema
    type: boolean
    description: MISSING-SCHEMA-DESCRIPTION-BOOLEAN
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·queries-bool-null·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-BOOLEAN
    protocol: !<!Protocols> {}
  byteArrays:
  - !<!ByteArraySchema> &ref_18
    $key: paths·paths-byte-multibyte-bytepath·get·parameters·0·schema
    type: byte-array
    format: byte
    description: MISSING-SCHEMA-DESCRIPTION-BYTEARRAY
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·paths-byte-multibyte-bytepath·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-BYTEARRAY
    protocol: !<!Protocols> {}
  - !<!ByteArraySchema> &ref_24
    $key: paths·paths-string-bg9yzw0-base64urlpath·get·parameters·0·schema
    type: byte-array
    format: base64url
    description: MISSING-SCHEMA-DESCRIPTION-BYTEARRAY
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·paths-string-bg9yzw0-base64urlpath·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-BYTEARRAY
    protocol: !<!Protocols> {}
  constants:
  - !<!ConstantSchema> &ref_3
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: true
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_5
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_6
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: 1000000
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_7
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: -1000000
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_8
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: 10000000000
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_9
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: -10000000000
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_10
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: 103400000000000000000
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_11
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: -1.034e-20
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_12
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: 9999999.999
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_13
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: -9999999.999
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_14
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: 啊齄丂狛狜隣郎隣兀﨩
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_15
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: 'begin!*''();:@ &=+$,/?#[]end'
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_16
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_19
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_20
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: '2012-01-01'
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_22
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: '2012-01-01T01:01:01Z'
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_27
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: true
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_28
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_30
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: 1000000
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_31
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: -1000000
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_33
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: 10000000000
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_34
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: -10000000000
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_36
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: 103400000000000000000
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_37
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: -1.034e-20
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_39
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: 9999999.999
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_40
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: -9999999.999
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_42
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: 啊齄丂狛狜隣郎隣兀﨩
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_43
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: 'begin!*''();:@ &=+$,/?#[]end'
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_44
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_45
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_46
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: '2012-01-01'
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_47
    type: constant
    description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    value: '2012-01-01T01:01:01Z'
    valueType: !<!StringSchema> 
      $key: constant
      type: string
      description: constant
      language: !<!Languages> 
        default:
          name: constant
          description: constant
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  dateTimes:
  - !<!DateTimeSchema> &ref_23
    $key: paths·paths-datetime-null-datetimepath·get·parameters·0·schema
    type: date-time
    format: date-time
    description: MISSING-SCHEMA-DESCRIPTION-DATETIME
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·paths-datetime-null-datetimepath·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-DATETIME
    protocol: !<!Protocols> {}
  dates:
  - !<!DateSchema> &ref_21
    $key: paths·paths-date-null-datepath·get·parameters·0·schema
    type: date
    description: MISSING-SCHEMA-DESCRIPTION-DATE
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·paths-date-null-datepath·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-DATE
    protocol: !<!Protocols> {}
  numbers:
  - *ref_0
  - !<!NumberSchema> &ref_32
    $key: paths·queries-int-null·get·parameters·0·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·queries-int-null·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_35
    $key: paths·queries-long-null·get·parameters·0·schema
    type: integer
    description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 64
    language: !<!Languages> 
      default:
        name: paths·queries-long-null·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_38
    $key: paths·queries-float-null·get·parameters·0·schema
    type: number
    description: MISSING-SCHEMA-DESCRIPTION-NUMBER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·queries-float-null·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-NUMBER
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_41
    $key: paths·queries-double-null·get·parameters·0·schema
    type: number
    description: MISSING-SCHEMA-DESCRIPTION-NUMBER
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 64
    language: !<!Languages> 
      default:
        name: paths·queries-double-null·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-NUMBER
    protocol: !<!Protocols> {}
  strings:
  - *ref_1
  - !<!StringSchema> &ref_54
    $key: ''
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    language: !<!Languages> 
      default:
        name: ''
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_55
    $key: ''
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    language: !<!Languages> 
      default:
        name: ''
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_56
    $key: ''
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    language: !<!Languages> 
      default:
        name: ''
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_57
    $key: ''
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    language: !<!Languages> 
      default:
        name: ''
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_58
    $key: ''
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    language: !<!Languages> 
      default:
        name: ''
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_59
    $key: ''
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    language: !<!Languages> 
      default:
        name: ''
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_60
    $key: ''
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    language: !<!Languages> 
      default:
        name: ''
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_61
    $key: ''
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    language: !<!Languages> 
      default:
        name: ''
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  unixtimes:
  - !<!UnixTimeSchema> &ref_26
    $key: paths·paths-int-1460505600-unixtimeurlpath·get·parameters·0·schema
    type: unixtime
    description: MISSING-SCHEMA-DESCRIPTION-UNIXTIME
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·paths-int-1460505600-unixtimeurlpath·get·parameters·0·schema
        description: MISSING-SCHEMA-DESCRIPTION-UNIXTIME
    protocol: !<!Protocols> {}
info: !<!Info> 
  description: Test Infrastructure for AutoRest
  title: url
operationGroups:
- !<!OperationGroup> 
  $key: paths
  operations:
  - !<!Operation> 
    $key: getBooleanTrue
    description: Get true Boolean value on path
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: boolPath
        schema: *ref_3
        description: true boolean value
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: boolPath
            description: true boolean value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/bool/true/{boolPath}'
          method: get
          servers:
          - !<!HttpServer> &ref_2
            url: 'http://localhost:3000/'
            language:
              default:
                name: server-name
                description: MISSING-SERVER-DESCRIPTION
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getBooleanTrue
        description: Get true Boolean value on path
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getBooleanFalse
    description: Get false Boolean value on path
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: boolPath
        schema: *ref_5
        description: false boolean value
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: boolPath
            description: false boolean value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/bool/false/{boolPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getBooleanFalse
        description: Get false Boolean value on path
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getIntOneMillion
    description: Get '1000000' integer value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: intPath
        schema: *ref_6
        description: '''1000000'' integer value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: intPath
            description: '''1000000'' integer value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/int/1000000/{intPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getIntOneMillion
        description: Get '1000000' integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getIntNegativeOneMillion
    description: Get '-1000000' integer value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: intPath
        schema: *ref_7
        description: '''-1000000'' integer value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: intPath
            description: '''-1000000'' integer value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/int/-1000000/{intPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getIntNegativeOneMillion
        description: Get '-1000000' integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getTenBillion
    description: Get '10000000000' 64 bit integer value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: longPath
        schema: *ref_8
        description: '''10000000000'' 64 bit integer value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: longPath
            description: '''10000000000'' 64 bit integer value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/long/10000000000/{longPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getTenBillion
        description: Get '10000000000' 64 bit integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getNegativeTenBillion
    description: Get '-10000000000' 64 bit integer value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: longPath
        schema: *ref_9
        description: '''-10000000000'' 64 bit integer value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: longPath
            description: '''-10000000000'' 64 bit integer value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/long/-10000000000/{longPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getNegativeTenBillion
        description: Get '-10000000000' 64 bit integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: floatScientificPositive
    description: Get '1.034E+20' numeric value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: floatPath
        schema: *ref_10
        description: '''1.034E+20''numeric value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: floatPath
            description: '''1.034E+20''numeric value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/float/1.034E+20/{floatPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: floatScientificPositive
        description: Get '1.034E+20' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: floatScientificNegative
    description: Get '-1.034E-20' numeric value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: floatPath
        schema: *ref_11
        description: '''-1.034E-20''numeric value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: floatPath
            description: '''-1.034E-20''numeric value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/float/-1.034E-20/{floatPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: floatScientificNegative
        description: Get '-1.034E-20' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: doubleDecimalPositive
    description: Get '9999999.999' numeric value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: doublePath
        schema: *ref_12
        description: '''9999999.999''numeric value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: doublePath
            description: '''9999999.999''numeric value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/double/9999999.999/{doublePath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: doubleDecimalPositive
        description: Get '9999999.999' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: doubleDecimalNegative
    description: Get '-9999999.999' numeric value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: doublePath
        schema: *ref_13
        description: '''-9999999.999''numeric value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: doublePath
            description: '''-9999999.999''numeric value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/double/-9999999.999/{doublePath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: doubleDecimalNegative
        description: Get '-9999999.999' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: stringUnicode
    description: Get '啊齄丂狛狜隣郎隣兀﨩' multi-byte string value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringPath
        schema: *ref_14
        description: '''啊齄丂狛狜隣郎隣兀﨩''multi-byte string value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: stringPath
            description: '''啊齄丂狛狜隣郎隣兀﨩''multi-byte string value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/string/unicode/{stringPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringUnicode
        description: Get '啊齄丂狛狜隣郎隣兀﨩' multi-byte string value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: stringUrlEncoded
    description: 'Get ''begin!*''();:@ &=+$,/?#[]end'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringPath
        schema: *ref_15
        description: '''begin!*''();:@ &=+$,/?#[]end'' url encoded string value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: stringPath
            description: '''begin!*''();:@ &=+$,/?#[]end'' url encoded string value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/string/begin%21%2A%27%28%29%3B%3A%40%20%26%3D%2B%24%2C%2F%3F%23%5B%5Dend/{stringPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringUrlEncoded
        description: 'Get ''begin!*''();:@ &=+$,/?#[]end'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: stringEmpty
    description: Get ''
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringPath
        schema: *ref_16
        description: ''''' string value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: stringPath
            description: ''''' string value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/string/empty/{stringPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringEmpty
        description: Get ''
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: stringNull
    description: Get null (should throw)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringPath
        schema: *ref_1
        description: null string value
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: stringPath
            description: null string value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/string/null/{stringPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '400'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringNull
        description: Get null (should throw)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: enumValid
    description: Get using uri with 'green color' in path parameter
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: enumPath
        schema: *ref_17
        description: send the value green
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: enumPath
            description: send the value green
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/enum/green%20color/{enumPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: enumValid
        description: Get using uri with 'green color' in path parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: enumNull
    description: Get null (should throw on the client before the request is sent on wire)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: enumPath
        schema: *ref_17
        description: send null should throw
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: enumPath
            description: send null should throw
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/string/null/{enumPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '400'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: enumNull
        description: Get null (should throw on the client before the request is sent on wire)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: byteMultiByte
    description: Get '啊齄丂狛狜隣郎隣兀﨩' multibyte value as utf-8 encoded byte array
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: bytePath
        schema: *ref_18
        description: '''啊齄丂狛狜隣郎隣兀﨩'' multibyte value as utf-8 encoded byte array'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: bytePath
            description: '''啊齄丂狛狜隣郎隣兀﨩'' multibyte value as utf-8 encoded byte array'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/byte/multibyte/{bytePath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: byteMultiByte
        description: Get '啊齄丂狛狜隣郎隣兀﨩' multibyte value as utf-8 encoded byte array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: byteEmpty
    description: Get '' as byte array
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: bytePath
        schema: *ref_19
        description: ''''' as byte array'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: bytePath
            description: ''''' as byte array'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/byte/empty/{bytePath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: byteEmpty
        description: Get '' as byte array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: byteNull
    description: Get null as byte array (should throw)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: bytePath
        schema: *ref_18
        description: null as byte array (should throw)
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: bytePath
            description: null as byte array (should throw)
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/byte/null/{bytePath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '400'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: byteNull
        description: Get null as byte array (should throw)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: DateValid
    description: Get '2012-01-01' as date
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: datePath
        schema: *ref_20
        description: '''2012-01-01'' as date'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: datePath
            description: '''2012-01-01'' as date'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/date/2012-01-01/{datePath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateValid
        description: Get '2012-01-01' as date
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: DateNull
    description: 'Get null as date - this should throw or be unusable on the client side, depending on date representation'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: datePath
        schema: *ref_21
        description: null as date (should throw)
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: datePath
            description: null as date (should throw)
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/date/null/{datePath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '400'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateNull
        description: 'Get null as date - this should throw or be unusable on the client side, depending on date representation'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: DateTimeValid
    description: 'Get ''2012-01-01T01:01:01Z'' as date-time'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: dateTimePath
        schema: *ref_22
        description: '''2012-01-01T01:01:01Z'' as date-time'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: dateTimePath
            description: '''2012-01-01T01:01:01Z'' as date-time'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/datetime/2012-01-01T01%3A01%3A01Z/{dateTimePath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateTimeValid
        description: 'Get ''2012-01-01T01:01:01Z'' as date-time'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: DateTimeNull
    description: 'Get null as date-time, should be disallowed or throw depending on representation of date-time'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: dateTimePath
        schema: *ref_23
        description: null as date-time
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: dateTimePath
            description: null as date-time
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/datetime/null/{dateTimePath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '400'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateTimeNull
        description: 'Get null as date-time, should be disallowed or throw depending on representation of date-time'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: base64Url
    description: Get 'lorem' encoded value as 'bG9yZW0' (base64url)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: base64UrlPath
        schema: *ref_24
        description: base64url encoded value
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: base64UrlPath
            description: base64url encoded value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/string/bG9yZW0/{base64UrlPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: base64Url
        description: Get 'lorem' encoded value as 'bG9yZW0' (base64url)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: ArrayCsvInPath
    description: 'Get an array of string [''ArrayPath1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: arrayPath
        schema: *ref_25
        description: 'an array of string [''ArrayPath1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: arrayPath
            description: 'an array of string [''ArrayPath1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/array/ArrayPath1%2cbegin%21%2A%27%28%29%3B%3A%40%20%26%3D%2B%24%2C%2F%3F%23%5B%5Dend%2c%2c/{arrayPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayCsvInPath
        description: 'Get an array of string [''ArrayPath1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: unixTimeUrl
    description: Get the date 2016-04-13 encoded value as '1460505600' (Unix time)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: unixTimeUrlPath
        schema: *ref_26
        description: Unix time encoded value
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: unixTimeUrlPath
            description: Unix time encoded value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/paths/int/1460505600/{unixTimeUrlPath}'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: unixTimeUrl
        description: Get the date 2016-04-13 encoded value as '1460505600' (Unix time)
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: ''
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: queries
  operations:
  - !<!Operation> 
    $key: getBooleanTrue
    description: Get true Boolean value on path
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: boolQuery
        schema: *ref_27
        description: true boolean value
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: boolQuery
            description: true boolean value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/bool/true
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getBooleanTrue
        description: Get true Boolean value on path
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getBooleanFalse
    description: Get false Boolean value on path
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: boolQuery
        schema: *ref_28
        description: false boolean value
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: boolQuery
            description: false boolean value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/bool/false
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getBooleanFalse
        description: Get false Boolean value on path
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getBooleanNull
    description: Get null Boolean value on query (query string should be absent)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: boolQuery
        schema: *ref_29
        description: null boolean value
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: boolQuery
            description: null boolean value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/bool/null
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getBooleanNull
        description: Get null Boolean value on query (query string should be absent)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getIntOneMillion
    description: Get '1000000' integer value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: intQuery
        schema: *ref_30
        description: '''1000000'' integer value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: intQuery
            description: '''1000000'' integer value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/int/1000000
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getIntOneMillion
        description: Get '1000000' integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getIntNegativeOneMillion
    description: Get '-1000000' integer value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: intQuery
        schema: *ref_31
        description: '''-1000000'' integer value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: intQuery
            description: '''-1000000'' integer value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/int/-1000000
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getIntNegativeOneMillion
        description: Get '-1000000' integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getIntNull
    description: Get null integer value (no query parameter)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: intQuery
        schema: *ref_32
        description: null integer value
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: intQuery
            description: null integer value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/int/null
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getIntNull
        description: Get null integer value (no query parameter)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getTenBillion
    description: Get '10000000000' 64 bit integer value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: longQuery
        schema: *ref_33
        description: '''10000000000'' 64 bit integer value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: longQuery
            description: '''10000000000'' 64 bit integer value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/long/10000000000
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getTenBillion
        description: Get '10000000000' 64 bit integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getNegativeTenBillion
    description: Get '-10000000000' 64 bit integer value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: longQuery
        schema: *ref_34
        description: '''-10000000000'' 64 bit integer value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: longQuery
            description: '''-10000000000'' 64 bit integer value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/long/-10000000000
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getNegativeTenBillion
        description: Get '-10000000000' 64 bit integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getLongNull
    description: Get 'null 64 bit integer value (no query param in uri)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: longQuery
        schema: *ref_35
        description: null 64 bit integer value
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: longQuery
            description: null 64 bit integer value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/long/null
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getLongNull
        description: Get 'null 64 bit integer value (no query param in uri)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: floatScientificPositive
    description: Get '1.034E+20' numeric value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: floatQuery
        schema: *ref_36
        description: '''1.034E+20''numeric value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: floatQuery
            description: '''1.034E+20''numeric value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/float/1.034E+20
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: floatScientificPositive
        description: Get '1.034E+20' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: floatScientificNegative
    description: Get '-1.034E-20' numeric value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: floatQuery
        schema: *ref_37
        description: '''-1.034E-20''numeric value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: floatQuery
            description: '''-1.034E-20''numeric value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/float/-1.034E-20
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: floatScientificNegative
        description: Get '-1.034E-20' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: floatNull
    description: Get null numeric value (no query parameter)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: floatQuery
        schema: *ref_38
        description: null numeric value
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: floatQuery
            description: null numeric value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/float/null
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: floatNull
        description: Get null numeric value (no query parameter)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: doubleDecimalPositive
    description: Get '9999999.999' numeric value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: doubleQuery
        schema: *ref_39
        description: '''9999999.999''numeric value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: doubleQuery
            description: '''9999999.999''numeric value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/double/9999999.999
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: doubleDecimalPositive
        description: Get '9999999.999' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: doubleDecimalNegative
    description: Get '-9999999.999' numeric value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: doubleQuery
        schema: *ref_40
        description: '''-9999999.999''numeric value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: doubleQuery
            description: '''-9999999.999''numeric value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/double/-9999999.999
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: doubleDecimalNegative
        description: Get '-9999999.999' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: doubleNull
    description: Get null numeric value (no query parameter)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: doubleQuery
        schema: *ref_41
        description: null numeric value
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: doubleQuery
            description: null numeric value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/double/null
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: doubleNull
        description: Get null numeric value (no query parameter)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: stringUnicode
    description: Get '啊齄丂狛狜隣郎隣兀﨩' multi-byte string value
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringQuery
        schema: *ref_42
        description: '''啊齄丂狛狜隣郎隣兀﨩''multi-byte string value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: stringQuery
            description: '''啊齄丂狛狜隣郎隣兀﨩''multi-byte string value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/string/unicode/
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringUnicode
        description: Get '啊齄丂狛狜隣郎隣兀﨩' multi-byte string value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: stringUrlEncoded
    description: 'Get ''begin!*''();:@ &=+$,/?#[]end'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringQuery
        schema: *ref_43
        description: '''begin!*''();:@ &=+$,/?#[]end'' url encoded string value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: stringQuery
            description: '''begin!*''();:@ &=+$,/?#[]end'' url encoded string value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/string/begin%21%2A%27%28%29%3B%3A%40%20%26%3D%2B%24%2C%2F%3F%23%5B%5Dend
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringUrlEncoded
        description: 'Get ''begin!*''();:@ &=+$,/?#[]end'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: stringEmpty
    description: Get ''
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringQuery
        schema: *ref_44
        description: ''''' string value'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: stringQuery
            description: ''''' string value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/string/empty
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringEmpty
        description: Get ''
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: stringNull
    description: Get null (no query parameter in url)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: stringQuery
        schema: *ref_1
        description: null string value
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: stringQuery
            description: null string value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/string/null
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringNull
        description: Get null (no query parameter in url)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: enumValid
    description: Get using uri with query parameter 'green color'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: enumQuery
        schema: *ref_17
        description: '''green color'' enum value'
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: enumQuery
            description: '''green color'' enum value'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/enum/green%20color
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: enumValid
        description: Get using uri with query parameter 'green color'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: enumNull
    description: Get null (no query parameter in url)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: enumQuery
        schema: *ref_17
        description: null string value
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: enumQuery
            description: null string value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/enum/null
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: enumNull
        description: Get null (no query parameter in url)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: byteMultiByte
    description: Get '啊齄丂狛狜隣郎隣兀﨩' multibyte value as utf-8 encoded byte array
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: byteQuery
        schema: *ref_18
        description: '''啊齄丂狛狜隣郎隣兀﨩'' multibyte value as utf-8 encoded byte array'
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: byteQuery
            description: '''啊齄丂狛狜隣郎隣兀﨩'' multibyte value as utf-8 encoded byte array'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/byte/multibyte
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: byteMultiByte
        description: Get '啊齄丂狛狜隣郎隣兀﨩' multibyte value as utf-8 encoded byte array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: byteEmpty
    description: Get '' as byte array
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: byteQuery
        schema: *ref_45
        description: ''''' as byte array'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: byteQuery
            description: ''''' as byte array'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/byte/empty
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: byteEmpty
        description: Get '' as byte array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: byteNull
    description: Get null as byte array (no query parameters in uri)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: byteQuery
        schema: *ref_18
        description: null as byte array (no query parameters in uri)
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: byteQuery
            description: null as byte array (no query parameters in uri)
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/byte/null
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: byteNull
        description: Get null as byte array (no query parameters in uri)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: DateValid
    description: Get '2012-01-01' as date
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: dateQuery
        schema: *ref_46
        description: '''2012-01-01'' as date'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: dateQuery
            description: '''2012-01-01'' as date'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/date/2012-01-01
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateValid
        description: Get '2012-01-01' as date
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: DateNull
    description: Get null as date - this should result in no query parameters in uri
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: dateQuery
        schema: *ref_21
        description: null as date (no query parameters in uri)
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: dateQuery
            description: null as date (no query parameters in uri)
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/date/null
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateNull
        description: Get null as date - this should result in no query parameters in uri
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: DateTimeValid
    description: 'Get ''2012-01-01T01:01:01Z'' as date-time'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: dateTimeQuery
        schema: *ref_47
        description: '''2012-01-01T01:01:01Z'' as date-time'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: dateTimeQuery
            description: '''2012-01-01T01:01:01Z'' as date-time'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/datetime/2012-01-01T01%3A01%3A01Z
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateTimeValid
        description: 'Get ''2012-01-01T01:01:01Z'' as date-time'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: DateTimeNull
    description: 'Get null as date-time, should result in no query parameters in uri'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: dateTimeQuery
        schema: *ref_23
        description: null as date-time (no query parameters)
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: dateTimeQuery
            description: null as date-time (no query parameters)
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/datetime/null
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateTimeNull
        description: 'Get null as date-time, should result in no query parameters in uri'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: ArrayStringCsvValid
    description: 'Get an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: arrayQuery
        schema: *ref_48
        description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: arrayQuery
            description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/array/csv/string/valid
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayStringCsvValid
        description: 'Get an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: ArrayStringCsvNull
    description: Get a null array of string using the csv-array format
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: arrayQuery
        schema: *ref_49
        description: a null array of string using the csv-array format
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: arrayQuery
            description: a null array of string using the csv-array format
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/array/csv/string/null
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayStringCsvNull
        description: Get a null array of string using the csv-array format
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: ArrayStringCsvEmpty
    description: 'Get an empty array [] of string using the csv-array format'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: arrayQuery
        schema: *ref_50
        description: 'an empty array [] of string using the csv-array format'
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: arrayQuery
            description: 'an empty array [] of string using the csv-array format'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/array/csv/string/empty
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayStringCsvEmpty
        description: 'Get an empty array [] of string using the csv-array format'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: ArrayStringSsvValid
    description: 'Get an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the ssv-array format'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: arrayQuery
        schema: *ref_51
        description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the ssv-array format'
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: arrayQuery
            description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the ssv-array format'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/array/ssv/string/valid
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayStringSsvValid
        description: 'Get an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the ssv-array format'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: ArrayStringTsvValid
    description: 'Get an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the tsv-array format'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: arrayQuery
        schema: *ref_52
        description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the tsv-array format'
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: arrayQuery
            description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the tsv-array format'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/array/tsv/string/valid
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayStringTsvValid
        description: 'Get an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the tsv-array format'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: ArrayStringPipesValid
    description: 'Get an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the pipes-array format'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: arrayQuery
        schema: *ref_53
        description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the pipes-array format'
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: arrayQuery
            description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the pipes-array format'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /queries/array/pipes/string/valid
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayStringPipesValid
        description: 'Get an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the pipes-array format'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: ''
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: pathItems
  operations:
  - !<!Operation> 
    $key: getAllWithValues
    description: >-
      send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath', localStringPath='localStringPath', globalStringQuery='globalStringQuery', pathItemStringQuery='pathItemStringQuery',
      localStringQuery='localStringQuery'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: pathItemStringPath
        schema: *ref_54
        description: A string value 'pathItemStringPath' that appears in the path
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: pathItemStringPath
            description: A string value 'pathItemStringPath' that appears in the path
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: pathItemStringQuery
        schema: *ref_55
        description: A string value 'pathItemStringQuery' that appears as a query parameter
        implementation: Method
        language: !<!Languages> 
          default:
            name: pathItemStringQuery
            description: A string value 'pathItemStringQuery' that appears as a query parameter
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: localStringPath
        schema: *ref_1
        description: should contain value 'localStringPath'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: localStringPath
            description: should contain value 'localStringPath'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: localStringQuery
        schema: *ref_1
        description: should contain value 'localStringQuery'
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: localStringQuery
            description: should contain value 'localStringQuery'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/globalStringQuery/pathItemStringQuery/localStringQuery'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getAllWithValues
        description: >-
          send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath', localStringPath='localStringPath', globalStringQuery='globalStringQuery', pathItemStringQuery='pathItemStringQuery',
          localStringQuery='localStringQuery'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getGlobalQueryNull
    description: 'send globalStringPath=''globalStringPath'', pathItemStringPath=''pathItemStringPath'', localStringPath=''localStringPath'', globalStringQuery=null, pathItemStringQuery=''pathItemStringQuery'', localStringQuery=''localStringQuery'''
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: pathItemStringPath
        schema: *ref_56
        description: A string value 'pathItemStringPath' that appears in the path
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: pathItemStringPath
            description: A string value 'pathItemStringPath' that appears in the path
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: pathItemStringQuery
        schema: *ref_57
        description: A string value 'pathItemStringQuery' that appears as a query parameter
        implementation: Method
        language: !<!Languages> 
          default:
            name: pathItemStringQuery
            description: A string value 'pathItemStringQuery' that appears as a query parameter
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: localStringPath
        schema: *ref_1
        description: should contain value 'localStringPath'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: localStringPath
            description: should contain value 'localStringPath'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: localStringQuery
        schema: *ref_1
        description: should contain value 'localStringQuery'
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: localStringQuery
            description: should contain value 'localStringQuery'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/null/pathItemStringQuery/localStringQuery'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getGlobalQueryNull
        description: 'send globalStringPath=''globalStringPath'', pathItemStringPath=''pathItemStringPath'', localStringPath=''localStringPath'', globalStringQuery=null, pathItemStringQuery=''pathItemStringQuery'', localStringQuery=''localStringQuery'''
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getGlobalAndLocalQueryNull
    description: 'send globalStringPath=globalStringPath, pathItemStringPath=''pathItemStringPath'', localStringPath=''localStringPath'', globalStringQuery=null, pathItemStringQuery=''pathItemStringQuery'', localStringQuery=null'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: pathItemStringPath
        schema: *ref_58
        description: A string value 'pathItemStringPath' that appears in the path
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: pathItemStringPath
            description: A string value 'pathItemStringPath' that appears in the path
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: pathItemStringQuery
        schema: *ref_59
        description: A string value 'pathItemStringQuery' that appears as a query parameter
        implementation: Method
        language: !<!Languages> 
          default:
            name: pathItemStringQuery
            description: A string value 'pathItemStringQuery' that appears as a query parameter
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: localStringPath
        schema: *ref_1
        description: should contain value 'localStringPath'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: localStringPath
            description: should contain value 'localStringPath'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: localStringQuery
        schema: *ref_1
        description: should contain null value
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: localStringQuery
            description: should contain null value
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/null/pathItemStringQuery/null'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getGlobalAndLocalQueryNull
        description: 'send globalStringPath=globalStringPath, pathItemStringPath=''pathItemStringPath'', localStringPath=''localStringPath'', globalStringQuery=null, pathItemStringQuery=''pathItemStringQuery'', localStringQuery=null'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getLocalPathItemQueryNull
    description: 'send globalStringPath=''globalStringPath'', pathItemStringPath=''pathItemStringPath'', localStringPath=''localStringPath'', globalStringQuery=''globalStringQuery'', pathItemStringQuery=null, localStringQuery=null'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: pathItemStringPath
        schema: *ref_60
        description: A string value 'pathItemStringPath' that appears in the path
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: pathItemStringPath
            description: A string value 'pathItemStringPath' that appears in the path
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: pathItemStringQuery
        schema: *ref_61
        description: should contain value null
        implementation: Method
        language: !<!Languages> 
          default:
            name: pathItemStringQuery
            description: should contain value null
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: localStringPath
        schema: *ref_1
        description: should contain value 'localStringPath'
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: localStringPath
            description: should contain value 'localStringPath'
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: localStringQuery
        schema: *ref_1
        description: should contain value null
        implementation: Method
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: localStringQuery
            description: should contain value null
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/globalStringQuery/null/null'
          method: get
          servers:
          - *ref_2
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_4
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getLocalPathItemQueryNull
        description: 'send globalStringPath=''globalStringPath'', pathItemStringPath=''pathItemStringPath'', localStringPath=''localStringPath'', globalStringQuery=''globalStringQuery'', pathItemStringQuery=null, localStringQuery=null'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: ''
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> 
    servers:
    - *ref_2
