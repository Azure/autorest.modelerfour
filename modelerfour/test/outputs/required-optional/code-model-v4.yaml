!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_19
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!NumberSchema> &ref_7
        type: integer
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForstatus
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: MISSING-SCHEMA-DESCRIPTION-INTEGER
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_0
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Error-message
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: MISSING-SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Error
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_29
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!NumberSchema> &ref_8
        type: integer
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForvalue
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      required: true
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: MISSING-SCHEMA-DESCRIPTION-INTEGER
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: int-wrapper
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_30
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!NumberSchema> &ref_9
        type: integer
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForvalue
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: MISSING-SCHEMA-DESCRIPTION-INTEGER
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: int-optional-wrapper
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_35
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!StringSchema> &ref_1
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: string-wrapper-value
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      required: true
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: MISSING-SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: string-wrapper
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_36
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!StringSchema> &ref_2
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: string-optional-wrapper-value
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: MISSING-SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: string-optional-wrapper
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_4
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!NumberSchema> &ref_10
        type: integer
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForid
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      required: true
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: MISSING-SCHEMA-DESCRIPTION-INTEGER
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_3
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: product-name
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      required: false
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: MISSING-SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: product
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_39
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: *ref_4
      required: true
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: class-wrapper
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_40
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: *ref_4
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: class-optional-wrapper
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_43
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!ArraySchema> &ref_13
        type: array
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        elementType: !<!StringSchema> &ref_5
          type: string
          apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
          language: !<!Languages> 
            default:
              name: array-wrapper-valueItem
              description: MISSING-SCHEMA-DESCRIPTION-STRING
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: array-wrapper-value
            description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
        protocol: !<!Protocols> {}
      required: true
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: array-wrapper
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_44
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!ArraySchema> &ref_14
        type: array
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        elementType: !<!StringSchema> &ref_6
          type: string
          apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
          language: !<!Languages> 
            default:
              name: array-optional-wrapper-valueItem
              description: MISSING-SCHEMA-DESCRIPTION-STRING
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: array-optional-wrapper-value
            description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
        protocol: !<!Protocols> {}
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: array-optional-wrapper
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  arrays:
  - !<!ArraySchema> &ref_41
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: !<!StringSchema> &ref_11
      type: string
      apiVersions:
      - !<!ApiVersion> 
        version: 1.0.0
      language: !<!Languages> 
        default:
          name: post-content-schemaItem
          description: MISSING-SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-requied-array-parameterÂ·postÂ·requestbodyÂ·contentÂ·application-jsonÂ·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_42
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: !<!StringSchema> &ref_12
      type: string
      apiVersions:
      - !<!ApiVersion> 
        version: 1.0.0
      language: !<!Languages> 
        default:
          name: pathsÂ·reqopt-optional-array-parameterÂ·postÂ·requestbodyÂ·contentÂ·application-jsonÂ·schemaÂ·items
          description: MISSING-SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-optional-array-parameterÂ·postÂ·requestbodyÂ·contentÂ·application-jsonÂ·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - *ref_13
  - *ref_14
  - !<!ArraySchema> &ref_45
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: !<!StringSchema> &ref_15
      type: string
      apiVersions:
      - !<!ApiVersion> 
        version: 1.0.0
      language: !<!Languages> 
        default:
          name: post-0-itemsItem
          description: MISSING-SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-requied-array-headerÂ·postÂ·parametersÂ·0Â·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_46
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: !<!StringSchema> &ref_16
      type: string
      apiVersions:
      - !<!ApiVersion> 
        version: 1.0.0
      language: !<!Languages> 
        default:
          name: pathsÂ·reqopt-optional-array-headerÂ·postÂ·parametersÂ·0Â·schemaÂ·items
          description: MISSING-SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-optional-array-headerÂ·postÂ·parametersÂ·0Â·schema
        description: MISSING-SCHEMA-DESCRIPTION-ARRAYSCHEMA
    protocol: !<!Protocols> {}
  numbers:
  - *ref_7
  - !<!NumberSchema> &ref_27
    type: integer
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-requied-integer-parameterÂ·postÂ·requestbodyÂ·contentÂ·application-jsonÂ·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_28
    type: integer
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-optional-integer-parameterÂ·postÂ·requestbodyÂ·contentÂ·application-jsonÂ·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    protocol: !<!Protocols> {}
  - *ref_8
  - *ref_9
  - !<!NumberSchema> &ref_31
    type: integer
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-requied-integer-headerÂ·postÂ·parametersÂ·0Â·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_32
    type: integer
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-optional-integer-headerÂ·postÂ·parametersÂ·0Â·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    protocol: !<!Protocols> {}
  - *ref_10
  - !<!NumberSchema> &ref_26
    type: integer
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: componentsÂ·parametersÂ·optional_global_queryÂ·schema
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
    protocol: !<!Protocols> {}
  strings:
  - !<!StringSchema> &ref_17
    type: string
    language: !<!Languages> 
      default:
        name: string
        description: simple string
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_18
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-implicit-required-path-pathparameterÂ·getÂ·parametersÂ·0Â·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - *ref_0
  - !<!StringSchema> &ref_21
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-implicit-optional-queryÂ·putÂ·parametersÂ·0Â·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_22
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-implicit-optional-headerÂ·putÂ·parametersÂ·0Â·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_23
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-implicit-optional-bodyÂ·putÂ·requestbodyÂ·contentÂ·application-jsonÂ·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_33
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-requied-string-parameterÂ·postÂ·requestbodyÂ·contentÂ·application-jsonÂ·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_34
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-optional-string-parameterÂ·postÂ·requestbodyÂ·contentÂ·application-jsonÂ·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - *ref_1
  - *ref_2
  - !<!StringSchema> &ref_37
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-requied-string-headerÂ·postÂ·parametersÂ·0Â·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_38
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: pathsÂ·reqopt-optional-string-headerÂ·postÂ·parametersÂ·0Â·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - *ref_3
  - *ref_11
  - *ref_12
  - *ref_5
  - *ref_6
  - *ref_15
  - *ref_16
  - !<!StringSchema> &ref_24
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: componentsÂ·parametersÂ·required_global_pathÂ·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_25
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: componentsÂ·parametersÂ·required_global_queryÂ·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
globalParameters:
- !<!Parameter> &ref_20
  schema: *ref_17
  clientDefaultValue: 'http://localhost:3000'
  implementation: Client
  required: true
  language: !<!Languages> 
    default:
      name: $host
      description: server parameter
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: path
info: !<!Info> 
  description: Test Infrastructure for AutoRest
  title: required-optional
operationGroups:
- !<!OperationGroup> 
  $key: implicit
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_18
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: pathParameter
            description: MISSING-PARAMETER-DESCRIPTION
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '{$host}/reqopt/implicit/required/path/{pathParameter}'
          method: get
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getRequiredPath
        description: Test implicitly required path parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_21
        implementation: Method
        language: !<!Languages> 
          default:
            name: queryParameter
            description: MISSING-PARAMETER-DESCRIPTION
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '{$host}/reqopt/implicit/optional/query'
          method: put
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: putOptionalQuery
        description: Test implicitly optional query parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_22
        implementation: Method
        language: !<!Languages> 
          default:
            name: queryParameter
            description: MISSING-PARAMETER-DESCRIPTION
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '{$host}/reqopt/implicit/optional/header'
          method: put
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: putOptionalHeader
        description: Test implicitly optional header parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_23
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/implicit/optional/body'
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putOptionalBody
        description: Test implicitly optional body parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_24
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: required-global-path
            description: number of items to skip
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '{$host}/reqopt/global/required/path/{required-global-path}'
          method: get
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getRequiredGlobalPath
        description: Test implicitly required path parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_25
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: required-global-query
            description: number of items to skip
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '{$host}/reqopt/global/required/query'
          method: get
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getRequiredGlobalQuery
        description: Test implicitly required query parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_26
        implementation: Method
        language: !<!Languages> 
          default:
            name: optional-global-query
            description: number of items to skip
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '{$host}/reqopt/global/optional/query'
          method: get
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getOptionalGlobalQuery
        description: Test implicitly optional query parameter
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: implicit
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: explicit
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_27
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/requied/integer/parameter'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postRequiredIntegerParameter
        description: Test explicitly required integer. Please put null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_28
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/optional/integer/parameter'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postOptionalIntegerParameter
        description: Test explicitly optional integer. Please put null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/requied/integer/property'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postRequiredIntegerProperty
        description: Test explicitly required integer. Please put a valid int-wrapper with 'value' = null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_30
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/optional/integer/property'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postOptionalIntegerProperty
        description: Test explicitly optional integer. Please put a valid int-wrapper with 'value' = null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_31
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: headerParameter
            description: MISSING-PARAMETER-DESCRIPTION
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '{$host}/reqopt/requied/integer/header'
          method: post
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postRequiredIntegerHeader
        description: Test explicitly required integer. Please put a header 'headerParameter' => null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_32
        implementation: Method
        language: !<!Languages> 
          default:
            name: headerParameter
            description: MISSING-PARAMETER-DESCRIPTION
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '{$host}/reqopt/optional/integer/header'
          method: post
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postOptionalIntegerHeader
        description: Test explicitly optional integer. Please put a header 'headerParameter' => null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_33
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/requied/string/parameter'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postRequiredStringParameter
        description: Test explicitly required string. Please put null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_34
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/optional/string/parameter'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postOptionalStringParameter
        description: Test explicitly optional string. Please put null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_35
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/requied/string/property'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postRequiredStringProperty
        description: Test explicitly required string. Please put a valid string-wrapper with 'value' = null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_36
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/optional/string/property'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postOptionalStringProperty
        description: Test explicitly optional integer. Please put a valid string-wrapper with 'value' = null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_37
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: headerParameter
            description: MISSING-PARAMETER-DESCRIPTION
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '{$host}/reqopt/requied/string/header'
          method: post
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postRequiredStringHeader
        description: Test explicitly required string. Please put a header 'headerParameter' => null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_38
        implementation: Method
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: MISSING-PARAMETER-DESCRIPTION
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '{$host}/reqopt/optional/string/header'
          method: post
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postOptionalStringHeader
        description: Test explicitly optional string. Please put a header 'headerParameter' => null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_4
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/requied/class/parameter'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postRequiredClassParameter
        description: Test explicitly required complex object. Please put null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_4
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/optional/class/parameter'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postOptionalClassParameter
        description: Test explicitly optional complex object. Please put null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_39
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/requied/class/property'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postRequiredClassProperty
        description: Test explicitly required complex object. Please put a valid class-wrapper with 'value' = null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_40
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/optional/class/property'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postOptionalClassProperty
        description: Test explicitly optional complex object. Please put a valid class-wrapper with 'value' = null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_41
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/requied/array/parameter'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postRequiredArrayParameter
        description: Test explicitly required array. Please put null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_42
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/optional/array/parameter'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postOptionalArrayParameter
        description: Test explicitly optional array. Please put null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_43
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/requied/array/property'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postRequiredArrayProperty
        description: Test explicitly required array. Please put a valid array-wrapper with 'value' = null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_44
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '{$host}/reqopt/optional/array/property'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postOptionalArrayProperty
        description: Test explicitly optional array. Please put a valid array-wrapper with 'value' = null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_45
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: headerParameter
            description: MISSING-PARAMETER-DESCRIPTION
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '{$host}/reqopt/requied/array/header'
          method: post
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postRequiredArrayHeader
        description: Test explicitly required array. Please put a header 'headerParameter' => null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_20
      - !<!Parameter> 
        schema: *ref_46
        implementation: Method
        language: !<!Languages> 
          default:
            name: headerParameter
            description: MISSING-PARAMETER-DESCRIPTION
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '{$host}/reqopt/optional/array/header'
          method: post
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postOptionalArrayHeader
        description: Test explicitly optional integer. Please put a header 'headerParameter' => null.
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: explicit
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
