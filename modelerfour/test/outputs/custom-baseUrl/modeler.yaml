!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_3
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!NumberSchema> &ref_1
        type: integer
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForstatus
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_0
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Error-message
            description: MISSING·SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: MISSING·SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Error
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api100
    protocol: !<!Protocols> {}
  numbers:
  - *ref_1
  strings:
  - !<!StringSchema> &ref_2
    type: string
    language: !<!Languages> 
      default:
        name: string
        description: simple string
    protocol: !<!Protocols> {}
  - *ref_0
  - !<!StringSchema> 
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    defaultValue: host
    language: !<!Languages> 
      default:
        name: components·parameters·host·schema
        description: MISSING·SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
globalParameters:
- !<!Parameter> &ref_4
  schema: *ref_2
  implementation: Client
  required: true
  language: !<!Languages> 
    default:
      name: accountName
      description: Account Name
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: uri
- !<!Parameter> &ref_5
  schema: *ref_2
  clientDefaultValue: host
  implementation: Client
  required: true
  language: !<!Languages> 
    default:
      name: host
      description: A string value that is used as a global part of the parameterized host
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: uri
info: !<!Info> 
  description: Test Infrastructure for AutoRest
  title: custom-baseUrl
operationGroups:
- !<!OperationGroup> 
  $key: paths
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    request: !<!Request> 
      parameters:
      - *ref_4
      - *ref_5
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /customuri
          method: get
          url: 'http://{accountName}{host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_3
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getEmpty
        description: Get a 200 to test a valid base uri
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: paths
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
