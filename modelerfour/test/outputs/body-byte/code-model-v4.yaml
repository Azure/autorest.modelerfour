!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_6
    $key: Error
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      $key: status
      schema: !<!NumberSchema> &ref_3
        $key: typeForstatus
        type: integer
        description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForstatus
            description: MISSING-SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: message
      schema: !<!StringSchema> &ref_2
        $key: Error-message
        type: string
        description: MISSING-SCHEMA-DESCRIPTION-STRING
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Error-message
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Error
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api10
    protocol: !<!Protocols> {}
  byteArrays:
  - !<!ByteArraySchema> &ref_8
    $key: paths·byte-nonascii·get·responses·200·content·application-json·schema
    type: byte-array
    format: byte
    description: Non-ascii base-64 encoded byte string hex(FF FE FD FC FB FA F9 F8 F7 F6)
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·byte-nonascii·get·responses·200·content·application-json·schema
        description: Non-ascii base-64 encoded byte string hex(FF FE FD FC FB FA F9 F8 F7 F6)
    protocol: !<!Protocols> {}
  constants:
  - !<!ConstantSchema> &ref_5
    $key: paths·byte-null·get·responses·200·content·application-json·schema
    type: constant
    description: The null byte value
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    valueType: !<!StringSchema> &ref_0
      $key: string
      type: string
      description: The null byte value
      language: !<!Languages> 
        default:
          name: string
          description: The null byte value
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·byte-null·get·responses·200·content·application-json·schema
        description: The null byte value
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_7
    $key: paths·byte-empty·get·responses·200·content·application-json·schema
    type: constant
    description: The empty byte value ''
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    valueType: !<!StringSchema> &ref_1
      $key: string
      type: string
      description: The empty byte value ''
      language: !<!Languages> 
        default:
          name: string
          description: The empty byte value ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: paths·byte-empty·get·responses·200·content·application-json·schema
        description: The empty byte value ''
    protocol: !<!Protocols> {}
  numbers:
  - *ref_3
  strings:
  - *ref_0
  - *ref_2
  - *ref_1
info: !<!Info> 
  description: Test Infrastructure for AutoRest Swagger BAT
  title: body-byte
operationGroups:
- !<!OperationGroup> 
  $key: byte
  operations:
  - !<!Operation> 
    $key: getNull
    description: Get null byte value
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /byte/null
          method: get
          servers:
          - !<!HttpServer> &ref_4
            url: 'http://localhost:3000/'
            language:
              default:
                name: server-name
                description: MISSING-SERVER-DESCRIPTION
    responses:
    - !<!SchemaResponse> 
      schema: *ref_5
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getNull
        description: Get null byte value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getEmpty
    description: Get empty byte value ''
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /byte/empty
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_7
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getEmpty
        description: Get empty byte value ''
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getNonAscii
    description: Get non-ascii byte string hex(FF FE FD FC FB FA F9 F8 F7 F6)
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /byte/nonAscii
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getNonAscii
        description: Get non-ascii byte string hex(FF FE FD FC FB FA F9 F8 F7 F6)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: putNonAscii
    description: Put non-ascii byte string hex(FF FE FD FC FB FA F9 F8 F7 F6)
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: byteBody
        schema: *ref_8
        description: Base64-encoded non-ascii byte string hex(FF FE FD FC FB FA F9 F8 F7 F6)
        implementation: Method
        extensions:
          x-ms-requestBody-name: byteBody
        language: !<!Languages> 
          default:
            name: byteBody
            description: Base64-encoded non-ascii byte string hex(FF FE FD FC FB FA F9 F8 F7 F6)
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /byte/nonAscii
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          servers:
          - *ref_4
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNonAscii
        description: Put non-ascii byte string hex(FF FE FD FC FB FA F9 F8 F7 F6)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: getInvalid
    description: 'Get invalid byte value '':::SWAGGER::::'''
    request: !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /byte/invalid
          method: get
          servers:
          - *ref_4
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_6
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getInvalid
        description: 'Get invalid byte value '':::SWAGGER::::'''
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: byte
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> 
    servers:
    - *ref_4
