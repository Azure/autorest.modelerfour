!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_51
    $key: StorageAccountCheckNameAvailabilityParameters
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      $key: name
      schema: !<!StringSchema> &ref_0
        $key: StorageAccountCheckNameAvailabilityParameters-name
        type: string
        description: MISSING-SCHEMA-DESCRIPTION-STRING
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: StorageAccountCheckNameAvailabilityParameters-name
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      required: true
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: type
      schema: !<!StringSchema> &ref_1
        $key: StorageAccountCheckNameAvailabilityParameters-type
        type: string
        description: MISSING-SCHEMA-DESCRIPTION-STRING
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        defaultValue: Microsoft.Storage/storageAccounts
        language: !<!Languages> 
          default:
            name: StorageAccountCheckNameAvailabilityParameters-type
            description: MISSING-SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      required: false
      serializedName: type
      language: !<!Languages> 
        default:
          name: type
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: StorageAccountCheckNameAvailabilityParameters
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_52
    $key: CheckNameAvailabilityResult
    type: object
    description: The CheckNameAvailability operation response.
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      $key: nameAvailable
      schema: !<!BooleanSchema> &ref_35
        $key: typeFornameAvailable
        type: boolean
        description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.'
        language: !<!Languages> 
          default:
            name: typeFornameAvailable
            description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.'
        protocol: !<!Protocols> {}
      description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.'
      serializedName: nameAvailable
      language: !<!Languages> 
        default:
          name: nameAvailable
          description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.'
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: reason
      schema: !<!ChoiceSchema> &ref_37
        $key: Reason
        choices:
        - !<!ChoiceValue> 
          value: AccountNameInvalid
          language:
            default:
              name: AccountNameInvalid
              description: ''
        - !<!ChoiceValue> 
          value: AlreadyExists
          language:
            default:
              name: AlreadyExists
              description: ''
        type: choice
        description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        choiceType: !<!StringSchema> 
          $key: choice
          type: string
          description: choice
          language: !<!Languages> 
            default:
              name: choice
              description: choice
          protocol: !<!Protocols> {}
        extensions:
          x-ms-enum:
            name: Reason
        language: !<!Languages> 
          default:
            name: Reason
            description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
        protocol: !<!Protocols> {}
      description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
      serializedName: reason
      language: !<!Languages> 
        default:
          name: reason
          description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: message
      schema: !<!StringSchema> &ref_2
        $key: CheckNameAvailabilityResult-message
        type: string
        description: Gets an error message explaining the Reason value in more detail.
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: CheckNameAvailabilityResult-message
            description: Gets an error message explaining the Reason value in more detail.
        protocol: !<!Protocols> {}
      description: Gets an error message explaining the Reason value in more detail.
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: Gets an error message explaining the Reason value in more detail.
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: CheckNameAvailabilityResult
        description: The CheckNameAvailability operation response.
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_8
    $key: Resource
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    children: !<!Relations> 
      all:
      - !<!ObjectSchema> &ref_19
        $key: StorageAccountCreateParameters
        type: object
        description: The parameters to provide for the account.
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        parents: !<!Relations> 
          all:
          - *ref_8
          immediate:
          - *ref_8
        properties:
        - !<!Property> 
          $key: properties
          schema: !<!ObjectSchema> &ref_22
            $key: StorageAccountPropertiesCreateParameters
            type: object
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
            apiVersions:
            - !<!ApiVersion> 
              version: 2015-05-01-preview
            properties:
            - !<!Property> 
              $key: accountType
              schema: !<!ChoiceSchema> &ref_9
                $key: AccountType
                choices:
                - !<!ChoiceValue> 
                  value: Standard_LRS
                  language:
                    default:
                      name: Standard_LRS
                      description: ''
                - !<!ChoiceValue> 
                  value: Standard_ZRS
                  language:
                    default:
                      name: Standard_ZRS
                      description: ''
                - !<!ChoiceValue> 
                  value: Standard_GRS
                  language:
                    default:
                      name: Standard_GRS
                      description: ''
                - !<!ChoiceValue> 
                  value: Standard_RAGRS
                  language:
                    default:
                      name: Standard_RAGRS
                      description: ''
                - !<!ChoiceValue> 
                  value: Premium_LRS
                  language:
                    default:
                      name: Premium_LRS
                      description: ''
                type: choice
                description: Gets the type of the storage account.
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                choiceType: !<!StringSchema> 
                  $key: choice
                  type: string
                  description: choice
                  language: !<!Languages> 
                    default:
                      name: choice
                      description: choice
                  protocol: !<!Protocols> {}
                extensions:
                  x-ms-enum:
                    name: AccountType
                language: !<!Languages> 
                  default:
                    name: AccountType
                    description: Gets the type of the storage account.
                protocol: !<!Protocols> {}
              description: Gets the type of the storage account.
              serializedName: accountType
              language: !<!Languages> 
                default:
                  name: accountType
                  description: Gets the type of the storage account.
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: StorageAccountPropertiesCreateParameters
                description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
                namespace: Api20150501Preview
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: properties
          language: !<!Languages> 
            default:
              name: properties
              description: PROPERTY-DESCRIPTION-MISSING
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: StorageAccountCreateParameters
            description: The parameters to provide for the account.
            namespace: Api20150501Preview
        protocol: !<!Protocols> {}
      - !<!ObjectSchema> &ref_20
        $key: StorageAccount
        type: object
        description: The storage account.
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        parents: !<!Relations> 
          all:
          - *ref_8
          immediate:
          - *ref_8
        properties:
        - !<!Property> 
          $key: properties
          schema: !<!ObjectSchema> &ref_23
            $key: StorageAccountProperties
            type: object
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
            apiVersions:
            - !<!ApiVersion> 
              version: 2015-05-01-preview
            properties:
            - !<!Property> 
              $key: provisioningState
              schema: !<!ChoiceSchema> &ref_38
                $key: ProvisioningState
                choices:
                - !<!ChoiceValue> 
                  value: Creating
                  language:
                    default:
                      name: Creating
                      description: ''
                - !<!ChoiceValue> 
                  value: ResolvingDNS
                  language:
                    default:
                      name: ResolvingDNS
                      description: ''
                - !<!ChoiceValue> 
                  value: Succeeded
                  language:
                    default:
                      name: Succeeded
                      description: ''
                type: choice
                description: Gets the status of the storage account at the time the operation was called.
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                choiceType: !<!StringSchema> 
                  $key: choice
                  type: string
                  description: choice
                  language: !<!Languages> 
                    default:
                      name: choice
                      description: choice
                  protocol: !<!Protocols> {}
                extensions:
                  x-ms-enum:
                    name: ProvisioningState
                language: !<!Languages> 
                  default:
                    name: ProvisioningState
                    description: Gets the status of the storage account at the time the operation was called.
                protocol: !<!Protocols> {}
              description: Gets the status of the storage account at the time the operation was called.
              serializedName: provisioningState
              language: !<!Languages> 
                default:
                  name: provisioningState
                  description: Gets the status of the storage account at the time the operation was called.
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: accountType
              schema: *ref_9
              description: Gets the type of the storage account.
              serializedName: accountType
              language: !<!Languages> 
                default:
                  name: accountType
                  description: Gets the type of the storage account.
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: primaryEndpoints
              schema: !<!ObjectSchema> &ref_13
                $key: Endpoints
                type: object
                description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                properties:
                - !<!Property> 
                  $key: blob
                  schema: !<!StringSchema> &ref_10
                    $key: Endpoints-blob
                    type: string
                    description: Gets the blob endpoint.
                    apiVersions:
                    - !<!ApiVersion> 
                      version: 2015-05-01-preview
                    language: !<!Languages> 
                      default:
                        name: Endpoints-blob
                        description: Gets the blob endpoint.
                    protocol: !<!Protocols> {}
                  description: Gets the blob endpoint.
                  serializedName: blob
                  language: !<!Languages> 
                    default:
                      name: blob
                      description: Gets the blob endpoint.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  $key: queue
                  schema: !<!StringSchema> &ref_11
                    $key: Endpoints-queue
                    type: string
                    description: Gets the queue endpoint.
                    apiVersions:
                    - !<!ApiVersion> 
                      version: 2015-05-01-preview
                    language: !<!Languages> 
                      default:
                        name: Endpoints-queue
                        description: Gets the queue endpoint.
                    protocol: !<!Protocols> {}
                  description: Gets the queue endpoint.
                  serializedName: queue
                  language: !<!Languages> 
                    default:
                      name: queue
                      description: Gets the queue endpoint.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  $key: table
                  schema: !<!StringSchema> &ref_12
                    $key: Endpoints-table
                    type: string
                    description: Gets the table endpoint.
                    apiVersions:
                    - !<!ApiVersion> 
                      version: 2015-05-01-preview
                    language: !<!Languages> 
                      default:
                        name: Endpoints-table
                        description: Gets the table endpoint.
                    protocol: !<!Protocols> {}
                  description: Gets the table endpoint.
                  serializedName: table
                  language: !<!Languages> 
                    default:
                      name: table
                      description: Gets the table endpoint.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  $key: dummyEndPoint
                  schema: *ref_13
                  description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                  serializedName: dummyEndPoint
                  language: !<!Languages> 
                    default:
                      name: dummyEndPoint
                      description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  $key: FooPoint
                  schema: !<!ObjectSchema> &ref_24
                    $key: Foo
                    type: object
                    description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                    apiVersions:
                    - !<!ApiVersion> 
                      version: 2015-05-01-preview
                    properties:
                    - !<!Property> 
                      $key: Bar.Point
                      schema: !<!ObjectSchema> &ref_25
                        $key: Bar
                        type: object
                        description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                        apiVersions:
                        - !<!ApiVersion> 
                          version: 2015-05-01-preview
                        properties:
                        - !<!Property> 
                          $key: RecursivePoint
                          schema: *ref_13
                          description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                          serializedName: RecursivePoint
                          language: !<!Languages> 
                            default:
                              name: RecursivePoint
                              description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                          protocol: !<!Protocols> {}
                        language: !<!Languages> 
                          default:
                            name: Bar
                            description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                            namespace: Api20150501Preview
                        protocol: !<!Protocols> {}
                      description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                      serializedName: Bar.Point
                      language: !<!Languages> 
                        default:
                          name: Bar.Point
                          description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                      protocol: !<!Protocols> {}
                    language: !<!Languages> 
                      default:
                        name: Foo
                        description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                        namespace: Api20150501Preview
                    protocol: !<!Protocols> {}
                  description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                  serializedName: FooPoint
                  language: !<!Languages> 
                    default:
                      name: FooPoint
                      description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                  protocol: !<!Protocols> {}
                language: !<!Languages> 
                  default:
                    name: Endpoints
                    description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                    namespace: Api20150501Preview
                protocol: !<!Protocols> {}
              description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
              serializedName: primaryEndpoints
              language: !<!Languages> 
                default:
                  name: primaryEndpoints
                  description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: primaryLocation
              schema: !<!StringSchema> &ref_14
                $key: StorageAccountProperties-primaryLocation
                type: string
                description: Gets the location of the primary for the storage account.
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                language: !<!Languages> 
                  default:
                    name: StorageAccountProperties-primaryLocation
                    description: Gets the location of the primary for the storage account.
                protocol: !<!Protocols> {}
              description: Gets the location of the primary for the storage account.
              serializedName: primaryLocation
              language: !<!Languages> 
                default:
                  name: primaryLocation
                  description: Gets the location of the primary for the storage account.
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: statusOfPrimary
              schema: !<!ChoiceSchema> &ref_16
                $key: AccountStatus
                choices:
                - !<!ChoiceValue> 
                  value: Available
                  language:
                    default:
                      name: Available
                      description: ''
                - !<!ChoiceValue> 
                  value: Unavailable
                  language:
                    default:
                      name: Unavailable
                      description: ''
                type: choice
                description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                choiceType: !<!StringSchema> 
                  $key: choice
                  type: string
                  description: choice
                  language: !<!Languages> 
                    default:
                      name: choice
                      description: choice
                  protocol: !<!Protocols> {}
                extensions:
                  x-ms-enum:
                    name: AccountStatus
                language: !<!Languages> 
                  default:
                    name: AccountStatus
                    description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
                protocol: !<!Protocols> {}
              description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
              serializedName: statusOfPrimary
              language: !<!Languages> 
                default:
                  name: statusOfPrimary
                  description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: lastGeoFailoverTime
              schema: !<!DateTimeSchema> &ref_42
                $key: StorageAccountProperties-lastGeoFailoverTime
                type: date-time
                format: date-time
                description: >-
                  Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available
                  if the accountType is StandardGRS or StandardRAGRS.
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                language: !<!Languages> 
                  default:
                    name: StorageAccountProperties-lastGeoFailoverTime
                    description: >-
                      Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only
                      available if the accountType is StandardGRS or StandardRAGRS.
                protocol: !<!Protocols> {}
              description: >-
                Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if
                the accountType is StandardGRS or StandardRAGRS.
              serializedName: lastGeoFailoverTime
              language: !<!Languages> 
                default:
                  name: lastGeoFailoverTime
                  description: >-
                    Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available
                    if the accountType is StandardGRS or StandardRAGRS.
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: secondaryLocation
              schema: !<!StringSchema> &ref_15
                $key: StorageAccountProperties-secondaryLocation
                type: string
                description: Gets the location of the geo replicated secondary for the storage account. Only available if the accountType is StandardGRS or StandardRAGRS.
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                language: !<!Languages> 
                  default:
                    name: StorageAccountProperties-secondaryLocation
                    description: Gets the location of the geo replicated secondary for the storage account. Only available if the accountType is StandardGRS or StandardRAGRS.
                protocol: !<!Protocols> {}
              description: Gets the location of the geo replicated secondary for the storage account. Only available if the accountType is StandardGRS or StandardRAGRS.
              serializedName: secondaryLocation
              language: !<!Languages> 
                default:
                  name: secondaryLocation
                  description: Gets the location of the geo replicated secondary for the storage account. Only available if the accountType is StandardGRS or StandardRAGRS.
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: statusOfSecondary
              schema: *ref_16
              description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
              serializedName: statusOfSecondary
              language: !<!Languages> 
                default:
                  name: statusOfSecondary
                  description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: creationTime
              schema: !<!DateTimeSchema> &ref_43
                $key: StorageAccountProperties-creationTime
                type: date-time
                format: date-time
                description: Gets the creation date and time of the storage account in UTC.
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                language: !<!Languages> 
                  default:
                    name: StorageAccountProperties-creationTime
                    description: Gets the creation date and time of the storage account in UTC.
                protocol: !<!Protocols> {}
              description: Gets the creation date and time of the storage account in UTC.
              serializedName: creationTime
              language: !<!Languages> 
                default:
                  name: creationTime
                  description: Gets the creation date and time of the storage account in UTC.
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: customDomain
              schema: !<!ObjectSchema> &ref_18
                $key: CustomDomain
                type: object
                description: The custom domain assigned to this storage account. This can be set via Update.
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                properties:
                - !<!Property> 
                  $key: name
                  schema: !<!StringSchema> &ref_17
                    $key: CustomDomain-name
                    type: string
                    description: Gets or sets the custom domain name. Name is the CNAME source.
                    apiVersions:
                    - !<!ApiVersion> 
                      version: 2015-05-01-preview
                    language: !<!Languages> 
                      default:
                        name: CustomDomain-name
                        description: Gets or sets the custom domain name. Name is the CNAME source.
                    protocol: !<!Protocols> {}
                  description: Gets or sets the custom domain name. Name is the CNAME source.
                  serializedName: name
                  language: !<!Languages> 
                    default:
                      name: name
                      description: Gets or sets the custom domain name. Name is the CNAME source.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  $key: useSubDomain
                  schema: !<!BooleanSchema> &ref_36
                    $key: typeForuseSubDomain
                    type: boolean
                    description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates
                    language: !<!Languages> 
                      default:
                        name: typeForuseSubDomain
                        description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates
                    protocol: !<!Protocols> {}
                  description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates
                  serializedName: useSubDomain
                  language: !<!Languages> 
                    default:
                      name: useSubDomain
                      description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates
                  protocol: !<!Protocols> {}
                language: !<!Languages> 
                  default:
                    name: CustomDomain
                    description: The custom domain assigned to this storage account. This can be set via Update.
                    namespace: Api20150501Preview
                protocol: !<!Protocols> {}
              description: The custom domain assigned to this storage account. This can be set via Update.
              serializedName: customDomain
              language: !<!Languages> 
                default:
                  name: customDomain
                  description: The custom domain assigned to this storage account. This can be set via Update.
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: secondaryEndpoints
              schema: *ref_13
              description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
              serializedName: secondaryEndpoints
              language: !<!Languages> 
                default:
                  name: secondaryEndpoints
                  description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: StorageAccountProperties
                description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
                namespace: Api20150501Preview
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: properties
          language: !<!Languages> 
            default:
              name: properties
              description: PROPERTY-DESCRIPTION-MISSING
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: StorageAccount
            description: The storage account.
            namespace: Api20150501Preview
        protocol: !<!Protocols> {}
      - !<!ObjectSchema> &ref_21
        $key: StorageAccountUpdateParameters
        type: object
        description: The parameters to update on the account.
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        parents: !<!Relations> 
          all:
          - *ref_8
          immediate:
          - *ref_8
        properties:
        - !<!Property> 
          $key: properties
          schema: !<!ObjectSchema> &ref_26
            $key: StorageAccountPropertiesUpdateParameters
            type: object
            description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
            apiVersions:
            - !<!ApiVersion> 
              version: 2015-05-01-preview
            properties:
            - !<!Property> 
              $key: accountType
              schema: *ref_9
              description: Gets the type of the storage account.
              serializedName: accountType
              language: !<!Languages> 
                default:
                  name: accountType
                  description: Gets the type of the storage account.
              protocol: !<!Protocols> {}
            - !<!Property> 
              $key: customDomain
              schema: *ref_18
              description: The custom domain assigned to this storage account. This can be set via Update.
              serializedName: customDomain
              language: !<!Languages> 
                default:
                  name: customDomain
                  description: The custom domain assigned to this storage account. This can be set via Update.
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: StorageAccountPropertiesUpdateParameters
                description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
                namespace: Api20150501Preview
            protocol: !<!Protocols> {}
          description: PROPERTY-DESCRIPTION-MISSING
          serializedName: properties
          language: !<!Languages> 
            default:
              name: properties
              description: PROPERTY-DESCRIPTION-MISSING
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: StorageAccountUpdateParameters
            description: The parameters to update on the account.
            namespace: Api20150501Preview
        protocol: !<!Protocols> {}
      immediate:
      - *ref_19
      - *ref_20
      - *ref_21
    properties:
    - !<!Property> 
      $key: id
      schema: !<!StringSchema> &ref_3
        $key: Resource-id
        type: string
        description: Resource Id
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: Resource-id
            description: Resource Id
        protocol: !<!Protocols> {}
      description: Resource Id
      readOnly: true
      required: false
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: Resource Id
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: name
      schema: !<!StringSchema> &ref_4
        $key: Resource-name
        type: string
        description: Resource name
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: Resource-name
            description: Resource name
        protocol: !<!Protocols> {}
      description: Resource name
      readOnly: true
      required: false
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: Resource name
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: type
      schema: !<!StringSchema> &ref_5
        $key: Resource-type
        type: string
        description: Resource type
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: Resource-type
            description: Resource type
        protocol: !<!Protocols> {}
      description: Resource type
      readOnly: true
      required: false
      serializedName: type
      language: !<!Languages> 
        default:
          name: type
          description: Resource type
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: location
      schema: !<!StringSchema> &ref_6
        $key: Resource-location
        type: string
        description: Resource location
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: Resource-location
            description: Resource location
        protocol: !<!Protocols> {}
      description: Resource location
      required: true
      serializedName: location
      language: !<!Languages> 
        default:
          name: location
          description: Resource location
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: tags
      schema: !<!DictionarySchema> &ref_41
        $key: Resource-tags
        type: dictionary
        description: Resource tags
        elementType: !<!StringSchema> &ref_7
          $key: components·schemas·resource·properties·tags·additionalproperties
          type: string
          description: MISSING-SCHEMA-DESCRIPTION-STRING
          apiVersions:
          - !<!ApiVersion> 
            version: 2015-05-01-preview
          language: !<!Languages> 
            default:
              name: components·schemas·resource·properties·tags·additionalproperties
              description: MISSING-SCHEMA-DESCRIPTION-STRING
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: Resource-tags
            description: Resource tags
        protocol: !<!Protocols> {}
      description: Resource tags
      required: false
      serializedName: tags
      language: !<!Languages> 
        default:
          name: tags
          description: Resource tags
      protocol: !<!Protocols> {}
    extensions:
      x-ms-azure-resource: true
    language: !<!Languages> 
      default:
        name: Resource
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> 
    $key: Resource-tags
    type: object
    description: Resource tags
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    language: !<!Languages> 
      default:
        name: Resource-tags
        description: Resource tags
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - *ref_19
  - *ref_22
  - *ref_20
  - *ref_23
  - *ref_13
  - *ref_24
  - *ref_25
  - *ref_18
  - *ref_21
  - *ref_26
  - !<!ObjectSchema> &ref_59
    $key: StorageAccountKeys
    type: object
    description: The access keys for the storage account.
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      $key: key1
      schema: !<!StringSchema> &ref_27
        $key: StorageAccountKeys-key1
        type: string
        description: Gets the value of key 1.
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: StorageAccountKeys-key1
            description: Gets the value of key 1.
        protocol: !<!Protocols> {}
      description: Gets the value of key 1.
      serializedName: key1
      language: !<!Languages> 
        default:
          name: key1
          description: Gets the value of key 1.
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: key2
      schema: !<!StringSchema> &ref_28
        $key: StorageAccountKeys-key2
        type: string
        description: Gets the value of key 2.
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: StorageAccountKeys-key2
            description: Gets the value of key 2.
        protocol: !<!Protocols> {}
      description: Gets the value of key 2.
      serializedName: key2
      language: !<!Languages> 
        default:
          name: key2
          description: Gets the value of key 2.
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: StorageAccountKeys
        description: The access keys for the storage account.
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_60
    $key: StorageAccountListResult
    type: object
    description: The list storage accounts operation response.
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      $key: value
      schema: !<!ArraySchema> &ref_44
        $key: StorageAccountListResult-value
        type: array
        description: Gets the list of storage accounts and their properties.
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        elementType: *ref_20
        language: !<!Languages> 
          default:
            name: StorageAccountListResult-value
            description: Gets the list of storage accounts and their properties.
        protocol: !<!Protocols> {}
      description: Gets the list of storage accounts and their properties.
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: Gets the list of storage accounts and their properties.
      protocol: !<!Protocols> {}
    - !<!Property> 
      $key: nextLink
      schema: !<!StringSchema> &ref_29
        $key: StorageAccountListResult-nextLink
        type: string
        description: Gets the link to the next set of results. Currently this will always be empty as the API does not support pagination.
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: StorageAccountListResult-nextLink
            description: Gets the link to the next set of results. Currently this will always be empty as the API does not support pagination.
        protocol: !<!Protocols> {}
      description: Gets the link to the next set of results. Currently this will always be empty as the API does not support pagination.
      serializedName: nextLink
      language: !<!Languages> 
        default:
          name: nextLink
          description: Gets the link to the next set of results. Currently this will always be empty as the API does not support pagination.
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: StorageAccountListResult
        description: The list storage accounts operation response.
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_62
    $key: StorageAccountRegenerateKeyParameters
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      $key: keyName
      schema: !<!ChoiceSchema> &ref_39
        $key: KeyName
        choices:
        - !<!ChoiceValue> 
          value: key1
          language:
            default:
              name: key1
              description: ''
        - !<!ChoiceValue> 
          value: key2
          language:
            default:
              name: key2
              description: ''
        type: choice
        description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        choiceType: !<!StringSchema> 
          $key: choice
          type: string
          description: choice
          language: !<!Languages> 
            default:
              name: choice
              description: choice
          protocol: !<!Protocols> {}
        extensions:
          x-ms-enum:
            name: KeyName
        language: !<!Languages> 
          default:
            name: KeyName
            description: MISSING-SCHEMA-DESCRIPTION-CHOICE
        protocol: !<!Protocols> {}
      description: PROPERTY-DESCRIPTION-MISSING
      serializedName: keyName
      language: !<!Languages> 
        default:
          name: keyName
          description: PROPERTY-DESCRIPTION-MISSING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: StorageAccountRegenerateKeyParameters
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_63
    $key: UsageListResult
    type: object
    description: The List Usages operation response.
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      $key: value
      schema: !<!ArraySchema> &ref_45
        $key: UsageListResult-value
        type: array
        description: Gets or sets the list Storage Resource Usages.
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        elementType: !<!ObjectSchema> &ref_32
          $key: Usage
          type: object
          description: Describes Storage Resource Usage.
          apiVersions:
          - !<!ApiVersion> 
            version: 2015-05-01-preview
          properties:
          - !<!Property> 
            $key: unit
            schema: !<!ChoiceSchema> &ref_40
              $key: UsageUnit
              choices:
              - !<!ChoiceValue> 
                value: Count
                language:
                  default:
                    name: Count
                    description: ''
              - !<!ChoiceValue> 
                value: Bytes
                language:
                  default:
                    name: Bytes
                    description: ''
              - !<!ChoiceValue> 
                value: Seconds
                language:
                  default:
                    name: Seconds
                    description: ''
              - !<!ChoiceValue> 
                value: Percent
                language:
                  default:
                    name: Percent
                    description: ''
              - !<!ChoiceValue> 
                value: CountsPerSecond
                language:
                  default:
                    name: CountsPerSecond
                    description: ''
              - !<!ChoiceValue> 
                value: BytesPerSecond
                language:
                  default:
                    name: BytesPerSecond
                    description: ''
              type: choice
              description: Gets the unit of measurement.
              apiVersions:
              - !<!ApiVersion> 
                version: 2015-05-01-preview
              choiceType: !<!StringSchema> 
                $key: choice
                type: string
                description: choice
                language: !<!Languages> 
                  default:
                    name: choice
                    description: choice
                protocol: !<!Protocols> {}
              extensions:
                x-ms-enum:
                  name: UsageUnit
              language: !<!Languages> 
                default:
                  name: UsageUnit
                  description: Gets the unit of measurement.
              protocol: !<!Protocols> {}
            description: Gets the unit of measurement.
            serializedName: unit
            language: !<!Languages> 
              default:
                name: unit
                description: Gets the unit of measurement.
            protocol: !<!Protocols> {}
          - !<!Property> 
            $key: currentValue
            schema: !<!NumberSchema> &ref_46
              $key: typeForcurrentValue
              type: integer
              description: Gets the current count of the allocated resources in the subscription.
              precision: 32
              language: !<!Languages> 
                default:
                  name: typeForcurrentValue
                  description: Gets the current count of the allocated resources in the subscription.
              protocol: !<!Protocols> {}
            description: Gets the current count of the allocated resources in the subscription.
            serializedName: currentValue
            language: !<!Languages> 
              default:
                name: currentValue
                description: Gets the current count of the allocated resources in the subscription.
            protocol: !<!Protocols> {}
          - !<!Property> 
            $key: limit
            schema: !<!NumberSchema> &ref_47
              $key: typeForlimit
              type: integer
              description: Gets the maximum count of the resources that can be allocated in the subscription.
              precision: 32
              language: !<!Languages> 
                default:
                  name: typeForlimit
                  description: Gets the maximum count of the resources that can be allocated in the subscription.
              protocol: !<!Protocols> {}
            description: Gets the maximum count of the resources that can be allocated in the subscription.
            serializedName: limit
            language: !<!Languages> 
              default:
                name: limit
                description: Gets the maximum count of the resources that can be allocated in the subscription.
            protocol: !<!Protocols> {}
          - !<!Property> 
            $key: name
            schema: !<!ObjectSchema> &ref_33
              $key: UsageName
              type: object
              description: The Usage Names.
              apiVersions:
              - !<!ApiVersion> 
                version: 2015-05-01-preview
              properties:
              - !<!Property> 
                $key: value
                schema: !<!StringSchema> &ref_30
                  $key: UsageName-value
                  type: string
                  description: Gets a string describing the resource name.
                  apiVersions:
                  - !<!ApiVersion> 
                    version: 2015-05-01-preview
                  language: !<!Languages> 
                    default:
                      name: UsageName-value
                      description: Gets a string describing the resource name.
                  protocol: !<!Protocols> {}
                description: Gets a string describing the resource name.
                serializedName: value
                language: !<!Languages> 
                  default:
                    name: value
                    description: Gets a string describing the resource name.
                protocol: !<!Protocols> {}
              - !<!Property> 
                $key: localizedValue
                schema: !<!StringSchema> &ref_31
                  $key: UsageName-localizedValue
                  type: string
                  description: Gets a localized string describing the resource name.
                  apiVersions:
                  - !<!ApiVersion> 
                    version: 2015-05-01-preview
                  language: !<!Languages> 
                    default:
                      name: UsageName-localizedValue
                      description: Gets a localized string describing the resource name.
                  protocol: !<!Protocols> {}
                description: Gets a localized string describing the resource name.
                serializedName: localizedValue
                language: !<!Languages> 
                  default:
                    name: localizedValue
                    description: Gets a localized string describing the resource name.
                protocol: !<!Protocols> {}
              language: !<!Languages> 
                default:
                  name: UsageName
                  description: The Usage Names.
                  namespace: Api20150501Preview
              protocol: !<!Protocols> {}
            description: The Usage Names.
            serializedName: name
            language: !<!Languages> 
              default:
                name: name
                description: The Usage Names.
            protocol: !<!Protocols> {}
          language: !<!Languages> 
            default:
              name: Usage
              description: Describes Storage Resource Usage.
              namespace: Api20150501Preview
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: UsageListResult-value
            description: Gets or sets the list Storage Resource Usages.
        protocol: !<!Protocols> {}
      description: Gets or sets the list Storage Resource Usages.
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: Gets or sets the list Storage Resource Usages.
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: UsageListResult
        description: The List Usages operation response.
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - *ref_32
  - *ref_33
  - !<!ObjectSchema> 
    $key: SubResource
    type: object
    description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      $key: id
      schema: !<!StringSchema> &ref_34
        $key: SubResource-id
        type: string
        description: Resource Id
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: SubResource-id
            description: Resource Id
        protocol: !<!Protocols> {}
      description: Resource Id
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: Resource Id
      protocol: !<!Protocols> {}
    extensions:
      x-ms-azure-resource: true
    language: !<!Languages> 
      default:
        name: SubResource
        description: MISSING-SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  dictionaries:
  - *ref_41
  choices:
  - *ref_37
  - *ref_9
  - *ref_38
  - *ref_16
  - *ref_39
  - *ref_40
  arrays:
  - *ref_44
  - *ref_45
  booleans:
  - *ref_35
  - *ref_36
  dateTimes:
  - *ref_42
  - *ref_43
  numbers:
  - *ref_46
  - *ref_47
  strings:
  - !<!StringSchema> &ref_49
    $key: components·parameters·apiversionparameter·schema
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    language: !<!Languages> 
      default:
        name: components·parameters·apiversionparameter·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_50
    $key: components·parameters·subscriptionidparameter·schema
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    language: !<!Languages> 
      default:
        name: components·parameters·subscriptionidparameter·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - *ref_0
  - *ref_1
  - *ref_2
  - !<!StringSchema> &ref_53
    $key: components·parameters·resourcegroupname·schema
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    language: !<!Languages> 
      default:
        name: components·parameters·resourcegroupname·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_54
    $key: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·parameters·1·schema
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    language: !<!Languages> 
      default:
        name: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·parameters·1·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - *ref_3
  - *ref_4
  - *ref_5
  - *ref_6
  - *ref_7
  - *ref_10
  - *ref_11
  - *ref_12
  - *ref_14
  - *ref_15
  - *ref_17
  - !<!StringSchema> &ref_55
    $key: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·delete·parameters·1·schema
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    language: !<!Languages> 
      default:
        name: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·delete·parameters·1·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_56
    $key: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·get·parameters·1·schema
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    language: !<!Languages> 
      default:
        name: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·get·parameters·1·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_57
    $key: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·patch·parameters·1·schema
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    language: !<!Languages> 
      default:
        name: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·patch·parameters·1·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_58
    $key: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listkeys·post·parameters·1·schema
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    language: !<!Languages> 
      default:
        name: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listkeys·post·parameters·1·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - *ref_27
  - *ref_28
  - *ref_29
  - !<!StringSchema> &ref_61
    $key: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-regeneratekey·post·parameters·1·schema
    type: string
    description: MISSING-SCHEMA-DESCRIPTION-STRING
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    language: !<!Languages> 
      default:
        name: paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-regeneratekey·post·parameters·1·schema
        description: MISSING-SCHEMA-DESCRIPTION-STRING
    protocol: !<!Protocols> {}
  - *ref_30
  - *ref_31
  - *ref_34
info: !<!Info> 
  title: storage
operationGroups:
- !<!OperationGroup> 
  $key: StorageAccounts
  operations:
  - !<!Operation> 
    $key: CheckNameAvailability
    description: Checks that account name is valid and is not in use.
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: api-version
        schema: *ref_49
        description: Client Api Version.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: api-version
            description: Client Api Version.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: subscriptionId
        schema: *ref_50
        description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: accountName
        schema: *ref_51
        description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        implementation: Client
        extensions:
          x-ms-requestBody-name: accountName
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          servers:
          - !<!HttpServer> &ref_48
            url: 'https://management.azure.com/'
            language:
              default:
                name: server-name
                description: MISSING-SERVER-DESCRIPTION
    responses:
    - !<!SchemaResponse> 
      schema: *ref_52
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: CheckNameAvailability
        description: Checks that account name is valid and is not in use.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: Create
    description: >-
      Asynchronously creates a new storage account with the specified parameters. Existing accounts cannot be updated with this API and should instead use the Update Storage Account API. If an account is already created and subsequent PUT
      request is issued with exact same set of properties, then HTTP 200 would be returned. 
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: resourceGroupName
        schema: *ref_53
        description: The name of the resource group within the user’s subscription.
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: accountName
        schema: *ref_54
        description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: api-version
        schema: *ref_49
        description: Client Api Version.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: api-version
            description: Client Api Version.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: subscriptionId
        schema: *ref_50
        description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: parameters
        schema: *ref_19
        description: The parameters to provide for the created account.
        implementation: Client
        extensions:
          x-ms-requestBody-name: parameters
        language: !<!Languages> 
          default:
            name: parameters
            description: The parameters to provide for the created account.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          servers:
          - *ref_48
    responses:
    - !<!SchemaResponse> 
      schema: *ref_20
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 2
    language: !<!Languages> 
      default:
        name: Create
        description: >-
          Asynchronously creates a new storage account with the specified parameters. Existing accounts cannot be updated with this API and should instead use the Update Storage Account API. If an account is already created and subsequent
          PUT request is issued with exact same set of properties, then HTTP 200 would be returned. 
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: Delete
    description: Deletes a storage account in Microsoft Azure.
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: resourceGroupName
        schema: *ref_53
        description: The name of the resource group within the user’s subscription.
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: accountName
        schema: *ref_55
        description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: api-version
        schema: *ref_49
        description: Client Api Version.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: api-version
            description: Client Api Version.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: subscriptionId
        schema: *ref_50
        description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
          method: delete
          servers:
          - *ref_48
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    language: !<!Languages> 
      default:
        name: Delete
        description: Deletes a storage account in Microsoft Azure.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: GetProperties
    description: 'Returns the properties for the specified storage account including but not limited to name, account type, location, and account status. The ListKeys operation should be used to retrieve storage keys.'
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: resourceGroupName
        schema: *ref_53
        description: The name of the resource group within the user’s subscription.
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: accountName
        schema: *ref_56
        description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: api-version
        schema: *ref_49
        description: Client Api Version.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: api-version
            description: Client Api Version.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: subscriptionId
        schema: *ref_50
        description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
          method: get
          servers:
          - *ref_48
    responses:
    - !<!SchemaResponse> 
      schema: *ref_20
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: GetProperties
        description: 'Returns the properties for the specified storage account including but not limited to name, account type, location, and account status. The ListKeys operation should be used to retrieve storage keys.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: Update
    description: >-
      Updates the account type or tags for a storage account. It can also be used to add a custom domain (note that custom domains cannot be added via the Create operation). Only one custom domain is supported per storage account. This API
      can only be used to update one of tags, accountType, or customDomain per call. To update multiple of these properties, call the API multiple times with one change per call. This call does not change the storage keys for the account.
      If you want to change storage account keys, use the RegenerateKey operation. The location and name of the storage account cannot be changed after creation.
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: resourceGroupName
        schema: *ref_53
        description: The name of the resource group within the user’s subscription.
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: accountName
        schema: *ref_57
        description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: api-version
        schema: *ref_49
        description: Client Api Version.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: api-version
            description: Client Api Version.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: subscriptionId
        schema: *ref_50
        description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: parameters
        schema: *ref_21
        description: 'The parameters to update on the account. Note that only one property can be changed at a time using this API. '
        implementation: Client
        extensions:
          x-ms-requestBody-name: parameters
        language: !<!Languages> 
          default:
            name: parameters
            description: 'The parameters to update on the account. Note that only one property can be changed at a time using this API. '
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
          method: patch
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          servers:
          - *ref_48
    responses:
    - !<!SchemaResponse> 
      schema: *ref_20
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    extensions:
      x-ms-requestBody-index: 2
    language: !<!Languages> 
      default:
        name: Update
        description: >-
          Updates the account type or tags for a storage account. It can also be used to add a custom domain (note that custom domains cannot be added via the Create operation). Only one custom domain is supported per storage account. This
          API can only be used to update one of tags, accountType, or customDomain per call. To update multiple of these properties, call the API multiple times with one change per call. This call does not change the storage keys for the
          account. If you want to change storage account keys, use the RegenerateKey operation. The location and name of the storage account cannot be changed after creation.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: ListKeys
    description: Lists the access keys for the specified storage account.
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: resourceGroupName
        schema: *ref_53
        description: The name of the resource group within the user’s subscription.
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: accountName
        schema: *ref_58
        description: The name of the storage account.
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: accountName
            description: The name of the storage account.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: api-version
        schema: *ref_49
        description: Client Api Version.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: api-version
            description: Client Api Version.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: subscriptionId
        schema: *ref_50
        description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys'
          method: post
          servers:
          - *ref_48
    responses:
    - !<!SchemaResponse> 
      schema: *ref_59
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: ListKeys
        description: Lists the access keys for the specified storage account.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: List
    description: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: api-version
        schema: *ref_49
        description: Client Api Version.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: api-version
            description: Client Api Version.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: subscriptionId
        schema: *ref_50
        description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts'
          method: get
          servers:
          - *ref_48
    responses:
    - !<!SchemaResponse> 
      schema: *ref_60
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    extensions:
      x-ms-pageable:
        nextLinkName: {}
    language: !<!Languages> 
      default:
        name: List
        description: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: ListByResourceGroup
    description: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: resourceGroupName
        schema: *ref_53
        description: The name of the resource group within the user’s subscription.
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: api-version
        schema: *ref_49
        description: Client Api Version.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: api-version
            description: Client Api Version.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: subscriptionId
        schema: *ref_50
        description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts'
          method: get
          servers:
          - *ref_48
    responses:
    - !<!SchemaResponse> 
      schema: *ref_60
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    extensions:
      x-ms-pageable:
        nextLinkName: {}
    language: !<!Languages> 
      default:
        name: ListByResourceGroup
        description: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    $key: RegenerateKey
    description: Regenerates the access keys for the specified storage account.
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: resourceGroupName
        schema: *ref_53
        description: The name of the resource group within the user’s subscription.
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: accountName
        schema: *ref_61
        description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        implementation: Method
        required: true
        extensions:
          x-ms-parameter-location: method
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: api-version
        schema: *ref_49
        description: Client Api Version.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: api-version
            description: Client Api Version.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: subscriptionId
        schema: *ref_50
        description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        $key: regenerateKey
        schema: *ref_62
        description: Specifies name of the key which should be regenerated.
        implementation: Client
        extensions:
          x-ms-requestBody-name: regenerateKey
        language: !<!Languages> 
          default:
            name: regenerateKey
            description: Specifies name of the key which should be regenerated.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          servers:
          - *ref_48
    responses:
    - !<!SchemaResponse> 
      schema: *ref_59
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    extensions:
      x-ms-requestBody-index: 2
    language: !<!Languages> 
      default:
        name: RegenerateKey
        description: Regenerates the access keys for the specified storage account.
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: ''
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: Usage
  operations:
  - !<!Operation> 
    $key: List
    description: Gets the current usage count and the limit for the resources under the subscription.
    request: !<!Request> 
      parameters:
      - !<!Parameter> 
        $key: api-version
        schema: *ref_49
        description: Client Api Version.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: api-version
            description: Client Api Version.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        $key: subscriptionId
        schema: *ref_50
        description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages'
          method: get
          servers:
          - *ref_48
    responses:
    - !<!SchemaResponse> 
      schema: *ref_63
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: List
        description: Gets the current usage count and the limit for the resources under the subscription.
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: ''
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> 
    servers:
    - *ref_48
