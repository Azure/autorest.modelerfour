!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_49
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      schema: !<!StringSchema> &ref_30
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: StorageAccountCheckNameAvailabilityParameters-name
            description: MISSING·SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      required: true
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: MISSING·SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_31
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        defaultValue: Microsoft.Storage/storageAccounts
        language: !<!Languages> 
          default:
            name: StorageAccountCheckNameAvailabilityParameters-type
            description: MISSING·SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      required: false
      serializedName: type
      language: !<!Languages> 
        default:
          name: type
          description: MISSING·SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: StorageAccountCheckNameAvailabilityParameters
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_50
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      schema: !<!BooleanSchema> &ref_22
        type: boolean
        language: !<!Languages> 
          default:
            name: typeFornameAvailable
            description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.'
        protocol: !<!Protocols> {}
      serializedName: nameAvailable
      language: !<!Languages> 
        default:
          name: nameAvailable
          description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.'
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!SealedChoiceSchema> &ref_26
        choices:
        - !<!ChoiceValue> 
          value: AccountNameInvalid
          language:
            default:
              name: AccountNameInvalid
              description: ''
        - !<!ChoiceValue> 
          value: AlreadyExists
          language:
            default:
              name: AlreadyExists
              description: ''
        type: sealed-choice
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        choiceType: !<!StringSchema> &ref_1
          type: string
          language: !<!Languages> 
            default:
              name: string
              description: simple string
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: Reason
            description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
        protocol: !<!Protocols> {}
      serializedName: reason
      language: !<!Languages> 
        default:
          name: reason
          description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_32
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: CheckNameAvailabilityResult-message
            description: Gets an error message explaining the Reason value in more detail.
        protocol: !<!Protocols> {}
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: Gets an error message explaining the Reason value in more detail.
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: CheckNameAvailabilityResult
        description: The CheckNameAvailability operation response.
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_0
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    children: !<!Relations> 
      all:
      - !<!ObjectSchema> &ref_6
        type: object
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        parents: !<!Relations> 
          all:
          - *ref_0
          immediate:
          - *ref_0
        properties:
        - !<!Property> 
          schema: !<!SealedChoiceSchema> &ref_2
            choices:
            - !<!ChoiceValue> 
              value: Standard_LRS
              language:
                default:
                  name: Standard_LRS
                  description: ''
            - !<!ChoiceValue> 
              value: Standard_ZRS
              language:
                default:
                  name: Standard_ZRS
                  description: ''
            - !<!ChoiceValue> 
              value: Standard_GRS
              language:
                default:
                  name: Standard_GRS
                  description: ''
            - !<!ChoiceValue> 
              value: Standard_RAGRS
              language:
                default:
                  name: Standard_RAGRS
                  description: ''
            - !<!ChoiceValue> 
              value: Premium_LRS
              language:
                default:
                  name: Premium_LRS
                  description: ''
            type: sealed-choice
            apiVersions:
            - !<!ApiVersion> 
              version: 2015-05-01-preview
            choiceType: *ref_1
            language: !<!Languages> 
              default:
                name: AccountType
                description: Gets or sets the account type.
            protocol: !<!Protocols> {}
          flattenedNames: &ref_51
          - properties
          - accountType
          serializedName: accountType
          language: !<!Languages> 
            default:
              name: accountType
              description: Gets or sets the account type.
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: StorageAccountCreateParameters
            description: The parameters to provide for the account.
            namespace: Api20150501Preview
        protocol: !<!Protocols> {}
      - !<!ObjectSchema> &ref_7
        type: object
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        parents: !<!Relations> 
          all:
          - *ref_0
          immediate:
          - *ref_0
        properties:
        - !<!Property> 
          schema: !<!SealedChoiceSchema> &ref_9
            choices:
            - !<!ChoiceValue> 
              value: Creating
              language:
                default:
                  name: Creating
                  description: ''
            - !<!ChoiceValue> 
              value: ResolvingDNS
              language:
                default:
                  name: ResolvingDNS
                  description: ''
            - !<!ChoiceValue> 
              value: Succeeded
              language:
                default:
                  name: Succeeded
                  description: ''
            type: sealed-choice
            apiVersions:
            - !<!ApiVersion> 
              version: 2015-05-01-preview
            choiceType: *ref_1
            language: !<!Languages> 
              default:
                name: ProvisioningState
                description: Gets the status of the storage account at the time the operation was called.
            protocol: !<!Protocols> {}
          flattenedNames:
          - properties
          - provisioningState
          serializedName: provisioningState
          language: !<!Languages> 
            default:
              name: provisioningState
              description: Gets the status of the storage account at the time the operation was called.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_2
          flattenedNames:
          - properties
          - accountType
          serializedName: accountType
          language: !<!Languages> 
            default:
              name: accountType
              description: Gets or sets the account type.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_3
            type: object
            apiVersions:
            - !<!ApiVersion> 
              version: 2015-05-01-preview
            properties:
            - !<!Property> 
              schema: !<!StringSchema> &ref_37
                type: string
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                language: !<!Languages> 
                  default:
                    name: Endpoints-blob
                    description: Gets the blob endpoint.
                protocol: !<!Protocols> {}
              serializedName: blob
              language: !<!Languages> 
                default:
                  name: blob
                  description: Gets the blob endpoint.
              protocol: !<!Protocols> {}
            - !<!Property> 
              schema: !<!StringSchema> &ref_38
                type: string
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                language: !<!Languages> 
                  default:
                    name: Endpoints-queue
                    description: Gets the queue endpoint.
                protocol: !<!Protocols> {}
              serializedName: queue
              language: !<!Languages> 
                default:
                  name: queue
                  description: Gets the queue endpoint.
              protocol: !<!Protocols> {}
            - !<!Property> 
              schema: !<!StringSchema> &ref_39
                type: string
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                language: !<!Languages> 
                  default:
                    name: Endpoints-table
                    description: Gets the table endpoint.
                protocol: !<!Protocols> {}
              serializedName: table
              language: !<!Languages> 
                default:
                  name: table
                  description: Gets the table endpoint.
              protocol: !<!Protocols> {}
            - !<!Property> 
              schema: *ref_3
              serializedName: dummyEndPoint
              language: !<!Languages> 
                default:
                  name: dummyEndPoint
                  description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
              protocol: !<!Protocols> {}
            - !<!Property> 
              schema: !<!ObjectSchema> &ref_14
                type: object
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                properties:
                - !<!Property> 
                  schema: !<!ObjectSchema> &ref_15
                    type: object
                    apiVersions:
                    - !<!ApiVersion> 
                      version: 2015-05-01-preview
                    properties:
                    - !<!Property> 
                      schema: *ref_3
                      serializedName: RecursivePoint
                      language: !<!Languages> 
                        default:
                          name: RecursivePoint
                          description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                      protocol: !<!Protocols> {}
                    language: !<!Languages> 
                      default:
                        name: Bar
                        description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                        namespace: Api20150501Preview
                    protocol: !<!Protocols> {}
                  serializedName: Bar.Point
                  language: !<!Languages> 
                    default:
                      name: Bar.Point
                      description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                  protocol: !<!Protocols> {}
                language: !<!Languages> 
                  default:
                    name: Foo
                    description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                    namespace: Api20150501Preview
                protocol: !<!Protocols> {}
              serializedName: FooPoint
              language: !<!Languages> 
                default:
                  name: FooPoint
                  description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: Endpoints
                description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
                namespace: Api20150501Preview
            protocol: !<!Protocols> {}
          flattenedNames:
          - properties
          - primaryEndpoints
          serializedName: primaryEndpoints
          language: !<!Languages> 
            default:
              name: primaryEndpoints
              description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!StringSchema> &ref_10
            type: string
            apiVersions:
            - !<!ApiVersion> 
              version: 2015-05-01-preview
            language: !<!Languages> 
              default:
                name: StorageAccountProperties-primaryLocation
                description: Gets the location of the primary for the storage account.
            protocol: !<!Protocols> {}
          flattenedNames:
          - properties
          - primaryLocation
          serializedName: primaryLocation
          language: !<!Languages> 
            default:
              name: primaryLocation
              description: Gets the location of the primary for the storage account.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!SealedChoiceSchema> &ref_4
            choices:
            - !<!ChoiceValue> 
              value: Available
              language:
                default:
                  name: Available
                  description: ''
            - !<!ChoiceValue> 
              value: Unavailable
              language:
                default:
                  name: Unavailable
                  description: ''
            type: sealed-choice
            apiVersions:
            - !<!ApiVersion> 
              version: 2015-05-01-preview
            choiceType: *ref_1
            language: !<!Languages> 
              default:
                name: AccountStatus
                description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
            protocol: !<!Protocols> {}
          flattenedNames:
          - properties
          - statusOfPrimary
          serializedName: statusOfPrimary
          language: !<!Languages> 
            default:
              name: statusOfPrimary
              description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!DateTimeSchema> &ref_11
            type: date-time
            format: date-time
            apiVersions:
            - !<!ApiVersion> 
              version: 2015-05-01-preview
            language: !<!Languages> 
              default:
                name: StorageAccountProperties-lastGeoFailoverTime
                description: >-
                  Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available
                  if the accountType is StandardGRS or StandardRAGRS.
            protocol: !<!Protocols> {}
          flattenedNames:
          - properties
          - lastGeoFailoverTime
          serializedName: lastGeoFailoverTime
          language: !<!Languages> 
            default:
              name: lastGeoFailoverTime
              description: >-
                Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if
                the accountType is StandardGRS or StandardRAGRS.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!StringSchema> &ref_12
            type: string
            apiVersions:
            - !<!ApiVersion> 
              version: 2015-05-01-preview
            language: !<!Languages> 
              default:
                name: StorageAccountProperties-secondaryLocation
                description: Gets the location of the geo replicated secondary for the storage account. Only available if the accountType is StandardGRS or StandardRAGRS.
            protocol: !<!Protocols> {}
          flattenedNames:
          - properties
          - secondaryLocation
          serializedName: secondaryLocation
          language: !<!Languages> 
            default:
              name: secondaryLocation
              description: Gets the location of the geo replicated secondary for the storage account. Only available if the accountType is StandardGRS or StandardRAGRS.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_4
          flattenedNames:
          - properties
          - statusOfSecondary
          serializedName: statusOfSecondary
          language: !<!Languages> 
            default:
              name: statusOfSecondary
              description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!DateTimeSchema> &ref_13
            type: date-time
            format: date-time
            apiVersions:
            - !<!ApiVersion> 
              version: 2015-05-01-preview
            language: !<!Languages> 
              default:
                name: StorageAccountProperties-creationTime
                description: Gets the creation date and time of the storage account in UTC.
            protocol: !<!Protocols> {}
          flattenedNames:
          - properties
          - creationTime
          serializedName: creationTime
          language: !<!Languages> 
            default:
              name: creationTime
              description: Gets the creation date and time of the storage account in UTC.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_5
            type: object
            apiVersions:
            - !<!ApiVersion> 
              version: 2015-05-01-preview
            properties:
            - !<!Property> 
              schema: !<!StringSchema> &ref_40
                type: string
                apiVersions:
                - !<!ApiVersion> 
                  version: 2015-05-01-preview
                language: !<!Languages> 
                  default:
                    name: CustomDomain-name
                    description: Gets or sets the custom domain name. Name is the CNAME source.
                protocol: !<!Protocols> {}
              serializedName: name
              language: !<!Languages> 
                default:
                  name: name
                  description: Gets or sets the custom domain name. Name is the CNAME source.
              protocol: !<!Protocols> {}
            - !<!Property> 
              schema: !<!BooleanSchema> &ref_23
                type: boolean
                language: !<!Languages> 
                  default:
                    name: typeForuseSubDomain
                    description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates
                protocol: !<!Protocols> {}
              serializedName: useSubDomain
              language: !<!Languages> 
                default:
                  name: useSubDomain
                  description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: CustomDomain
                description: The custom domain assigned to this storage account. This can be set via Update.
                namespace: Api20150501Preview
            protocol: !<!Protocols> {}
          flattenedNames:
          - properties
          - customDomain
          serializedName: customDomain
          language: !<!Languages> 
            default:
              name: customDomain
              description: The custom domain assigned to this storage account. This can be set via Update.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_3
          flattenedNames:
          - properties
          - secondaryEndpoints
          serializedName: secondaryEndpoints
          language: !<!Languages> 
            default:
              name: secondaryEndpoints
              description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: StorageAccount
            description: The storage account.
            namespace: Api20150501Preview
        protocol: !<!Protocols> {}
      - !<!ObjectSchema> &ref_8
        type: object
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        parents: !<!Relations> 
          all:
          - *ref_0
          immediate:
          - *ref_0
        properties:
        - !<!Property> 
          schema: *ref_2
          flattenedNames: &ref_52
          - properties
          - accountType
          serializedName: accountType
          language: !<!Languages> 
            default:
              name: accountType
              description: Gets or sets the account type.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_5
          flattenedNames: &ref_53
          - properties
          - customDomain
          serializedName: customDomain
          language: !<!Languages> 
            default:
              name: customDomain
              description: The custom domain assigned to this storage account. This can be set via Update.
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: StorageAccountUpdateParameters
            description: The parameters to update on the account.
            namespace: Api20150501Preview
        protocol: !<!Protocols> {}
      immediate:
      - *ref_6
      - *ref_7
      - *ref_8
    properties:
    - !<!Property> 
      schema: !<!StringSchema> &ref_33
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: Resource-id
            description: Resource Id
        protocol: !<!Protocols> {}
      readOnly: true
      required: false
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: Resource Id
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_34
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: Resource-name
            description: Resource name
        protocol: !<!Protocols> {}
      readOnly: true
      required: false
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: Resource name
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_35
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: Resource-type
            description: Resource type
        protocol: !<!Protocols> {}
      readOnly: true
      required: false
      serializedName: type
      language: !<!Languages> 
        default:
          name: type
          description: Resource type
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_36
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: Resource-location
            description: Resource location
        protocol: !<!Protocols> {}
      required: true
      serializedName: location
      language: !<!Languages> 
        default:
          name: location
          description: Resource location
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!DictionarySchema> &ref_19
        type: dictionary
        elementType: !<!StringSchema> &ref_29
          type: string
          apiVersions:
          - !<!ApiVersion> 
            version: 2015-05-01-preview
          language: !<!Languages> 
            default:
              name: string
              description: MISSING·SCHEMA-DESCRIPTION-STRING
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: Resource-tags
            description: Resource tags
        protocol: !<!Protocols> {}
      required: false
      serializedName: tags
      language: !<!Languages> 
        default:
          name: tags
          description: Resource tags
      protocol: !<!Protocols> {}
    extensions:
      x-ms-azure-resource: true
    language: !<!Languages> 
      default:
        name: Resource
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - *ref_6
  - !<!ObjectSchema> 
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      schema: *ref_2
      serializedName: accountType
      language: !<!Languages> 
        default:
          name: accountType
          description: Gets or sets the account type.
      protocol: !<!Protocols> {}
    extensions:
      x-ms-flattened: true
    language: !<!Languages> 
      default:
        name: StorageAccountPropertiesCreateParameters
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - *ref_7
  - !<!ObjectSchema> 
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      schema: *ref_9
      serializedName: provisioningState
      language: !<!Languages> 
        default:
          name: provisioningState
          description: Gets the status of the storage account at the time the operation was called.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_2
      serializedName: accountType
      language: !<!Languages> 
        default:
          name: accountType
          description: Gets or sets the account type.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_3
      serializedName: primaryEndpoints
      language: !<!Languages> 
        default:
          name: primaryEndpoints
          description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_10
      serializedName: primaryLocation
      language: !<!Languages> 
        default:
          name: primaryLocation
          description: Gets the location of the primary for the storage account.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_4
      serializedName: statusOfPrimary
      language: !<!Languages> 
        default:
          name: statusOfPrimary
          description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_11
      serializedName: lastGeoFailoverTime
      language: !<!Languages> 
        default:
          name: lastGeoFailoverTime
          description: >-
            Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the
            accountType is StandardGRS or StandardRAGRS.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_12
      serializedName: secondaryLocation
      language: !<!Languages> 
        default:
          name: secondaryLocation
          description: Gets the location of the geo replicated secondary for the storage account. Only available if the accountType is StandardGRS or StandardRAGRS.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_4
      serializedName: statusOfSecondary
      language: !<!Languages> 
        default:
          name: statusOfSecondary
          description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_13
      serializedName: creationTime
      language: !<!Languages> 
        default:
          name: creationTime
          description: Gets the creation date and time of the storage account in UTC.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_5
      serializedName: customDomain
      language: !<!Languages> 
        default:
          name: customDomain
          description: The custom domain assigned to this storage account. This can be set via Update.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_3
      serializedName: secondaryEndpoints
      language: !<!Languages> 
        default:
          name: secondaryEndpoints
          description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
      protocol: !<!Protocols> {}
    extensions:
      x-ms-flattened: true
    language: !<!Languages> 
      default:
        name: StorageAccountProperties
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - *ref_3
  - *ref_14
  - *ref_15
  - *ref_5
  - *ref_8
  - !<!ObjectSchema> 
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      schema: *ref_2
      serializedName: accountType
      language: !<!Languages> 
        default:
          name: accountType
          description: Gets or sets the account type.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_5
      serializedName: customDomain
      language: !<!Languages> 
        default:
          name: customDomain
          description: The custom domain assigned to this storage account. This can be set via Update.
      protocol: !<!Protocols> {}
    extensions:
      x-ms-flattened: true
    language: !<!Languages> 
      default:
        name: StorageAccountPropertiesUpdateParameters
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_54
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      schema: !<!StringSchema> &ref_16
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: StorageAccountKeys-key1
            description: Gets the value of key 1.
        protocol: !<!Protocols> {}
      serializedName: key1
      language: !<!Languages> 
        default:
          name: key1
          description: Gets the value of key 1.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_16
      serializedName: key2
      language: !<!Languages> 
        default:
          name: key2
          description: Gets the value of key 1.
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: StorageAccountKeys
        description: The access keys for the storage account.
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_55
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      schema: !<!ArraySchema> &ref_20
        type: array
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        elementType: *ref_7
        language: !<!Languages> 
          default:
            name: StorageAccountListResult-value
            description: Gets the list of storage accounts and their properties.
        protocol: !<!Protocols> {}
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: Gets the list of storage accounts and their properties.
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_41
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: StorageAccountListResult-nextLink
            description: Gets the link to the next set of results. Currently this will always be empty as the API does not support pagination.
        protocol: !<!Protocols> {}
      serializedName: nextLink
      language: !<!Languages> 
        default:
          name: nextLink
          description: Gets the link to the next set of results. Currently this will always be empty as the API does not support pagination.
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: StorageAccountListResult
        description: The list storage accounts operation response.
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_56
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      schema: !<!SealedChoiceSchema> &ref_27
        choices:
        - !<!ChoiceValue> 
          value: key1
          language:
            default:
              name: key1
              description: ''
        - !<!ChoiceValue> 
          value: key2
          language:
            default:
              name: key2
              description: ''
        type: sealed-choice
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        choiceType: *ref_1
        language: !<!Languages> 
          default:
            name: KeyName
            description: MISSING·SCHEMA-DESCRIPTION-CHOICE
        protocol: !<!Protocols> {}
      serializedName: keyName
      language: !<!Languages> 
        default:
          name: keyName
          description: MISSING·SCHEMA-DESCRIPTION-CHOICE
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: StorageAccountRegenerateKeyParameters
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_57
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      schema: !<!ArraySchema> &ref_21
        type: array
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        elementType: !<!ObjectSchema> &ref_17
          type: object
          apiVersions:
          - !<!ApiVersion> 
            version: 2015-05-01-preview
          properties:
          - !<!Property> 
            schema: !<!SealedChoiceSchema> &ref_28
              choices:
              - !<!ChoiceValue> 
                value: Count
                language:
                  default:
                    name: Count
                    description: ''
              - !<!ChoiceValue> 
                value: Bytes
                language:
                  default:
                    name: Bytes
                    description: ''
              - !<!ChoiceValue> 
                value: Seconds
                language:
                  default:
                    name: Seconds
                    description: ''
              - !<!ChoiceValue> 
                value: Percent
                language:
                  default:
                    name: Percent
                    description: ''
              - !<!ChoiceValue> 
                value: CountsPerSecond
                language:
                  default:
                    name: CountsPerSecond
                    description: ''
              - !<!ChoiceValue> 
                value: BytesPerSecond
                language:
                  default:
                    name: BytesPerSecond
                    description: ''
              type: sealed-choice
              apiVersions:
              - !<!ApiVersion> 
                version: 2015-05-01-preview
              choiceType: *ref_1
              language: !<!Languages> 
                default:
                  name: UsageUnit
                  description: Gets the unit of measurement.
              protocol: !<!Protocols> {}
            serializedName: unit
            language: !<!Languages> 
              default:
                name: unit
                description: Gets the unit of measurement.
            protocol: !<!Protocols> {}
          - !<!Property> 
            schema: !<!NumberSchema> &ref_24
              type: integer
              precision: 32
              language: !<!Languages> 
                default:
                  name: typeForcurrentValue
                  description: Gets the current count of the allocated resources in the subscription.
              protocol: !<!Protocols> {}
            serializedName: currentValue
            language: !<!Languages> 
              default:
                name: currentValue
                description: Gets the current count of the allocated resources in the subscription.
            protocol: !<!Protocols> {}
          - !<!Property> 
            schema: !<!NumberSchema> &ref_25
              type: integer
              precision: 32
              language: !<!Languages> 
                default:
                  name: typeForlimit
                  description: Gets the maximum count of the resources that can be allocated in the subscription.
              protocol: !<!Protocols> {}
            serializedName: limit
            language: !<!Languages> 
              default:
                name: limit
                description: Gets the maximum count of the resources that can be allocated in the subscription.
            protocol: !<!Protocols> {}
          - !<!Property> 
            schema: !<!ObjectSchema> &ref_18
              type: object
              apiVersions:
              - !<!ApiVersion> 
                version: 2015-05-01-preview
              properties:
              - !<!Property> 
                schema: !<!StringSchema> &ref_42
                  type: string
                  apiVersions:
                  - !<!ApiVersion> 
                    version: 2015-05-01-preview
                  language: !<!Languages> 
                    default:
                      name: UsageName-value
                      description: Gets a string describing the resource name.
                  protocol: !<!Protocols> {}
                serializedName: value
                language: !<!Languages> 
                  default:
                    name: value
                    description: Gets a string describing the resource name.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: !<!StringSchema> &ref_43
                  type: string
                  apiVersions:
                  - !<!ApiVersion> 
                    version: 2015-05-01-preview
                  language: !<!Languages> 
                    default:
                      name: UsageName-localizedValue
                      description: Gets a localized string describing the resource name.
                  protocol: !<!Protocols> {}
                serializedName: localizedValue
                language: !<!Languages> 
                  default:
                    name: localizedValue
                    description: Gets a localized string describing the resource name.
                protocol: !<!Protocols> {}
              language: !<!Languages> 
                default:
                  name: UsageName
                  description: The Usage Names.
                  namespace: Api20150501Preview
              protocol: !<!Protocols> {}
            serializedName: name
            language: !<!Languages> 
              default:
                name: name
                description: The Usage Names.
            protocol: !<!Protocols> {}
          language: !<!Languages> 
            default:
              name: Usage
              description: Describes Storage Resource Usage.
              namespace: Api20150501Preview
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: UsageListResult-value
            description: Gets or sets the list Storage Resource Usages.
        protocol: !<!Protocols> {}
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: Gets or sets the list Storage Resource Usages.
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: UsageListResult
        description: The List Usages operation response.
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  - *ref_17
  - *ref_18
  - !<!ObjectSchema> 
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    properties:
    - !<!Property> 
      schema: !<!StringSchema> &ref_44
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-05-01-preview
        language: !<!Languages> 
          default:
            name: SubResource-id
            description: Resource Id
        protocol: !<!Protocols> {}
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: Resource Id
      protocol: !<!Protocols> {}
    extensions:
      x-ms-azure-resource: true
    language: !<!Languages> 
      default:
        name: SubResource
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150501Preview
    protocol: !<!Protocols> {}
  dictionaries:
  - *ref_19
  arrays:
  - *ref_20
  - *ref_21
  booleans:
  - *ref_22
  - *ref_23
  constants:
  - !<!ConstantSchema> &ref_45
    type: constant
    value: !<!ConstantValue> 
      value: 2015-05-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-05-01-preview
        description: Api Version (2015-05-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-05-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-05-01-preview
        description: Api Version (2015-05-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-05-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-05-01-preview
        description: Api Version (2015-05-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-05-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-05-01-preview
        description: Api Version (2015-05-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-05-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-05-01-preview
        description: Api Version (2015-05-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-05-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-05-01-preview
        description: Api Version (2015-05-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-05-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-05-01-preview
        description: Api Version (2015-05-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-05-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-05-01-preview
        description: Api Version (2015-05-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-05-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-05-01-preview
        description: Api Version (2015-05-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-05-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-05-01-preview
        description: Api Version (2015-05-01-preview)
    protocol: !<!Protocols> {}
  dateTimes:
  - *ref_11
  - *ref_13
  numbers:
  - *ref_24
  - *ref_25
  sealedChoices:
  - *ref_26
  - *ref_2
  - *ref_9
  - *ref_4
  - *ref_27
  - *ref_28
  strings:
  - *ref_1
  - *ref_29
  - *ref_30
  - *ref_31
  - *ref_32
  - *ref_33
  - *ref_34
  - *ref_35
  - *ref_36
  - *ref_37
  - *ref_38
  - *ref_39
  - *ref_10
  - *ref_12
  - *ref_40
  - *ref_16
  - *ref_41
  - *ref_42
  - *ref_43
  - *ref_44
globalParameters:
- !<!Parameter> &ref_48
  schema: *ref_29
  implementation: Client
  required: true
  extensions:
    x-ms-priority: 0
  language: !<!Languages> 
    default:
      name: subscriptionId
      description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      serializedName: subscriptionId
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: path
- !<!Parameter> &ref_46
  schema: *ref_1
  clientDefaultValue: 'https://management.azure.com'
  implementation: Client
  required: true
  language: !<!Languages> 
    default:
      name: $host
      description: server parameter
      serializedName: $host
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: uri
- !<!Parameter> &ref_47
  schema: *ref_45
  implementation: Client
  required: true
  language: !<!Languages> 
    default:
      name: ApiVersion
      description: Api Version
      serializedName: api-version
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: query
info: !<!Info> 
  title: storage
operationGroups:
- !<!OperationGroup> 
  $key: StorageAccounts
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    request: !<!Request> 
      parameters:
      - *ref_46
      - *ref_47
      - *ref_48
      - !<!Parameter> 
        schema: *ref_49
        hidden: true
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: accountName
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> 
        schema: *ref_30
        required: true
        serializedName: name
        language: !<!Languages> 
          default:
            name: name
            description: MISSING·SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      - !<!Parameter> 
        schema: *ref_31
        required: false
        serializedName: type
        language: !<!Languages> 
          default:
            name: type
            description: MISSING·SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          uri: '{$host}'
    responses:
    - !<!SchemaResponse> 
      schema: *ref_50
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: CheckNameAvailability
        description: Checks that account name is valid and is not in use.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    request: !<!Request> 
      parameters:
      - *ref_46
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
            serializedName: resourceGroupName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
            serializedName: accountName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - *ref_47
      - *ref_48
      - !<!Parameter> 
        schema: *ref_6
        hidden: true
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: parameters
        language: !<!Languages> 
          default:
            name: parameters
            description: The parameters to provide for the created account.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> 
        schema: *ref_2
        flattenedNames: *ref_51
        serializedName: accountType
        language: !<!Languages> 
          default:
            name: accountType
            description: Gets or sets the account type.
        protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
          method: put
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          uri: '{$host}'
    responses:
    - !<!SchemaResponse> 
      schema: *ref_7
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '202'
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 2
    language: !<!Languages> 
      default:
        name: Create
        description: >-
          Asynchronously creates a new storage account with the specified parameters. Existing accounts cannot be updated with this API and should instead use the Update Storage Account API. If an account is already created and subsequent
          PUT request is issued with exact same set of properties, then HTTP 200 would be returned. 
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    request: !<!Request> 
      parameters:
      - *ref_46
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
            serializedName: resourceGroupName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
            serializedName: accountName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - *ref_47
      - *ref_48
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
          method: delete
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    language: !<!Languages> 
      default:
        name: Delete
        description: Deletes a storage account in Microsoft Azure.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    request: !<!Request> 
      parameters:
      - *ref_46
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
            serializedName: resourceGroupName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
            serializedName: accountName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - *ref_47
      - *ref_48
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
          method: get
          uri: '{$host}'
    responses:
    - !<!SchemaResponse> 
      schema: *ref_7
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: GetProperties
        description: 'Returns the properties for the specified storage account including but not limited to name, account type, location, and account status. The ListKeys operation should be used to retrieve storage keys.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    request: !<!Request> 
      parameters:
      - *ref_46
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
            serializedName: resourceGroupName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
            serializedName: accountName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - *ref_47
      - *ref_48
      - !<!Parameter> 
        schema: *ref_8
        hidden: true
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: parameters
        language: !<!Languages> 
          default:
            name: parameters
            description: 'The parameters to update on the account. Note that only one property can be changed at a time using this API. '
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> 
        schema: *ref_2
        flattenedNames: *ref_52
        serializedName: accountType
        language: !<!Languages> 
          default:
            name: accountType
            description: Gets or sets the account type.
        protocol: !<!Protocols> {}
      - !<!Parameter> 
        schema: *ref_5
        flattenedNames: *ref_53
        serializedName: customDomain
        language: !<!Languages> 
          default:
            name: customDomain
            description: The custom domain assigned to this storage account. This can be set via Update.
        protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
          method: patch
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          uri: '{$host}'
    responses:
    - !<!SchemaResponse> 
      schema: *ref_7
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    extensions:
      x-ms-requestBody-index: 2
    language: !<!Languages> 
      default:
        name: Update
        description: >-
          Updates the account type or tags for a storage account. It can also be used to add a custom domain (note that custom domains cannot be added via the Create operation). Only one custom domain is supported per storage account. This
          API can only be used to update one of tags, accountType, or customDomain per call. To update multiple of these properties, call the API multiple times with one change per call. This call does not change the storage keys for the
          account. If you want to change storage account keys, use the RegenerateKey operation. The location and name of the storage account cannot be changed after creation.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    request: !<!Request> 
      parameters:
      - *ref_46
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
            serializedName: resourceGroupName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
            serializedName: accountName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - *ref_47
      - *ref_48
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys'
          method: post
          uri: '{$host}'
    responses:
    - !<!SchemaResponse> 
      schema: *ref_54
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: ListKeys
        description: Lists the access keys for the specified storage account.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    request: !<!Request> 
      parameters:
      - *ref_46
      - *ref_47
      - *ref_48
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts'
          method: get
          uri: '{$host}'
    responses:
    - !<!SchemaResponse> 
      schema: *ref_55
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    extensions:
      x-ms-pageable:
        nextLinkName: {}
    language: !<!Languages> 
      default:
        name: List
        description: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    request: !<!Request> 
      parameters:
      - *ref_46
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
            serializedName: resourceGroupName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - *ref_47
      - *ref_48
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts'
          method: get
          uri: '{$host}'
    responses:
    - !<!SchemaResponse> 
      schema: *ref_55
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    extensions:
      x-ms-pageable:
        nextLinkName: {}
    language: !<!Languages> 
      default:
        name: ListByResourceGroup
        description: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    request: !<!Request> 
      parameters:
      - *ref_46
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: resourceGroupName
            description: The name of the resource group within the user’s subscription.
            serializedName: resourceGroupName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - !<!Parameter> 
        schema: *ref_29
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: accountName
            description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
            serializedName: accountName
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      - *ref_47
      - *ref_48
      - !<!Parameter> 
        schema: *ref_56
        hidden: true
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: regenerateKey
        language: !<!Languages> 
          default:
            name: regenerateKey
            description: Specifies name of the key which should be regenerated.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> 
        schema: *ref_27
        serializedName: keyName
        language: !<!Languages> 
          default:
            name: keyName
            description: MISSING·SCHEMA-DESCRIPTION-CHOICE
        protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey'
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          uri: '{$host}'
    responses:
    - !<!SchemaResponse> 
      schema: *ref_54
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    extensions:
      x-ms-requestBody-index: 2
    language: !<!Languages> 
      default:
        name: RegenerateKey
        description: Regenerates the access keys for the specified storage account.
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: StorageAccounts
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: Usage
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-05-01-preview
    request: !<!Request> 
      parameters:
      - *ref_46
      - *ref_47
      - *ref_48
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages'
          method: get
          uri: '{$host}'
    responses:
    - !<!SchemaResponse> 
      schema: *ref_57
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          - text/json
          statusCodes:
          - '200'
    language: !<!Languages> 
      default:
        name: List
        description: Gets the current usage count and the limit for the resources under the subscription.
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: Usage
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
