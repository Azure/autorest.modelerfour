!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_7
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    children: !<!Relations> 
      all:
      - !<!ObjectSchema> &ref_8
        type: object
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        parents: !<!Relations> 
          all:
          - *ref_7
          immediate:
          - *ref_7
        properties:
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_9
            type: object
            apiVersions:
            - !<!ApiVersion> 
              version: 1.0.0
            properties:
            - !<!Property> 
              schema: !<!StringSchema> &ref_5
                type: string
                apiVersions:
                - !<!ApiVersion> 
                  version: 1.0.0
                language: !<!Languages> 
                  default:
                    name: Product-properties-provisioningState
                    description: ''
                protocol: !<!Protocols> {}
              serializedName: provisioningState
              language: !<!Languages> 
                default:
                  name: provisioningState
                  description: ''
              protocol: !<!Protocols> {}
            - !<!Property> 
              schema: !<!ChoiceSchema> &ref_21
                choices:
                - !<!ChoiceValue> 
                  value: Succeeded
                  language:
                    default:
                      name: Succeeded
                      description: ''
                - !<!ChoiceValue> 
                  value: Failed
                  language:
                    default:
                      name: Failed
                      description: ''
                - !<!ChoiceValue> 
                  value: canceled
                  language:
                    default:
                      name: canceled
                      description: ''
                - !<!ChoiceValue> 
                  value: Accepted
                  language:
                    default:
                      name: Accepted
                      description: ''
                - !<!ChoiceValue> 
                  value: Creating
                  language:
                    default:
                      name: Creating
                      description: ''
                - !<!ChoiceValue> 
                  value: Created
                  language:
                    default:
                      name: Created
                      description: ''
                - !<!ChoiceValue> 
                  value: Updating
                  language:
                    default:
                      name: Updating
                      description: ''
                - !<!ChoiceValue> 
                  value: Updated
                  language:
                    default:
                      name: Updated
                      description: ''
                - !<!ChoiceValue> 
                  value: Deleting
                  language:
                    default:
                      name: Deleting
                      description: ''
                - !<!ChoiceValue> 
                  value: Deleted
                  language:
                    default:
                      name: Deleted
                      description: ''
                - !<!ChoiceValue> 
                  value: OK
                  language:
                    default:
                      name: OK
                      description: ''
                type: choice
                apiVersions:
                - !<!ApiVersion> 
                  version: 1.0.0
                choiceType: !<!StringSchema> &ref_6
                  type: string
                  language: !<!Languages> 
                    default:
                      name: string
                      description: simple string
                  protocol: !<!Protocols> {}
                language: !<!Languages> 
                  default:
                    name: Product-properties-provisioningStateValues
                    description: ''
                protocol: !<!Protocols> {}
              readOnly: true
              serializedName: provisioningStateValues
              language: !<!Languages> 
                default:
                  name: provisioningStateValues
                  description: ''
              protocol: !<!Protocols> {}
            extensions:
              x-ms-client-flatten: true
            language: !<!Languages> 
              default:
                name: Product-properties
                description: ''
                namespace: Api100
            protocol: !<!Protocols> {}
          serializedName: properties
          extensions:
            x-ms-client-flatten: true
          language: !<!Languages> 
            default:
              name: properties
              description: ''
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: Product
            description: ''
            namespace: Api100
        protocol: !<!Protocols> {}
      immediate:
      - *ref_8
    properties:
    - !<!Property> 
      schema: !<!StringSchema> &ref_0
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Resource-id
            description: Resource Id
        protocol: !<!Protocols> {}
      readOnly: true
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: Resource Id
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_1
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Resource-type
            description: Resource Type
        protocol: !<!Protocols> {}
      readOnly: true
      serializedName: type
      language: !<!Languages> 
        default:
          name: type
          description: Resource Type
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!DictionarySchema> &ref_20
        type: dictionary
        elementType: !<!StringSchema> &ref_2
          type: string
          apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
          language: !<!Languages> 
            default:
              name: string
              description: ''
              header: Location
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: Resource-tags
            description: Dictionary of <string>
        protocol: !<!Protocols> {}
      serializedName: tags
      language: !<!Languages> 
        default:
          name: tags
          description: Dictionary of <string>
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_3
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Resource-location
            description: Resource Location
        protocol: !<!Protocols> {}
      serializedName: location
      language: !<!Languages> 
        default:
          name: location
          description: Resource Location
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_4
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Resource-name
            description: Resource Name
        protocol: !<!Protocols> {}
      readOnly: true
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: Resource Name
      protocol: !<!Protocols> {}
    extensions:
      x-ms-azure-resource: true
    language: !<!Languages> 
      default:
        name: Resource
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - *ref_8
  - *ref_9
  - !<!ObjectSchema> &ref_27
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!NumberSchema> &ref_24
        type: integer
        precision: 32
        language: !<!Languages> 
          default:
            name: integer
            description: ''
        protocol: !<!Protocols> {}
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: ''
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_10
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: CloudError-message
            description: ''
        protocol: !<!Protocols> {}
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: ''
      protocol: !<!Protocols> {}
    extensions:
      x-ms-external: true
    language: !<!Languages> 
      default:
        name: CloudError
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_42
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!StringSchema> &ref_11
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Sku-name
            description: ''
        protocol: !<!Protocols> {}
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: ''
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_12
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: Sku-id
            description: ''
        protocol: !<!Protocols> {}
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Sku
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_15
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    children: !<!Relations> 
      all:
      - !<!ObjectSchema> &ref_16
        type: object
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        parents: !<!Relations> 
          all:
          - *ref_15
          immediate:
          - *ref_15
        properties:
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_17
            type: object
            apiVersions:
            - !<!ApiVersion> 
              version: 1.0.0
            properties:
            - !<!Property> 
              schema: !<!StringSchema> &ref_14
                type: string
                apiVersions:
                - !<!ApiVersion> 
                  version: 1.0.0
                language: !<!Languages> 
                  default:
                    name: SubProduct-properties-provisioningState
                    description: ''
                protocol: !<!Protocols> {}
              serializedName: provisioningState
              language: !<!Languages> 
                default:
                  name: provisioningState
                  description: ''
              protocol: !<!Protocols> {}
            - !<!Property> 
              schema: !<!ChoiceSchema> &ref_22
                choices:
                - !<!ChoiceValue> 
                  value: Succeeded
                  language:
                    default:
                      name: Succeeded
                      description: ''
                - !<!ChoiceValue> 
                  value: Failed
                  language:
                    default:
                      name: Failed
                      description: ''
                - !<!ChoiceValue> 
                  value: canceled
                  language:
                    default:
                      name: canceled
                      description: ''
                - !<!ChoiceValue> 
                  value: Accepted
                  language:
                    default:
                      name: Accepted
                      description: ''
                - !<!ChoiceValue> 
                  value: Creating
                  language:
                    default:
                      name: Creating
                      description: ''
                - !<!ChoiceValue> 
                  value: Created
                  language:
                    default:
                      name: Created
                      description: ''
                - !<!ChoiceValue> 
                  value: Updating
                  language:
                    default:
                      name: Updating
                      description: ''
                - !<!ChoiceValue> 
                  value: Updated
                  language:
                    default:
                      name: Updated
                      description: ''
                - !<!ChoiceValue> 
                  value: Deleting
                  language:
                    default:
                      name: Deleting
                      description: ''
                - !<!ChoiceValue> 
                  value: Deleted
                  language:
                    default:
                      name: Deleted
                      description: ''
                - !<!ChoiceValue> 
                  value: OK
                  language:
                    default:
                      name: OK
                      description: ''
                type: choice
                apiVersions:
                - !<!ApiVersion> 
                  version: 1.0.0
                choiceType: *ref_6
                language: !<!Languages> 
                  default:
                    name: SubProduct-properties-provisioningStateValues
                    description: ''
                protocol: !<!Protocols> {}
              readOnly: true
              serializedName: provisioningStateValues
              language: !<!Languages> 
                default:
                  name: provisioningStateValues
                  description: ''
              protocol: !<!Protocols> {}
            extensions:
              x-ms-client-flatten: true
            language: !<!Languages> 
              default:
                name: SubProduct-properties
                description: ''
                namespace: Api100
            protocol: !<!Protocols> {}
          serializedName: properties
          extensions:
            x-ms-client-flatten: true
          language: !<!Languages> 
            default:
              name: properties
              description: ''
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: SubProduct
            description: ''
            namespace: Api100
        protocol: !<!Protocols> {}
      immediate:
      - *ref_16
    properties:
    - !<!Property> 
      schema: !<!StringSchema> &ref_13
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: SubResource-id
            description: Sub Resource Id
        protocol: !<!Protocols> {}
      readOnly: true
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: Sub Resource Id
      protocol: !<!Protocols> {}
    extensions:
      x-ms-azure-resource: true
    language: !<!Languages> 
      default:
        name: SubResource
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - *ref_16
  - *ref_17
  - !<!ObjectSchema> 
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!ChoiceSchema> &ref_23
        choices:
        - !<!ChoiceValue> 
          value: Succeeded
          language:
            default:
              name: Succeeded
              description: ''
        - !<!ChoiceValue> 
          value: Failed
          language:
            default:
              name: Failed
              description: ''
        - !<!ChoiceValue> 
          value: canceled
          language:
            default:
              name: canceled
              description: ''
        - !<!ChoiceValue> 
          value: Accepted
          language:
            default:
              name: Accepted
              description: ''
        - !<!ChoiceValue> 
          value: Creating
          language:
            default:
              name: Creating
              description: ''
        - !<!ChoiceValue> 
          value: Created
          language:
            default:
              name: Created
              description: ''
        - !<!ChoiceValue> 
          value: Updating
          language:
            default:
              name: Updating
              description: ''
        - !<!ChoiceValue> 
          value: Updated
          language:
            default:
              name: Updated
              description: ''
        - !<!ChoiceValue> 
          value: Deleting
          language:
            default:
              name: Deleting
              description: ''
        - !<!ChoiceValue> 
          value: Deleted
          language:
            default:
              name: Deleted
              description: ''
        - !<!ChoiceValue> 
          value: OK
          language:
            default:
              name: OK
              description: ''
        type: choice
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        choiceType: *ref_6
        language: !<!Languages> 
          default:
            name: OperationResult-status
            description: The status of the request
        protocol: !<!Protocols> {}
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: The status of the request
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!ObjectSchema> &ref_19
        type: object
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        properties:
        - !<!Property> 
          schema: !<!NumberSchema> &ref_25
            type: integer
            precision: 32
            language: !<!Languages> 
              default:
                name: integer
                description: The error code for an operation failure
            protocol: !<!Protocols> {}
          serializedName: code
          language: !<!Languages> 
            default:
              name: code
              description: The error code for an operation failure
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!StringSchema> &ref_18
            type: string
            apiVersions:
            - !<!ApiVersion> 
              version: 1.0.0
            language: !<!Languages> 
              default:
                name: OperationResult-error-message
                description: The detailed arror message
            protocol: !<!Protocols> {}
          serializedName: message
          language: !<!Languages> 
            default:
              name: message
              description: The detailed arror message
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: OperationResult-error
            description: ''
            namespace: Api100
        protocol: !<!Protocols> {}
      serializedName: error
      language: !<!Languages> 
        default:
          name: error
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: OperationResult
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - *ref_19
  dictionaries:
  - *ref_20
  choices:
  - *ref_21
  - *ref_22
  - *ref_23
  numbers:
  - *ref_24
  - !<!NumberSchema> &ref_37
    type: integer
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: integer
        description: ''
        header: Retry-After
    protocol: !<!Protocols> {}
  - *ref_25
  strings:
  - *ref_6
  - *ref_0
  - *ref_1
  - *ref_2
  - *ref_3
  - *ref_4
  - *ref_5
  - *ref_10
  - *ref_11
  - *ref_12
  - *ref_13
  - *ref_14
  - *ref_18
globalParameters:
- !<!Parameter> &ref_28
  schema: *ref_6
  clientDefaultValue: 'http://localhost:3000'
  implementation: Client
  required: true
  extensions:
    x-ms-skip-url-encoding: true
  language: !<!Languages> 
    default:
      name: $host
      description: server parameter
      serializedName: $host
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: uri
info: !<!Info> 
  description: Long-running Operation for AutoRest
  title: lro
operationGroups:
- !<!OperationGroup> 
  $key: LROs
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_26
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_26
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/200/succeeded
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put200Succeeded
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Succeeded’.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_29
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_29
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/200/succeeded/nostate
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put200SucceededNoState
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that does not contain ProvisioningState=’Succeeded’.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_30
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_30
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/202/retry/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put202Retry200
        description: 'Long running put request, service returns a 202 to the initial request, with a location header that points to a polling URL that returns a 200 and an entity that doesn''t contains ProvisioningState'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_31
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_31
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/201/creating/succeeded/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put201CreatingSucceeded200
        description: 'Long running put request, service returns a 201 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_32
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_32
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/200/updating/succeeded/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put200UpdatingSucceeded204
        description: 'Long running put request, service returns a 201 to the initial request, with an entity that contains ProvisioningState=’Updating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_33
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/201/created/failed/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put201CreatingFailed200
        description: 'Long running put request, service returns a 201 to the initial request, with an entity that contains ProvisioningState=’Created’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Failed’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_34
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_34
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/200/accepted/canceled/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put200Acceptedcanceled200
        description: 'Long running put request, service returns a 201 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Canceled’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_35
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_35
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/put/noheader/202/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: location
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNoHeaderInRetry
        description: 'Long running put request, service returns a 202 to the initial request with location header. Subsequent calls to operation status do not contain location header.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_36
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_36
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putasync/retry/succeeded
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRetrySucceeded
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_38
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_38
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putasync/noretry/succeeded
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncNoRetrySucceeded
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_39
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_39
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putasync/retry/failed
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRetryFailed
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_40
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_40
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putasync/noretry/canceled
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncNoRetrycanceled
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_41
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_41
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putasync/noheader/201/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncNoHeaderInRetry
        description: 'Long running put request, service returns a 202 to the initial request with Azure-AsyncOperation header. Subsequent calls to operation status do not contain Azure-AsyncOperation header.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_43
        schema: *ref_42
        implementation: Method
        extensions:
          x-ms-requestBody-name: sku
        language: !<!Languages> 
          default:
            name: sku
            description: sku to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_43
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putnonresource/202/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_42
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNonResource
        description: Long running put request with non resource.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_44
        schema: *ref_42
        implementation: Method
        extensions:
          x-ms-requestBody-name: sku
        language: !<!Languages> 
          default:
            name: sku
            description: sku to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_44
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putnonresourceasync/202/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_42
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncNonResource
        description: Long running put request with non resource.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_45
        schema: *ref_16
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Sub Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_45
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putsubresource/202/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_16
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putSubResource
        description: Long running put request with sub resource.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_46
        schema: *ref_16
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Sub Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_46
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/putsubresourceasync/202/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_16
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncSubResource
        description: Long running put request with sub resource.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/delete/provisioning/202/accepted/200/succeeded
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteProvisioning202Accepted200Succeeded
        description: 'Long running delete request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Accepted’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/delete/provisioning/202/deleting/200/failed
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteProvisioning202DeletingFailed200
        description: 'Long running delete request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Failed’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/delete/provisioning/202/deleting/200/canceled
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteProvisioning202Deletingcanceled200
        description: 'Long running delete request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Canceled’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/delete/204/succeeded
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete204Succeeded
        description: Long running delete succeeds and returns right away
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/delete/202/retry/200
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete202Retry200
        description: 'Long running delete request, service returns a 202 to the initial request. Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/delete/202/noretry/204
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete202NoRetry204
        description: 'Long running delete request, service returns a 202 to the initial request. Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/delete/noheader
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          statusCodes:
          - '202'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteNoHeaderInRetry
        description: 'Long running delete request, service returns a location header in the initial request. Subsequent calls to operation status do not contain location header.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/deleteasync/noheader/202/204
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          statusCodes:
          - '202'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncNoHeaderInRetry
        description: 'Long running delete request, service returns an Azure-AsyncOperation header in the initial request. Subsequent calls to operation status do not contain Azure-AsyncOperation header.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/deleteasync/retry/succeeded
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRetrySucceeded
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/deleteasync/noretry/succeeded
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncNoRetrySucceeded
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/deleteasync/retry/failed
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRetryFailed
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/deleteasync/retry/canceled
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRetrycanceled
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/post/payload/200
          method: post
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_42
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_42
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: post200WithPayload
        description: 'Long running post request, service returns a 202 to the initial request, with ''Location'' header. Poll returns a 200 with a response body after success.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_47
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_47
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/post/202/retry/200
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202Retry200
        description: 'Long running post request, service returns a 202 to the initial request, with ''Location'' and ''Retry-After'' headers, Polls return a 200 with a response body after success'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_48
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_48
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/post/202/noretry/204
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202NoRetry204
        description: 'Long running post request, service returns a 202 to the initial request, with ''Location'' header, 204 with noresponse body after success'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/LROPostDoubleHeadersFinalLocationGet
          method: post
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    language: !<!Languages> 
      default:
        name: postDoubleHeadersFinalLocationGet
        description: 'Long running post request, service returns a 202 to the initial request with both Location and Azure-Async header. Poll Azure-Async and it''s success. Should poll Location to get the final object'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/LROPostDoubleHeadersFinalAzureHeaderGet
          method: post
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    language: !<!Languages> 
      default:
        name: postDoubleHeadersFinalAzureHeaderGet
        description: 'Long running post request, service returns a 202 to the initial request with both Location and Azure-Async header. Poll Azure-Async and it''s success. Should NOT poll Location to get the final object'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/LROPostDoubleHeadersFinalAzureHeaderGetDefault
          method: post
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: postDoubleHeadersFinalAzureHeaderGetDefault
        description: >-
          Long running post request, service returns a 202 to the initial request with both Location and Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final object if you support initial Autorest
          behavior.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_49
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_49
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/postasync/retry/succeeded
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRetrySucceeded
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_50
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_50
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/postasync/noretry/succeeded
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncNoRetrySucceeded
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_51
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_51
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/postasync/retry/failed
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRetryFailed
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_52
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_52
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/postasync/retry/canceled
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRetrycanceled
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: LROs
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: LRORetrys
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_53
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_53
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/retryerror/put/201/creating/succeeded/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put201CreatingSucceeded200
        description: >-
          Long running put request, service returns a 500, then a 201 to the initial request, with an entity that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
          ProvisioningState=’Succeeded’
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_54
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_54
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/retryerror/putasync/retry/succeeded
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRelativeRetrySucceeded
        description: 'Long running put request, service returns a 500, then a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/retryerror/delete/provisioning/202/accepted/200/succeeded
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteProvisioning202Accepted200Succeeded
        description: >-
          Long running delete request, service returns a 500, then a  202 to the initial request, with an entity that contains ProvisioningState=’Accepted’.  Polls return this value until the last poll returns a ‘200’ with
          ProvisioningState=’Succeeded’
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/retryerror/delete/202/retry/200
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete202Retry200
        description: 'Long running delete request, service returns a 500, then a 202 to the initial request. Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/retryerror/deleteasync/retry/succeeded
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRelativeRetrySucceeded
        description: 'Long running delete request, service returns a 500, then a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_55
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_55
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/retryerror/post/202/retry/200
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202Retry200
        description: 'Long running post request, service returns a 500, then a 202 to the initial request, with ''Location'' and ''Retry-After'' headers, Polls return a 200 with a response body after success'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_56
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_56
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/retryerror/postasync/retry/succeeded
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRelativeRetrySucceeded
        description: 'Long running post request, service returns a 500, then a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: LRORetrys
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: LROSADs
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_57
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_57
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/put/400
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNonRetry400
        description: 'Long running put request, service returns a 400 to the initial request'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_58
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_58
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/put/201/creating/400
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNonRetry201Creating400
        description: 'Long running put request, service returns a Product with ''ProvisioningState'' = ''Creating'' and 201 response code'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_59
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_59
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/put/201/creating/400/invalidjson
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putNonRetry201Creating400InvalidJson
        description: 'Long running put request, service returns a Product with ''ProvisioningState'' = ''Creating'' and 201 response code'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_60
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_60
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/putasync/retry/400
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRelativeRetry400
        description: 'Long running put request, service returns a 200 with ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/nonretryerror/delete/400
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteNonRetry400
        description: 'Long running delete request, service returns a 400 with an error body'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/nonretryerror/delete/202/retry/400
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete202NonRetry400
        description: 'Long running delete request, service returns a 202 with a location header'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/nonretryerror/deleteasync/retry/400
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRelativeRetry400
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_61
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_61
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/post/400
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postNonRetry400
        description: 'Long running post request, service returns a 400 with no error body'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_62
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_62
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/post/202/retry/400
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202NonRetry400
        description: 'Long running post request, service returns a 202 with a location header'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_63
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_63
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/nonretryerror/postasync/retry/400
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRelativeRetry400
        description: 'Long running post request, service returns a 202 to the initial request Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_64
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_64
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/put/201/noprovisioningstatepayload
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putError201NoProvisioningStatePayload
        description: 'Long running put request, service returns a 201 to the initial request with no payload'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_65
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_65
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/putasync/retry/nostatus
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRelativeRetryNoStatus
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_66
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_66
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/putasync/retry/nostatuspayload
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRelativeRetryNoStatusPayload
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/error/delete/204/nolocation
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete204Succeeded
        description: 'Long running delete request, service returns a 204 to the initial request, indicating success.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/error/deleteasync/retry/nostatus
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRelativeRetryNoStatus
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_67
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_67
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/post/202/nolocation
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202NoLocation
        description: 'Long running post request, service returns a 202 to the initial request, without a location header.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_68
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_68
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/postasync/retry/nopayload
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRelativeRetryNoPayload
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_69
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_69
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/put/200/invalidjson
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '204'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put200InvalidJson
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that is not a valid json'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_70
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_70
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/putasync/retry/invalidheader
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRelativeRetryInvalidHeader
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. The endpoint indicated in the Azure-AsyncOperation header is invalid.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_71
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_71
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/putasync/retry/invalidjsonpolling
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRelativeRetryInvalidJsonPolling
        description: 'Long running put request, service returns a 200 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/error/delete/202/retry/invalidheader
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: delete202RetryInvalidHeader
        description: 'Long running delete request, service returns a 202 to the initial request receing a reponse with an invalid ''Location'' and ''Retry-After'' headers'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/error/deleteasync/retry/invalidheader
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRelativeRetryInvalidHeader
        description: 'Long running delete request, service returns a 202 to the initial request. The endpoint indicated in the Azure-AsyncOperation header is invalid'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /lro/error/deleteasync/retry/invalidjsonpolling
          method: delete
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
    language: !<!Languages> 
      default:
        name: deleteAsyncRelativeRetryInvalidJsonPolling
        description: 'Long running delete request, service returns a 202 to the initial request. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_72
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_72
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/post/202/retry/invalidheader
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202RetryInvalidHeader
        description: 'Long running post request, service returns a 202 to the initial request, with invalid ''Location'' and ''Retry-After'' headers.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_73
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_73
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/postasync/retry/invalidheader
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRelativeRetryInvalidHeader
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. The endpoint indicated in the Azure-AsyncOperation header is invalid.'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_74
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_74
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/error/postasync/retry/invalidjsonpolling
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRelativeRetryInvalidJsonPolling
        description: 'Long running post request, service returns a 202 to the initial request, with an entity that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: LROSADs
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: LROsCustomHeader
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_75
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_75
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/customheader/putasync/retry/succeeded
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: putAsyncRetrySucceeded
        description: >-
          x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all requests. Long running put request, service returns a 200 to the initial request, with an entity that contains
          ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_76
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_76
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/customheader/put/201/creating/succeeded/200
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '201'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: put201CreatingSucceeded200
        description: >-
          x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all requests. Long running put request, service returns a 201 to the initial request, with an entity that contains
          ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_77
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_77
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/customheader/post/202/retry/200
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: post202Retry200
        description: >-
          x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all requests. Long running post request, service returns a 202 to the initial request, with 'Location' and 'Retry-After' headers, Polls
          return a 200 with a response body after success
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_28
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_78
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-requestBody-name: product
        language: !<!Languages> 
          default:
            name: product
            description: Product to put
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_78
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /lro/customheader/postasync/retry/succeeded
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_2
            header: Azure-AsyncOperation
          - !<!HttpHeader> 
            schema: *ref_2
            header: Location
          - !<!HttpHeader> 
            schema: *ref_37
            header: Retry-After
          statusCodes:
          - '202'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_27
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-long-running-operation: true
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: postAsyncRetrySucceeded
        description: >-
          x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all requests. Long running post request, service returns a 202 to the initial request, with an entity that contains
          ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for operation status
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: LROsCustomHeader
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
