!<!CodeModel> 
info: !<!Info> 
  description: 'Client that can be used to query an index and upload, merge, or delete documents.'
  title: SearchIndexClient
schemas: !<!Schemas> 
  booleans:
    - !<!BooleanSchema> &ref_7
      type: boolean
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: Boolean
          description: ''
      protocol: !<!Protocols> {}
    - !<!BooleanSchema> &ref_41
      type: boolean
      language: !<!Languages> 
        default:
          name: IncludeTotalResultCount
          description: A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation.
      protocol: !<!Protocols> {}
    - !<!BooleanSchema> &ref_68
      type: boolean
      language: !<!Languages> 
        default:
          name: UseFuzzyMatching
          description: >-
            A value indicating whether to use fuzzy matching for the suggestion query. Default is false. When set to true, the query will find suggestions even if there's a substituted or missing character in the search text. While this
            provides a better experience in some scenarios, it comes at a performance cost as fuzzy suggestion searches are slower and consume more resources.
      protocol: !<!Protocols> {}
    - !<!BooleanSchema> &ref_82
      type: boolean
      language: !<!Languages> 
        default:
          name: Succeeded
          description: A value indicating whether the indexing operation succeeded for the document identified by the key.
      protocol: !<!Protocols> {}
    - !<!BooleanSchema> &ref_90
      type: boolean
      language: !<!Languages> 
        default:
          name: UseFuzzyMatching
          description: >-
            A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will autocomplete terms even if there's a substituted or missing character in the search text. While this
            provides a better experience in some scenarios, it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources.
      protocol: !<!Protocols> {}
  numbers:
    - !<!NumberSchema> &ref_114
      type: integer
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      precision: 64
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_15
      type: number
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: ''
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_26
      type: integer
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_38
      type: integer
      precision: 64
      language: !<!Languages> 
        default:
          name: Count
          description: >-
            The total count of results found by the search operation, or null if the count was not requested. If present, the count may be greater than the number of results in this response. This can happen if you use the $top or $skip
            parameters, or if Azure Cognitive Search can't return all the requested documents in a single Search response.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_39
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Coverage
          description: 'A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not specified in the request.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_2
      type: integer
      precision: 64
      language: !<!Languages> 
        default:
          name: Integer
          description: The approximate count of documents falling within the bucket described by this facet.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_47
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: >-
            A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for
            services with only one replica. The default is 100.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_54
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: >-
            The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use skip due to this limitation, consider using orderby on a totally-ordered key and filter
            with a range query instead.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_55
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: >-
            The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a continuation
            token that can be used to issue another Search request for the next page of results.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_57
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Score
          description: The relevance score of the document compared to other documents returned by the query.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_65
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Coverage
          description: 'A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not set in the request.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_71
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: >-
            A number between 0 and 100 indicating the percentage of the index that must be covered by a suggestion query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even
            for services with only one replica. The default is 80.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_76
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: The number of suggestions to retrieve. This must be a value between 1 and 100. The default is 5.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_83
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: >-
            The status code of the indexing operation. Possible values include: 200 for a successful update or delete, 201 for successful document creation, 400 for a malformed input document, 404 for document not found, 409 for a version
            conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_93
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: >-
            A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability
            even for services with only one replica. The default is 80.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_96
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: The number of auto-completed terms to retrieve. This must be a value between 1 and 100. The default is 5.
      protocol: !<!Protocols> {}
  strings:
    - !<!StringSchema> &ref_0
      type: string
      language: !<!Languages> 
        default:
          name: String
          description: simple string
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_12
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: String
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_9
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: Get2ItemsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_13
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: Get4ItemsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_16
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: Get8ItemsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_19
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: Get10ItemsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_21
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: Get12ItemsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_24
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: Get14ItemsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_42
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SearchRequestFacetsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_43
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SearchRequestFilter
          description: The OData $filter expression to apply to the search query.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_44
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: HighlightFields
          description: The comma-separated list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_45
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SearchRequestHighlightPostTag
          description: A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is &lt;/em&gt;.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_46
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SearchRequestHighlightPreTag
          description: A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is &lt;em&gt;.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_48
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: OrderBy
          description: >-
            The comma-separated list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be
            followed by asc to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending by
            document match score. There can be at most 32 $orderby clauses.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_49
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SearchRequestScoringParametersItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_50
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SearchRequestScoringProfile
          description: The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_51
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SearchText
          description: A full-text search query expression; Use "*" or omit this parameter to match all documents.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_52
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SearchRequestSearchFields
          description: >-
            The comma-separated list of field names to which to scope the full-text search. When using fielded search (fieldName:searchExpression) in a full Lucene query, the field names of each fielded search expression take precedence
            over any field names listed in this parameter.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_53
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SearchRequestSelect
          description: 'The comma-separated list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included.'
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_4
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SearchResultSearchHighlightsItemsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_59
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: NextLink
          description: >-
            Continuation URL returned when Azure Cognitive Search can't return all the requested results in a single Search response. You can use this URL to formulate another GET or POST Search request to get the next part of the search
            response. Make sure to use the same verb (GET or POST) as the request that produced this response.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_102
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: Get1ItemsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_29
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: Get7ItemsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_32
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: Get9ItemsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_64
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: Text
          description: The text of the suggestion result.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_67
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SuggestRequestFilter
          description: An OData expression that filters the documents considered for suggestions.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_69
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SuggestRequestHighlightPostTag
          description: 'A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting of suggestions is disabled.'
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_70
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SuggestRequestHighlightPreTag
          description: 'A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting of suggestions is disabled.'
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_72
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SearchText
          description: 'The search text to use to suggest documents. Must be at least 1 character, and no more than 100 characters.'
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_73
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SuggestRequestSearchFields
          description: The comma-separated list of field names to search for the specified search text. Target fields must be included in the specified suggester.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_74
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SuggestRequestSelect
          description: 'The comma-separated list of fields to retrieve. If unspecified, only the key field will be included in the results.'
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_75
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SuggestRequestSuggesterName
          description: The name of the suggester as specified in the suggesters collection that's part of the index definition.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_80
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: IndexingResultKey
          description: The key of a document that was in the indexing request.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_81
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: IndexingResultErrorMessage
          description: The error message explaining why the indexing operation failed for the document identified by the key; null if indexing succeeded.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_85
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: AutocompleteItemText
          description: The completed term.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_86
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: AutocompleteItemQueryPlusText
          description: The query along with the completed term.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_88
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: SearchText
          description: The search text on which to base autocomplete results.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_89
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: AutocompleteRequestFilter
          description: An OData expression that filters the documents used to produce completed terms for the Autocomplete result.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_91
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: AutocompleteRequestHighlightPostTag
          description: 'A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting is disabled.'
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_92
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: AutocompleteRequestHighlightPreTag
          description: 'A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting is disabled.'
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_94
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: AutocompleteRequestSearchFields
          description: The comma-separated list of field names to consider when querying for auto-completed terms. Target fields must be included in the specified suggester.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_95
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      language: !<!Languages> 
        default:
          name: AutocompleteRequestSuggesterName
          description: The name of the suggester as specified in the suggesters collection that's part of the index definition.
      protocol: !<!Protocols> {}
    - !<!StringSchema> 
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      defaultValue: search.windows.net
      language: !<!Languages> 
        default:
          name: String
          description: ''
      protocol: !<!Protocols> {}
  sealedChoices:
    - !<!SealedChoiceSchema> &ref_18
      choices:
        - !<!ChoiceValue> 
          value: simple
          language:
            default:
              name: Simple
              description: ''
        - !<!ChoiceValue> 
          value: full
          language:
            default:
              name: Full
              description: ''
      type: sealed-choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: QueryType
          description: ''
      protocol: !<!Protocols> {}
    - !<!SealedChoiceSchema> &ref_23
      choices:
        - !<!ChoiceValue> 
          value: any
          language:
            default:
              name: Any
              description: ''
        - !<!ChoiceValue> 
          value: all
          language:
            default:
              name: All
              description: ''
      type: sealed-choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: SearchMode
          description: ''
      protocol: !<!Protocols> {}
    - !<!SealedChoiceSchema> &ref_78
      choices:
        - !<!ChoiceValue> 
          value: upload
          language:
            default:
              name: Upload
              description: ''
        - !<!ChoiceValue> 
          value: merge
          language:
            default:
              name: Merge
              description: ''
        - !<!ChoiceValue> 
          value: mergeOrUpload
          language:
            default:
              name: MergeOrUpload
              description: ''
        - !<!ChoiceValue> 
          value: delete
          language:
            default:
              name: Delete
              description: ''
      type: sealed-choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: IndexActionType
          description: The operation to perform on a document in an indexing batch.
      protocol: !<!Protocols> {}
    - !<!SealedChoiceSchema> &ref_34
      choices:
        - !<!ChoiceValue> 
          value: oneTerm
          language:
            default:
              name: OneTerm
              description: ''
        - !<!ChoiceValue> 
          value: twoTerms
          language:
            default:
              name: TwoTerms
              description: ''
        - !<!ChoiceValue> 
          value: oneTermWithContext
          language:
            default:
              name: OneTermWithContext
              description: ''
      type: sealed-choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: AutocompleteMode
          description: ''
      protocol: !<!Protocols> {}
  constants:
    - !<!ConstantSchema> &ref_107
      type: constant
      value: !<!ConstantValue> 
        value: '2019-05-06'
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: ApiVersion20190506
          description: Api Version (2019-05-06)
      protocol: !<!Protocols> {}
  dictionaries:
    - !<!DictionarySchema> &ref_1
      type: dictionary
      elementType: !<!AnySchema> &ref_3
        type: any
        language: !<!Languages> 
          default:
            name: any
            description: Any object
        protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: FacetResult
          description: A single bucket of a facet query result. Reports the number of documents with a field value falling within a particular range or having a particular value or interval.
      protocol: !<!Protocols> {}
    - !<!DictionarySchema> &ref_40
      type: dictionary
      elementType: !<!ArraySchema> &ref_97
        type: array
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-05-06'
        elementType: !<!ObjectSchema> &ref_60
          type: object
          apiVersions:
            - !<!ApiVersion> 
              version: '2019-05-06'
          parents: !<!Relations> 
            all:
              - *ref_1
            immediate:
              - *ref_1
          properties:
            - !<!Property> 
              schema: *ref_2
              readOnly: true
              serializedName: count
              language: !<!Languages> 
                default:
                  name: count
                  description: The approximate count of documents falling within the bucket described by this facet.
              protocol: !<!Protocols> {}
          serializationFormats:
            - json
          usage:
            - output
          language: !<!Languages> 
            default:
              name: FacetResult
              description: A single bucket of a facet query result. Reports the number of documents with a field value falling within a particular range or having a particular value or interval.
              namespace: ''
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: ArrayOfFacetResult
            description: Array of FacetResult
        protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: Facets
          description: 'The facet query results for the search operation, organized as a collection of buckets for each faceted field; null if the query did not include any facet expressions.'
      protocol: !<!Protocols> {}
    - !<!DictionarySchema> &ref_56
      type: dictionary
      elementType: *ref_3
      language: !<!Languages> 
        default:
          name: SearchResult
          description: 'Contains a document found by a search query, plus associated metadata.'
      protocol: !<!Protocols> {}
    - !<!DictionarySchema> &ref_58
      type: dictionary
      elementType: !<!ArraySchema> &ref_100
        type: array
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-05-06'
        elementType: *ref_4
        language: !<!Languages> 
          default:
            name: ArrayOfSearchResultSearchHighlightsItemsItem
            description: Array of SearchResultSearchHighlightsItemsItem
        protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: Highlights
          description: 'Text fragments from the document that indicate the matching search terms, organized by each applicable field; null if hit highlighting was not enabled for the query.'
      protocol: !<!Protocols> {}
    - !<!DictionarySchema> &ref_63
      type: dictionary
      elementType: *ref_3
      language: !<!Languages> 
        default:
          name: SuggestResult
          description: 'A result containing a document found by a suggestion query, plus associated metadata.'
      protocol: !<!Protocols> {}
    - !<!DictionarySchema> &ref_77
      type: dictionary
      elementType: *ref_3
      language: !<!Languages> 
        default:
          name: IndexAction
          description: Represents an index action that operates on a document.
      protocol: !<!Protocols> {}
  any:
    - *ref_3
  groups:
    - !<!GroupSchema> &ref_6
      type: group
      properties:
        - !<!GroupProperty> 
          schema: !<!UuidSchema> &ref_5
            type: uuid
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            language: !<!Languages> 
              default:
                name: Uuid
                description: ''
            protocol: !<!Protocols> {}
          originalParameter:
            - !<!Parameter> &ref_111
              schema: *ref_5
              groupedBy: !<!Parameter> &ref_113
                schema: *ref_6
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: searchRequestOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              extensions:
                x-ms-client-request-id: true
              language: !<!Languages> 
                default:
                  name: _clientRequestId
                  description: The tracking ID sent with the request to help with debugging.
                  serializedName: client-request-id
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: header
            - !<!Parameter> &ref_131
              schema: *ref_5
              groupedBy: !<!Parameter> &ref_132
                schema: *ref_6
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: searchRequestOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              extensions:
                x-ms-client-request-id: true
              language: !<!Languages> 
                default:
                  name: _clientRequestId
                  description: The tracking ID sent with the request to help with debugging.
                  serializedName: client-request-id
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: header
            - !<!Parameter> &ref_135
              schema: *ref_5
              groupedBy: !<!Parameter> &ref_136
                schema: *ref_6
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: searchRequestOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              extensions:
                x-ms-client-request-id: true
              language: !<!Languages> 
                default:
                  name: _clientRequestId
                  description: The tracking ID sent with the request to help with debugging.
                  serializedName: client-request-id
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: header
            - !<!Parameter> &ref_139
              schema: *ref_5
              groupedBy: !<!Parameter> &ref_140
                schema: *ref_6
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: searchRequestOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              extensions:
                x-ms-client-request-id: true
              language: !<!Languages> 
                default:
                  name: _clientRequestId
                  description: The tracking ID sent with the request to help with debugging.
                  serializedName: client-request-id
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: header
            - !<!Parameter> &ref_152
              schema: *ref_5
              groupedBy: !<!Parameter> &ref_153
                schema: *ref_6
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: searchRequestOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              extensions:
                x-ms-client-request-id: true
              language: !<!Languages> 
                default:
                  name: _clientRequestId
                  description: The tracking ID sent with the request to help with debugging.
                  serializedName: client-request-id
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: header
            - !<!Parameter> &ref_157
              schema: *ref_5
              groupedBy: !<!Parameter> &ref_159
                schema: *ref_6
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: searchRequestOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              extensions:
                x-ms-client-request-id: true
              language: !<!Languages> 
                default:
                  name: _clientRequestId
                  description: The tracking ID sent with the request to help with debugging.
                  serializedName: client-request-id
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: header
            - !<!Parameter> &ref_161
              schema: *ref_5
              groupedBy: !<!Parameter> &ref_165
                schema: *ref_6
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: searchRequestOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              extensions:
                x-ms-client-request-id: true
              language: !<!Languages> 
                default:
                  name: _clientRequestId
                  description: The tracking ID sent with the request to help with debugging.
                  serializedName: client-request-id
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: header
            - !<!Parameter> &ref_168
              schema: *ref_5
              groupedBy: !<!Parameter> &ref_177
                schema: *ref_6
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: searchRequestOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              extensions:
                x-ms-client-request-id: true
              language: !<!Languages> 
                default:
                  name: _clientRequestId
                  description: The tracking ID sent with the request to help with debugging.
                  serializedName: client-request-id
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: header
            - !<!Parameter> &ref_181
              schema: *ref_5
              groupedBy: !<!Parameter> &ref_183
                schema: *ref_6
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: searchRequestOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              extensions:
                x-ms-client-request-id: true
              language: !<!Languages> 
                default:
                  name: _clientRequestId
                  description: The tracking ID sent with the request to help with debugging.
                  serializedName: client-request-id
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: header
          serializedName: client-request-id
          language: !<!Languages> 
            default:
              name: clientRequestId
              description: The tracking ID sent with the request to help with debugging.
          protocol: !<!Protocols> {}
      usage:
        - input
      language: !<!Languages> 
        default:
          name: SearchRequestOptions
          description: Parameter group
      protocol: !<!Protocols> {}
    - !<!GroupSchema> &ref_8
      type: group
      properties:
        - !<!GroupProperty> 
          schema: *ref_7
          originalParameter:
            - !<!Parameter> &ref_115
              schema: *ref_7
              groupedBy: !<!Parameter> &ref_11
                schema: *ref_8
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: searchParameters
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _includeTotalResultCount
                  description: A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation.
                  serializedName: $count
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: IncludeTotalResultCount
          language: !<!Languages> 
            default:
              name: includeTotalResultCount
              description: A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: !<!ArraySchema> &ref_10
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: *ref_9
            language: !<!Languages> 
              default:
                name: ArrayOfGet2ItemsItem
                description: Array of Get2ItemsItem
            protocol: !<!Protocols> {}
          originalParameter:
            - !<!Parameter> &ref_116
              schema: *ref_10
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _facets
                  description: 'The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs.'
                  serializedName: facet
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  explode: true
                  in: query
                  style: form
          serializedName: Facets
          language: !<!Languages> 
            default:
              name: facets
              description: 'The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs.'
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_12
          originalParameter:
            - !<!Parameter> &ref_117
              schema: *ref_12
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _filter
                  description: The OData $filter expression to apply to the search query.
                  serializedName: $filter
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: $filter
          language: !<!Languages> 
            default:
              name: filter
              description: The OData $filter expression to apply to the search query.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: !<!ArraySchema> &ref_14
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: *ref_13
            language: !<!Languages> 
              default:
                name: ArrayOfGet4ItemsItem
                description: Array of Get4ItemsItem
            protocol: !<!Protocols> {}
          originalParameter:
            - !<!Parameter> &ref_118
              schema: *ref_14
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _highlightFields
                  description: The list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting.
                  serializedName: highlight
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: HighlightFields
          language: !<!Languages> 
            default:
              name: highlightFields
              description: The list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_12
          originalParameter:
            - !<!Parameter> &ref_119
              schema: *ref_12
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _highlightPostTag
                  description: A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is &lt;/em&gt;.
                  serializedName: highlightPostTag
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: highlightPostTag
          language: !<!Languages> 
            default:
              name: highlightPostTag
              description: A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is &lt;/em&gt;.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_12
          originalParameter:
            - !<!Parameter> &ref_120
              schema: *ref_12
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _highlightPreTag
                  description: A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is &lt;em&gt;.
                  serializedName: highlightPreTag
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: highlightPreTag
          language: !<!Languages> 
            default:
              name: highlightPreTag
              description: A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is &lt;em&gt;.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_15
          originalParameter:
            - !<!Parameter> &ref_121
              schema: *ref_15
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _minimumCoverage
                  description: >-
                    A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability
                    even for services with only one replica. The default is 100.
                  serializedName: minimumCoverage
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: minimumCoverage
          language: !<!Languages> 
            default:
              name: minimumCoverage
              description: >-
                A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even
                for services with only one replica. The default is 100.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: !<!ArraySchema> &ref_17
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: *ref_16
            language: !<!Languages> 
              default:
                name: ArrayOfGet8ItemsItem
                description: Array of Get8ItemsItem
            protocol: !<!Protocols> {}
          originalParameter:
            - !<!Parameter> &ref_122
              schema: *ref_17
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _orderBy
                  description: >-
                    The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by
                    asc to indicate ascending, and desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no OrderBy is specified, the default sort order is descending by
                    document match score. There can be at most 32 $orderby clauses.
                  serializedName: $orderby
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: OrderBy
          language: !<!Languages> 
            default:
              name: orderBy
              description: >-
                The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc
                to indicate ascending, and desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no OrderBy is specified, the default sort order is descending by document match
                score. There can be at most 32 $orderby clauses.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_18
          originalParameter:
            - !<!Parameter> &ref_123
              schema: *ref_18
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _queryType
                  description: A value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax.
                  serializedName: queryType
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: queryType
          language: !<!Languages> 
            default:
              name: queryType
              description: A value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: !<!ArraySchema> &ref_20
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: *ref_19
            language: !<!Languages> 
              default:
                name: ArrayOfGet10ItemsItem
                description: Array of Get10ItemsItem
            protocol: !<!Protocols> {}
          originalParameter:
            - !<!Parameter> &ref_124
              schema: *ref_20
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _scoringParameters
                  description: >-
                    The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called
                    'mylocation' the parameter string would be "mylocation--122.2,44.8" (without the quotes).
                  serializedName: scoringParameter
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  explode: true
                  in: query
                  style: form
          serializedName: ScoringParameters
          language: !<!Languages> 
            default:
              name: scoringParameters
              description: >-
                The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called 'mylocation'
                the parameter string would be "mylocation--122.2,44.8" (without the quotes).
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_12
          originalParameter:
            - !<!Parameter> &ref_125
              schema: *ref_12
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _scoringProfile
                  description: The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.
                  serializedName: scoringProfile
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: scoringProfile
          language: !<!Languages> 
            default:
              name: scoringProfile
              description: The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: !<!ArraySchema> &ref_22
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: *ref_21
            language: !<!Languages> 
              default:
                name: ArrayOfGet12ItemsItem
                description: Array of Get12ItemsItem
            protocol: !<!Protocols> {}
          originalParameter:
            - !<!Parameter> &ref_126
              schema: *ref_22
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _searchFields
                  description: >-
                    The list of field names to which to scope the full-text search. When using fielded search (fieldName:searchExpression) in a full Lucene query, the field names of each fielded search expression take precedence over any
                    field names listed in this parameter.
                  serializedName: searchFields
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: searchFields
          language: !<!Languages> 
            default:
              name: searchFields
              description: >-
                The list of field names to which to scope the full-text search. When using fielded search (fieldName:searchExpression) in a full Lucene query, the field names of each fielded search expression take precedence over any field
                names listed in this parameter.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_23
          originalParameter:
            - !<!Parameter> &ref_127
              schema: *ref_23
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _searchMode
                  description: A value that specifies whether any or all of the search terms must be matched in order to count the document as a match.
                  serializedName: searchMode
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: searchMode
          language: !<!Languages> 
            default:
              name: searchMode
              description: A value that specifies whether any or all of the search terms must be matched in order to count the document as a match.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: !<!ArraySchema> &ref_25
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: *ref_24
            language: !<!Languages> 
              default:
                name: ArrayOfGet14ItemsItem
                description: Array of Get14ItemsItem
            protocol: !<!Protocols> {}
          originalParameter:
            - !<!Parameter> &ref_128
              schema: *ref_25
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _select
                  description: 'The list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included.'
                  serializedName: $select
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: $select
          language: !<!Languages> 
            default:
              name: select
              description: 'The list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included.'
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_26
          originalParameter:
            - !<!Parameter> &ref_129
              schema: *ref_26
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _skip
                  description: >-
                    The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use $skip due to this limitation, consider using $orderby on a totally-ordered key
                    and $filter with a range query instead.
                  serializedName: $skip
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: $skip
          language: !<!Languages> 
            default:
              name: skip
              description: >-
                The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use $skip due to this limitation, consider using $orderby on a totally-ordered key and
                $filter with a range query instead.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_26
          originalParameter:
            - !<!Parameter> &ref_130
              schema: *ref_26
              groupedBy: *ref_11
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _top
                  description: >-
                    The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a
                    continuation token that can be used to issue another Search request for the next page of results.
                  serializedName: $top
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: $top
          language: !<!Languages> 
            default:
              name: top
              description: >-
                The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a
                continuation token that can be used to issue another Search request for the next page of results.
          protocol: !<!Protocols> {}
      usage:
        - input
      language: !<!Languages> 
        default:
          name: SearchParameters
          description: Parameter group
      protocol: !<!Protocols> {}
    - !<!GroupSchema> &ref_27
      type: group
      properties:
        - !<!GroupProperty> 
          schema: *ref_12
          originalParameter:
            - !<!Parameter> &ref_143
              schema: *ref_12
              groupedBy: !<!Parameter> &ref_28
                schema: *ref_27
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: suggestParameters
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _filter
                  description: An OData expression that filters the documents considered for suggestions.
                  serializedName: $filter
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: $filter
          language: !<!Languages> 
            default:
              name: filter
              description: An OData expression that filters the documents considered for suggestions.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_7
          originalParameter:
            - !<!Parameter> &ref_144
              schema: *ref_7
              groupedBy: *ref_28
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _useFuzzyMatching
                  description: >-
                    A value indicating whether to use fuzzy matching for the suggestions query. Default is false. When set to true, the query will find terms even if there's a substituted or missing character in the search text. While this
                    provides a better experience in some scenarios, it comes at a performance cost as fuzzy suggestions queries are slower and consume more resources.
                  serializedName: fuzzy
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: UseFuzzyMatching
          language: !<!Languages> 
            default:
              name: useFuzzyMatching
              description: >-
                A value indicating whether to use fuzzy matching for the suggestions query. Default is false. When set to true, the query will find terms even if there's a substituted or missing character in the search text. While this
                provides a better experience in some scenarios, it comes at a performance cost as fuzzy suggestions queries are slower and consume more resources.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_12
          originalParameter:
            - !<!Parameter> &ref_145
              schema: *ref_12
              groupedBy: *ref_28
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _highlightPostTag
                  description: 'A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting of suggestions is disabled.'
                  serializedName: highlightPostTag
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: highlightPostTag
          language: !<!Languages> 
            default:
              name: highlightPostTag
              description: 'A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting of suggestions is disabled.'
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_12
          originalParameter:
            - !<!Parameter> &ref_146
              schema: *ref_12
              groupedBy: *ref_28
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _highlightPreTag
                  description: 'A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting of suggestions is disabled.'
                  serializedName: highlightPreTag
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: highlightPreTag
          language: !<!Languages> 
            default:
              name: highlightPreTag
              description: 'A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting of suggestions is disabled.'
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_15
          originalParameter:
            - !<!Parameter> &ref_147
              schema: *ref_15
              groupedBy: *ref_28
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _minimumCoverage
                  description: >-
                    A number between 0 and 100 indicating the percentage of the index that must be covered by a suggestions query in order for the query to be reported as a success. This parameter can be useful for ensuring search
                    availability even for services with only one replica. The default is 80.
                  serializedName: minimumCoverage
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: minimumCoverage
          language: !<!Languages> 
            default:
              name: minimumCoverage
              description: >-
                A number between 0 and 100 indicating the percentage of the index that must be covered by a suggestions query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability
                even for services with only one replica. The default is 80.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: !<!ArraySchema> &ref_30
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: *ref_29
            language: !<!Languages> 
              default:
                name: ArrayOfGet7ItemsItem
                description: Array of Get7ItemsItem
            protocol: !<!Protocols> {}
          originalParameter:
            - !<!Parameter> &ref_148
              schema: *ref_30
              groupedBy: *ref_28
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _orderBy
                  description: >-
                    The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by
                    asc to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending by
                    document match score. There can be at most 32 $orderby clauses.
                  serializedName: $orderby
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: OrderBy
          language: !<!Languages> 
            default:
              name: orderBy
              description: >-
                The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc
                to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending by document match
                score. There can be at most 32 $orderby clauses.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: !<!ArraySchema> &ref_31
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: *ref_12
            language: !<!Languages> 
              default:
                name: ArrayOfString
                description: Array of String
            protocol: !<!Protocols> {}
          originalParameter:
            - !<!Parameter> &ref_149
              schema: *ref_31
              groupedBy: *ref_28
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _searchFields
                  description: The list of field names to search for the specified search text. Target fields must be included in the specified suggester.
                  serializedName: searchFields
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: searchFields
          language: !<!Languages> 
            default:
              name: searchFields
              description: The list of field names to search for the specified search text. Target fields must be included in the specified suggester.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: !<!ArraySchema> &ref_33
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: *ref_32
            language: !<!Languages> 
              default:
                name: ArrayOfGet9ItemsItem
                description: Array of Get9ItemsItem
            protocol: !<!Protocols> {}
          originalParameter:
            - !<!Parameter> &ref_150
              schema: *ref_33
              groupedBy: *ref_28
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _select
                  description: 'The list of fields to retrieve. If unspecified, only the key field will be included in the results.'
                  serializedName: $select
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: $select
          language: !<!Languages> 
            default:
              name: select
              description: 'The list of fields to retrieve. If unspecified, only the key field will be included in the results.'
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_26
          originalParameter:
            - !<!Parameter> &ref_151
              schema: *ref_26
              groupedBy: *ref_28
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _top
                  description: The number of suggestions to retrieve. The value must be a number between 1 and 100. The default is 5.
                  serializedName: $top
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: $top
          language: !<!Languages> 
            default:
              name: top
              description: The number of suggestions to retrieve. The value must be a number between 1 and 100. The default is 5.
          protocol: !<!Protocols> {}
      usage:
        - input
      language: !<!Languages> 
        default:
          name: SuggestParameters
          description: Parameter group
      protocol: !<!Protocols> {}
    - !<!GroupSchema> &ref_35
      type: group
      properties:
        - !<!GroupProperty> 
          schema: *ref_34
          originalParameter:
            - !<!Parameter> &ref_169
              schema: *ref_34
              groupedBy: !<!Parameter> &ref_36
                schema: *ref_35
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: autocompleteParameters
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _autocompleteMode
                  description: Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context while producing auto-completed terms.
                  serializedName: autocompleteMode
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: autocompleteMode
          language: !<!Languages> 
            default:
              name: autocompleteMode
              description: Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context while producing auto-completed terms.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_12
          originalParameter:
            - !<!Parameter> &ref_170
              schema: *ref_12
              groupedBy: *ref_36
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _filter
                  description: An OData expression that filters the documents used to produce completed terms for the Autocomplete result.
                  serializedName: $filter
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: $filter
          language: !<!Languages> 
            default:
              name: filter
              description: An OData expression that filters the documents used to produce completed terms for the Autocomplete result.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_7
          originalParameter:
            - !<!Parameter> &ref_171
              schema: *ref_7
              groupedBy: *ref_36
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _useFuzzyMatching
                  description: >-
                    A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will find terms even if there's a substituted or missing character in the search text. While this
                    provides a better experience in some scenarios, it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources.
                  serializedName: fuzzy
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: UseFuzzyMatching
          language: !<!Languages> 
            default:
              name: useFuzzyMatching
              description: >-
                A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will find terms even if there's a substituted or missing character in the search text. While this
                provides a better experience in some scenarios, it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_12
          originalParameter:
            - !<!Parameter> &ref_172
              schema: *ref_12
              groupedBy: *ref_36
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _highlightPostTag
                  description: 'A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting is disabled.'
                  serializedName: highlightPostTag
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: highlightPostTag
          language: !<!Languages> 
            default:
              name: highlightPostTag
              description: 'A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting is disabled.'
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_12
          originalParameter:
            - !<!Parameter> &ref_173
              schema: *ref_12
              groupedBy: *ref_36
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _highlightPreTag
                  description: 'A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting is disabled.'
                  serializedName: highlightPreTag
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: highlightPreTag
          language: !<!Languages> 
            default:
              name: highlightPreTag
              description: 'A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting is disabled.'
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_15
          originalParameter:
            - !<!Parameter> &ref_174
              schema: *ref_15
              groupedBy: *ref_36
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _minimumCoverage
                  description: >-
                    A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search
                    availability even for services with only one replica. The default is 80.
                  serializedName: minimumCoverage
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: minimumCoverage
          language: !<!Languages> 
            default:
              name: minimumCoverage
              description: >-
                A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search
                availability even for services with only one replica. The default is 80.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: !<!ArraySchema> &ref_37
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: *ref_12
            language: !<!Languages> 
              default:
                name: ArrayOfString
                description: Array of String
            protocol: !<!Protocols> {}
          originalParameter:
            - !<!Parameter> &ref_175
              schema: *ref_37
              groupedBy: *ref_36
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _searchFields
                  description: The list of field names to consider when querying for auto-completed terms. Target fields must be included in the specified suggester.
                  serializedName: searchFields
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: searchFields
          language: !<!Languages> 
            default:
              name: searchFields
              description: The list of field names to consider when querying for auto-completed terms. Target fields must be included in the specified suggester.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_26
          originalParameter:
            - !<!Parameter> &ref_176
              schema: *ref_26
              groupedBy: *ref_36
              implementation: Method
              language: !<!Languages> 
                default:
                  name: _top
                  description: The number of auto-completed terms to retrieve. This must be a value between 1 and 100. The default is 5.
                  serializedName: $top
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: $top
          language: !<!Languages> 
            default:
              name: top
              description: The number of auto-completed terms to retrieve. This must be a value between 1 and 100. The default is 5.
          protocol: !<!Protocols> {}
      usage:
        - input
      language: !<!Languages> 
        default:
          name: AutocompleteParameters
          description: Parameter group
      protocol: !<!Protocols> {}
  uuids:
    - *ref_5
  objects:
    - !<!ObjectSchema> &ref_134
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      properties:
        - !<!Property> 
          schema: *ref_38
          readOnly: true
          serializedName: '@odata.count'
          language: !<!Languages> 
            default:
              name: count
              description: >-
                The total count of results found by the search operation, or null if the count was not requested. If present, the count may be greater than the number of results in this response. This can happen if you use the $top or $skip
                parameters, or if Azure Cognitive Search can't return all the requested documents in a single Search response.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_39
          readOnly: true
          serializedName: '@search.coverage'
          language: !<!Languages> 
            default:
              name: coverage
              description: 'A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not specified in the request.'
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_40
          readOnly: true
          serializedName: '@search.facets'
          language: !<!Languages> 
            default:
              name: facets
              description: 'The facet query results for the search operation, organized as a collection of buckets for each faceted field; null if the query did not include any facet expressions.'
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_61
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            properties:
              - !<!Property> 
                schema: *ref_41
                serializedName: count
                language: !<!Languages> 
                  default:
                    name: includeTotalResultCount
                    description: A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: !<!ArraySchema> &ref_98
                  type: array
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '2019-05-06'
                  elementType: *ref_42
                  language: !<!Languages> 
                    default:
                      name: SearchRequestFacets
                      description: 'The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs.'
                  protocol: !<!Protocols> {}
                serializedName: facets
                language: !<!Languages> 
                  default:
                    name: facets
                    description: 'The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs.'
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_43
                serializedName: filter
                language: !<!Languages> 
                  default:
                    name: filter
                    description: The OData $filter expression to apply to the search query.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_44
                serializedName: highlight
                language: !<!Languages> 
                  default:
                    name: highlightFields
                    description: The comma-separated list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_45
                serializedName: highlightPostTag
                language: !<!Languages> 
                  default:
                    name: highlightPostTag
                    description: A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is &lt;/em&gt;.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_46
                serializedName: highlightPreTag
                language: !<!Languages> 
                  default:
                    name: highlightPreTag
                    description: A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is &lt;em&gt;.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_47
                serializedName: minimumCoverage
                language: !<!Languages> 
                  default:
                    name: minimumCoverage
                    description: >-
                      A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability
                      even for services with only one replica. The default is 100.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_48
                serializedName: orderby
                language: !<!Languages> 
                  default:
                    name: orderBy
                    description: >-
                      The comma-separated list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression
                      can be followed by asc to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is
                      descending by document match score. There can be at most 32 $orderby clauses.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_18
                serializedName: queryType
                language: !<!Languages> 
                  default:
                    name: queryType
                    description: A value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: !<!ArraySchema> &ref_99
                  type: array
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '2019-05-06'
                  elementType: *ref_49
                  language: !<!Languages> 
                    default:
                      name: SearchRequestScoringParameters
                      description: >-
                        The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called
                        'mylocation' the parameter string would be "mylocation--122.2,44.8" (without the quotes).
                  protocol: !<!Protocols> {}
                serializedName: scoringParameters
                language: !<!Languages> 
                  default:
                    name: scoringParameters
                    description: >-
                      The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called
                      'mylocation' the parameter string would be "mylocation--122.2,44.8" (without the quotes).
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_50
                serializedName: scoringProfile
                language: !<!Languages> 
                  default:
                    name: scoringProfile
                    description: The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_51
                serializedName: search
                language: !<!Languages> 
                  default:
                    name: searchText
                    description: A full-text search query expression; Use "*" or omit this parameter to match all documents.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_52
                serializedName: searchFields
                language: !<!Languages> 
                  default:
                    name: searchFields
                    description: >-
                      The comma-separated list of field names to which to scope the full-text search. When using fielded search (fieldName:searchExpression) in a full Lucene query, the field names of each fielded search expression take
                      precedence over any field names listed in this parameter.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_23
                serializedName: searchMode
                language: !<!Languages> 
                  default:
                    name: searchMode
                    description: A value that specifies whether any or all of the search terms must be matched in order to count the document as a match.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_53
                serializedName: select
                language: !<!Languages> 
                  default:
                    name: select
                    description: 'The comma-separated list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included.'
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_54
                serializedName: skip
                language: !<!Languages> 
                  default:
                    name: skip
                    description: >-
                      The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use skip due to this limitation, consider using orderby on a totally-ordered key
                      and filter with a range query instead.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_55
                serializedName: top
                language: !<!Languages> 
                  default:
                    name: top
                    description: >-
                      The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a
                      continuation token that can be used to issue another Search request for the next page of results.
                protocol: !<!Protocols> {}
            serializationFormats:
              - json
            usage:
              - input
              - output
            language: !<!Languages> 
              default:
                name: SearchRequest
                description: 'Parameters for filtering, sorting, faceting, paging, and other search query behaviors.'
                namespace: ''
            protocol: !<!Protocols> {}
          readOnly: true
          serializedName: '@search.nextPageParameters'
          language: !<!Languages> 
            default:
              name: nextPageParameters
              description: >-
                Continuation JSON payload returned when Azure Cognitive Search can't return all the requested results in a single Search response. You can use this JSON along with @odata.nextLink to formulate another POST Search request to
                get the next part of the search response.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ArraySchema> &ref_101
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: !<!ObjectSchema> &ref_62
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '2019-05-06'
              parents: !<!Relations> 
                all:
                  - *ref_56
                immediate:
                  - *ref_56
              properties:
                - !<!Property> 
                  schema: *ref_57
                  nullable: false
                  readOnly: true
                  serializedName: '@search.score'
                  language: !<!Languages> 
                    default:
                      name: score
                      description: The relevance score of the document compared to other documents returned by the query.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_58
                  readOnly: true
                  serializedName: '@search.highlights'
                  language: !<!Languages> 
                    default:
                      name: highlights
                      description: 'Text fragments from the document that indicate the matching search terms, organized by each applicable field; null if hit highlighting was not enabled for the query.'
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: SearchResult
                  description: 'Contains a document found by a search query, plus associated metadata.'
                  namespace: ''
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: Results
                description: The sequence of results returned by the query.
            protocol: !<!Protocols> {}
          readOnly: true
          serializedName: value
          language: !<!Languages> 
            default:
              name: results
              description: The sequence of results returned by the query.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_59
          readOnly: true
          serializedName: '@odata.nextLink'
          language: !<!Languages> 
            default:
              name: nextLink
              description: >-
                Continuation URL returned when Azure Cognitive Search can't return all the requested results in a single Search response. You can use this URL to formulate another GET or POST Search request to get the next part of the
                search response. Make sure to use the same verb (GET or POST) as the request that produced this response.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: DocumentSearchResult
          description: Response containing search results from an index.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_60
    - *ref_61
    - *ref_62
    - !<!ObjectSchema> &ref_156
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_103
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: !<!ObjectSchema> &ref_66
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '2019-05-06'
              parents: !<!Relations> 
                all:
                  - *ref_63
                immediate:
                  - *ref_63
              properties:
                - !<!Property> 
                  schema: *ref_64
                  readOnly: true
                  serializedName: '@search.text'
                  language: !<!Languages> 
                    default:
                      name: text
                      description: The text of the suggestion result.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: SuggestResult
                  description: 'A result containing a document found by a suggestion query, plus associated metadata.'
                  namespace: ''
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: Results
                description: The sequence of results returned by the query.
            protocol: !<!Protocols> {}
          readOnly: true
          serializedName: value
          language: !<!Languages> 
            default:
              name: results
              description: The sequence of results returned by the query.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_65
          readOnly: true
          serializedName: '@search.coverage'
          language: !<!Languages> 
            default:
              name: coverage
              description: 'A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not set in the request.'
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: DocumentSuggestResult
          description: Response containing suggestion query results from an index.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_66
    - !<!ObjectSchema> &ref_158
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      properties:
        - !<!Property> 
          schema: *ref_67
          serializedName: filter
          language: !<!Languages> 
            default:
              name: filter
              description: An OData expression that filters the documents considered for suggestions.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_68
          serializedName: fuzzy
          language: !<!Languages> 
            default:
              name: useFuzzyMatching
              description: >-
                A value indicating whether to use fuzzy matching for the suggestion query. Default is false. When set to true, the query will find suggestions even if there's a substituted or missing character in the search text. While this
                provides a better experience in some scenarios, it comes at a performance cost as fuzzy suggestion searches are slower and consume more resources.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_69
          serializedName: highlightPostTag
          language: !<!Languages> 
            default:
              name: highlightPostTag
              description: 'A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting of suggestions is disabled.'
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_70
          serializedName: highlightPreTag
          language: !<!Languages> 
            default:
              name: highlightPreTag
              description: 'A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting of suggestions is disabled.'
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_71
          serializedName: minimumCoverage
          language: !<!Languages> 
            default:
              name: minimumCoverage
              description: >-
                A number between 0 and 100 indicating the percentage of the index that must be covered by a suggestion query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability
                even for services with only one replica. The default is 80.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_48
          serializedName: orderby
          language: !<!Languages> 
            default:
              name: orderBy
              description: >-
                The comma-separated list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be
                followed by asc to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending
                by document match score. There can be at most 32 $orderby clauses.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_72
          serializedName: search
          language: !<!Languages> 
            default:
              name: searchText
              description: 'The search text to use to suggest documents. Must be at least 1 character, and no more than 100 characters.'
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_73
          serializedName: searchFields
          language: !<!Languages> 
            default:
              name: searchFields
              description: The comma-separated list of field names to search for the specified search text. Target fields must be included in the specified suggester.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_74
          serializedName: select
          language: !<!Languages> 
            default:
              name: select
              description: 'The comma-separated list of fields to retrieve. If unspecified, only the key field will be included in the results.'
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_75
          serializedName: suggesterName
          language: !<!Languages> 
            default:
              name: suggesterName
              description: The name of the suggester as specified in the suggesters collection that's part of the index definition.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_76
          serializedName: top
          language: !<!Languages> 
            default:
              name: top
              description: The number of suggestions to retrieve. This must be a value between 1 and 100. The default is 5.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: SuggestRequest
          description: 'Parameters for filtering, sorting, fuzzy matching, and other suggestions query behaviors.'
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_162
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      properties:
        - !<!Property> &ref_164
          schema: !<!ArraySchema> &ref_104
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: !<!ObjectSchema> &ref_79
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '2019-05-06'
              parents: !<!Relations> 
                all:
                  - *ref_77
                immediate:
                  - *ref_77
              properties:
                - !<!Property> 
                  schema: *ref_78
                  nullable: false
                  serializedName: '@search.action'
                  language: !<!Languages> 
                    default:
                      name: actionType
                      description: The operation to perform on a document in an indexing batch.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - input
              language: !<!Languages> 
                default:
                  name: IndexAction
                  description: Represents an index action that operates on a document.
                  namespace: ''
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: Actions
                description: The actions in the batch.
            protocol: !<!Protocols> {}
          required: true
          serializedName: value
          language: !<!Languages> 
            default:
              name: actions
              description: The actions in the batch.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: IndexBatch
          description: Contains a batch of document write actions to send to the index.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_79
    - !<!ObjectSchema> &ref_167
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_105
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: !<!ObjectSchema> &ref_84
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '2019-05-06'
              properties:
                - !<!Property> 
                  schema: *ref_80
                  readOnly: true
                  serializedName: key
                  language: !<!Languages> 
                    default:
                      name: key
                      description: The key of a document that was in the indexing request.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_81
                  readOnly: true
                  serializedName: errorMessage
                  language: !<!Languages> 
                    default:
                      name: errorMessage
                      description: The error message explaining why the indexing operation failed for the document identified by the key; null if indexing succeeded.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_82
                  nullable: false
                  readOnly: true
                  serializedName: status
                  language: !<!Languages> 
                    default:
                      name: succeeded
                      description: A value indicating whether the indexing operation succeeded for the document identified by the key.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_83
                  nullable: false
                  readOnly: true
                  serializedName: statusCode
                  language: !<!Languages> 
                    default:
                      name: statusCode
                      description: >-
                        The status code of the indexing operation. Possible values include: 200 for a successful update or delete, 201 for successful document creation, 400 for a malformed input document, 404 for document not found, 409 for
                        a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: IndexingResult
                  description: Status of an indexing operation for a single document.
                  namespace: ''
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: Results
                description: The list of status information for each document in the indexing request.
            protocol: !<!Protocols> {}
          readOnly: true
          serializedName: value
          language: !<!Languages> 
            default:
              name: results
              description: The list of status information for each document in the indexing request.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: DocumentIndexResult
          description: Response containing the status of operations for all documents in the indexing request.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_84
    - !<!ObjectSchema> &ref_180
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_106
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-05-06'
            elementType: !<!ObjectSchema> &ref_87
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '2019-05-06'
              properties:
                - !<!Property> 
                  schema: *ref_85
                  readOnly: true
                  serializedName: text
                  language: !<!Languages> 
                    default:
                      name: text
                      description: The completed term.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_86
                  readOnly: true
                  serializedName: queryPlusText
                  language: !<!Languages> 
                    default:
                      name: queryPlusText
                      description: The query along with the completed term.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: AutocompleteItem
                  description: The result of Autocomplete requests.
                  namespace: ''
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: Results
                description: The list of returned Autocompleted items.
            protocol: !<!Protocols> {}
          readOnly: true
          serializedName: value
          language: !<!Languages> 
            default:
              name: results
              description: The list of returned Autocompleted items.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: AutocompleteResult
          description: The result of Autocomplete query.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_87
    - !<!ObjectSchema> &ref_182
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      properties:
        - !<!Property> 
          schema: *ref_88
          serializedName: search
          language: !<!Languages> 
            default:
              name: searchText
              description: The search text on which to base autocomplete results.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_34
          serializedName: autocompleteMode
          language: !<!Languages> 
            default:
              name: autocompleteMode
              description: Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context while producing auto-completed terms.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_89
          serializedName: filter
          language: !<!Languages> 
            default:
              name: filter
              description: An OData expression that filters the documents used to produce completed terms for the Autocomplete result.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_90
          serializedName: fuzzy
          language: !<!Languages> 
            default:
              name: useFuzzyMatching
              description: >-
                A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will autocomplete terms even if there's a substituted or missing character in the search text. While
                this provides a better experience in some scenarios, it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_91
          serializedName: highlightPostTag
          language: !<!Languages> 
            default:
              name: highlightPostTag
              description: 'A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting is disabled.'
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_92
          serializedName: highlightPreTag
          language: !<!Languages> 
            default:
              name: highlightPreTag
              description: 'A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting is disabled.'
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_93
          serializedName: minimumCoverage
          language: !<!Languages> 
            default:
              name: minimumCoverage
              description: >-
                A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search
                availability even for services with only one replica. The default is 80.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_94
          serializedName: searchFields
          language: !<!Languages> 
            default:
              name: searchFields
              description: The comma-separated list of field names to consider when querying for auto-completed terms. Target fields must be included in the specified suggester.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_95
          serializedName: suggesterName
          language: !<!Languages> 
            default:
              name: suggesterName
              description: The name of the suggester as specified in the suggesters collection that's part of the index definition.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_96
          serializedName: top
          language: !<!Languages> 
            default:
              name: top
              description: The number of auto-completed terms to retrieve. This must be a value between 1 and 100. The default is 5.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: AutocompleteRequest
          description: 'Parameters for fuzzy matching, and other autocomplete query behaviors.'
          namespace: ''
      protocol: !<!Protocols> {}
  arrays:
    - *ref_10
    - *ref_14
    - *ref_17
    - *ref_20
    - *ref_22
    - *ref_25
    - *ref_97
    - *ref_98
    - *ref_99
    - *ref_100
    - *ref_101
    - !<!ArraySchema> &ref_138
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-05-06'
      elementType: *ref_102
      language: !<!Languages> 
        default:
          name: ArrayOfGet1ItemsItem
          description: Array of Get1ItemsItem
      protocol: !<!Protocols> {}
    - *ref_30
    - *ref_31
    - *ref_33
    - *ref_103
    - *ref_104
    - *ref_105
    - *ref_37
    - *ref_106
globalParameters:
  - !<!Parameter> &ref_108
    schema: *ref_0
    implementation: Client
    required: true
    extensions:
      x-in: path
      x-ms-priority: 1
      x-ms-skip-url-encoding: true
      x-name: searchServiceName
      x-required: true
      x-type: string
    language: !<!Languages> 
      default:
        name: SearchServiceName
        description: The name of the search service.
        serializedName: searchServiceName
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: uri
  - !<!Parameter> &ref_109
    schema: *ref_0
    clientDefaultValue: search.windows.net
    implementation: Client
    required: true
    extensions:
      x-in: path
      x-ms-priority: 2
      x-ms-skip-url-encoding: true
      x-name: searchDnsSuffix
      x-required: true
      x-type: string
    language: !<!Languages> 
      default:
        name: SearchDnsSuffix
        description: The DNS suffix of the search service. The default is search.windows.net.
        serializedName: searchDnsSuffix
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: uri
  - !<!Parameter> &ref_110
    schema: *ref_0
    implementation: Client
    required: true
    extensions:
      x-in: path
      x-ms-priority: 3
      x-ms-skip-url-encoding: false
      x-name: indexName
      x-required: true
      x-type: string
    language: !<!Languages> 
      default:
        name: IndexName
        description: The name of the index.
        serializedName: indexName
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: uri
  - !<!Parameter> &ref_112
    schema: *ref_107
    implementation: Client
    origin: 'modelerfour:synthesized/api-version'
    required: true
    language: !<!Languages> 
      default:
        name: ApiVersion
        description: Api Version
        serializedName: api-version
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: query
operationGroups:
  - !<!OperationGroup> 
    $key: Documents
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-05-06'
        parameters:
          - *ref_108
          - *ref_109
          - *ref_110
          - *ref_111
          - *ref_112
        requests:
          - !<!Request> 
            parameters:
              - *ref_113
            signatureParameters:
              - *ref_113
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /docs/$count
                method: get
                uri: 'https://{searchServiceName}.{searchDnsSuffix}/indexes(''{indexName}'')'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_114
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-examples:
            SearchIndexCountDocuments:
              parameters:
                api-version: '2019-05-06'
                indexName: myindex
                searchDnsSuffix: search.windows.net
                searchServiceName: myservice
              responses:
                '200':
                  body: 427
          x-ms-request-id: request-id
        language: !<!Languages> 
          default:
            name: Count
            description: Queries the number of documents in the index.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-05-06'
        parameters:
          - *ref_108
          - *ref_109
          - *ref_110
          - !<!Parameter> &ref_133
            schema: *ref_12
            implementation: Method
            language: !<!Languages> 
              default:
                name: searchText
                description: A full-text search query expression; Use "*" or omit this parameter to match all documents.
                serializedName: search
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - *ref_115
          - *ref_116
          - *ref_117
          - *ref_118
          - *ref_119
          - *ref_120
          - *ref_121
          - *ref_122
          - *ref_123
          - *ref_124
          - *ref_125
          - *ref_126
          - *ref_127
          - *ref_128
          - *ref_129
          - *ref_130
          - *ref_112
          - *ref_131
        requests:
          - !<!Request> 
            parameters:
              - *ref_11
              - *ref_132
            signatureParameters:
              - *ref_11
              - *ref_132
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /docs
                method: get
                uri: 'https://{searchServiceName}.{searchDnsSuffix}/indexes(''{indexName}'')'
        signatureParameters:
          - *ref_133
        responses:
          - !<!SchemaResponse> 
            schema: *ref_134
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-examples:
            SearchIndexSearchDocumentsGet:
              parameters:
                $count: true
                $filter: rating gt 10
                $orderby:
                  - search.score() desc
                  - rating desc
                $select:
                  - docId
                  - title
                  - description
                $skip: 100
                $top: 10
                api-version: '2019-05-06'
                facet:
                  - 'category,count:10,sort:count'
                highlight:
                  - title
                highlightPostTag: </em>
                highlightPreTag: <em>
                indexName: myindex
                minimumCoverage: 80
                queryType: simple
                scoringParameters:
                  - 'currentLocation--122.123,44.77233'
                scoringProfile: sp
                search: nice hotels
                searchDnsSuffix: search.windows.net
                searchFields:
                  - title
                  - description
                searchMode: any
                searchServiceName: myservice
              responses:
                '200':
                  body:
                    '@odata.count': 25
                    '@search.coverage': 80
                    '@search.facets':
                      category:
                        - count: 1
                          value: Economy
                        - count: 1
                          value: Luxury
                    value:
                      - description: Cheapest hotel in town
                        '@search.highlights':
                          title:
                            - <em>Nice</em> <em>Hotel</em>
                        '@search.score': 1.5
                        docId: '1'
                        title: Nice Hotel
                      - description: Best hotel in town
                        '@search.highlights':
                          title:
                            - Fancy <em>Hotel</em>
                        '@search.score': 0.7
                        docId: '2'
                        title: Fancy Hotel
          x-ms-request-id: request-id
        language: !<!Languages> 
          default:
            name: SearchGet
            description: Searches for documents in the index.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-05-06'
        parameters:
          - *ref_108
          - *ref_109
          - *ref_110
          - *ref_112
          - *ref_135
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_137
                schema: *ref_61
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: searchRequest
                    description: The definition of the Search request.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - *ref_136
            signatureParameters:
              - *ref_137
              - *ref_136
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /docs/search.post.search
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: 'https://{searchServiceName}.{searchDnsSuffix}/indexes(''{indexName}'')'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_134
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-examples:
            SearchIndexSearchDocumentsPost:
              parameters:
                api-version: '2019-05-06'
                indexName: myindex
                searchDnsSuffix: search.windows.net
                searchRequest:
                  count: true
                  facets:
                    - 'category,count:10,sort:count'
                  filter: rating gt 4.0
                  highlight: title
                  highlightPostTag: </em>
                  highlightPreTag: <em>
                  minimumCoverage: null
                  orderby: 'search.score() desc,rating desc'
                  queryType: simple
                  scoringParameters:
                    - 'currentLocation--122.123,44.77233'
                  scoringProfile: sp
                  search: nice hotels
                  searchFields: 'title,description'
                  searchMode: any
                  select: 'docId,title,description'
                  skip: 0
                  top: 10
                searchServiceName: myservice
              responses:
                '200':
                  body:
                    '@odata.count': 25
                    '@odata.nextLink': 'https://myservice.search.windows.net/indexes(''myindex'')/docs/search.post.search?api-version=2019-05-06'
                    '@search.facets':
                      category:
                        - count: 1
                          value: Economy
                        - count: 1
                          value: Luxury
                    '@search.nextPageParameters':
                      count: true
                      facets:
                        - 'category,count:10,sort:count'
                      filter: rating gt 4.0
                      highlight: title
                      highlightPostTag: </em>
                      highlightPreTag: <em>
                      minimumCoverage: null
                      orderby: 'search.score() desc,rating desc'
                      queryType: simple
                      scoringParameters:
                        - 'currentLocation--122.123,44.77233'
                      scoringProfile: sp
                      search: nice hotels
                      searchFields: 'title,description'
                      searchMode: any
                      select: 'docId,title,description'
                      skip: 2
                      top: 8
                    value:
                      - description: Cheapest hotel in town
                        '@search.highlights':
                          title:
                            - <em>Nice</em> <em>Hotel</em>
                        '@search.score': 1.5
                        docId: '1'
                        title: Nice Hotel
                      - description: Best hotel in town
                        '@search.highlights':
                          title:
                            - Fancy <em>Hotel</em>
                        '@search.score': 0.7
                        docId: '2'
                        title: Fancy Hotel
          x-ms-request-id: request-id
        language: !<!Languages> 
          default:
            name: SearchPost
            description: Searches for documents in the index.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-05-06'
        parameters:
          - *ref_108
          - *ref_109
          - *ref_110
          - !<!Parameter> &ref_141
            schema: *ref_12
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: key
                description: The key of the document to retrieve.
                serializedName: key
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_142
            schema: *ref_138
            implementation: Method
            language: !<!Languages> 
              default:
                name: selectedFields
                description: List of field names to retrieve for the document; Any field not retrieved will be missing from the returned document.
                serializedName: $select
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - *ref_112
          - *ref_139
        requests:
          - !<!Request> 
            parameters:
              - *ref_140
            signatureParameters:
              - *ref_140
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/docs(''{key}'')'
                method: get
                uri: 'https://{searchServiceName}.{searchDnsSuffix}/indexes(''{indexName}'')'
        signatureParameters:
          - *ref_141
          - *ref_142
        responses:
          - !<!SchemaResponse> 
            schema: *ref_3
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-examples:
            SearchIndexGetDocument:
              parameters:
                $select:
                  - docId
                  - title
                  - description
                api-version: '2019-05-06'
                indexName: myindex
                key: '1'
                searchDnsSuffix: search.windows.net
                searchServiceName: myservice
              responses:
                '200':
                  body:
                    description: Cheapest hotel in town
                    docId: '1'
                    title: Nice Hotel
        language: !<!Languages> 
          default:
            name: Get
            description: Retrieves a document from the index.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-05-06'
        parameters:
          - *ref_108
          - *ref_109
          - *ref_110
          - !<!Parameter> &ref_154
            schema: *ref_12
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: searchText
                description: 'The search text to use to suggest documents. Must be at least 1 character, and no more than 100 characters.'
                serializedName: search
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_155
            schema: *ref_12
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: suggesterName
                description: The name of the suggester as specified in the suggesters collection that's part of the index definition.
                serializedName: suggesterName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - *ref_143
          - *ref_144
          - *ref_145
          - *ref_146
          - *ref_147
          - *ref_148
          - *ref_149
          - *ref_150
          - *ref_151
          - *ref_112
          - *ref_152
        requests:
          - !<!Request> 
            parameters:
              - *ref_28
              - *ref_153
            signatureParameters:
              - *ref_28
              - *ref_153
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /docs/search.suggest
                method: get
                uri: 'https://{searchServiceName}.{searchDnsSuffix}/indexes(''{indexName}'')'
        signatureParameters:
          - *ref_154
          - *ref_155
        responses:
          - !<!SchemaResponse> 
            schema: *ref_156
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-examples:
            SearchIndexSuggestDocumentsGet:
              parameters:
                $filter: rating gt 10
                $orderby:
                  - search.score() desc
                  - rating desc
                $select:
                  - docId
                  - title
                  - description
                $top: 10
                api-version: '2019-05-06'
                fuzzy: false
                highlightPostTag: </em>
                highlightPreTag: <em>
                indexName: myindex
                minimumCoverage: 80
                search: hote
                searchDnsSuffix: search.windows.net
                searchFields:
                  - title
                searchServiceName: myservice
                suggesterName: sg
              responses:
                '200':
                  body:
                    value:
                      - description: Cheapest hotel in town
                        '@search.text': Nice <em>Hotel</em>
                        docId: '1'
                        title: Nice Hotel
                      - description: Best hotel in town
                        '@search.text': Fancy <em>Hotel</em>
                        docId: '2'
                        title: Fancy Hotel
          x-ms-request-id: request-id
        language: !<!Languages> 
          default:
            name: SuggestGet
            description: Suggests documents in the index that match the given partial query text.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-05-06'
        parameters:
          - *ref_108
          - *ref_109
          - *ref_110
          - *ref_112
          - *ref_157
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_160
                schema: *ref_158
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: suggestRequest
                    description: The Suggest request.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - *ref_159
            signatureParameters:
              - *ref_160
              - *ref_159
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /docs/search.post.suggest
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: 'https://{searchServiceName}.{searchDnsSuffix}/indexes(''{indexName}'')'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_156
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-examples:
            SearchIndexSuggestDocumentsPost:
              parameters:
                api-version: '2019-05-06'
                indexName: myindex
                searchDnsSuffix: search.windows.net
                searchServiceName: myservice
                suggestRequest:
                  filter: rating gt 4.0
                  highlightPostTag: </em>
                  highlightPreTag: <em>
                  minimumCoverage: 80
                  orderby: rating desc
                  search: hote
                  searchFields: title
                  select: 'docId,title,description'
                  top: 10
              responses:
                '200':
                  body:
                    value:
                      - description: Cheapest hotel in town
                        '@search.text': Nice <em>Hotel</em>
                        docId: '1'
                        title: Nice Hotel
                      - description: Best hotel in town
                        '@search.text': Fancy <em>Hotel</em>
                        docId: '2'
                        title: Fancy Hotel
          x-ms-request-id: request-id
        language: !<!Languages> 
          default:
            name: SuggestPost
            description: Suggests documents in the index that match the given partial query text.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-05-06'
        parameters:
          - *ref_108
          - *ref_109
          - *ref_110
          - *ref_112
          - *ref_161
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_163
                schema: *ref_162
                flattened: true
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: _batch
                    description: The batch of index actions.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!VirtualParameter> &ref_166
                schema: *ref_104
                implementation: Method
                originalParameter: *ref_163
                pathToProperty: []
                required: true
                targetProperty: *ref_164
                language: !<!Languages> 
                  default:
                    name: actions
                    description: The actions in the batch.
                protocol: !<!Protocols> {}
              - *ref_165
            signatureParameters:
              - *ref_166
              - *ref_165
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /docs/search.index
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: 'https://{searchServiceName}.{searchDnsSuffix}/indexes(''{indexName}'')'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_167
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_167
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '207'
        extensions:
          x-ms-examples:
            SearchIndexIndexDocuments:
              parameters:
                api-version: '2019-05-06'
                batch:
                  value:
                    - description: Best hotel in town
                      '@search.action': upload
                      docId: '1'
                      title: Fancy Stay
                    - '@search.action': merge
                      docId: '2'
                      title: Roach Motel
                    - '@search.action': mergeOrUpload
                      docId: '3'
                      title: Econo Motel
                    - '@search.action': delete
                      docId: '4'
                indexName: myindex
                searchDnsSuffix: search.windows.net
                searchServiceName: myservice
              responses:
                '200':
                  body:
                    value:
                      - errorMessage: null
                        key: '1'
                        status: true
                        statusCode: 201
                      - errorMessage: null
                        key: '2'
                        status: true
                        statusCode: 200
                      - errorMessage: null
                        key: '3'
                        status: true
                        statusCode: 200
                      - errorMessage: null
                        key: '4'
                        status: true
                        statusCode: 200
                '207':
                  body:
                    value:
                      - errorMessage: null
                        key: '1'
                        status: true
                        statusCode: 200
                      - errorMessage: Document not found.
                        key: '2'
                        status: false
                        statusCode: 404
                      - errorMessage: null
                        key: '3'
                        status: true
                        statusCode: 200
                      - errorMessage: null
                        key: '4'
                        status: true
                        statusCode: 200
          x-ms-request-id: request-id
        language: !<!Languages> 
          default:
            name: Index
            description: Sends a batch of document write actions to the index.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-05-06'
        parameters:
          - *ref_108
          - *ref_109
          - *ref_110
          - *ref_168
          - *ref_112
          - !<!Parameter> &ref_178
            schema: *ref_12
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: searchText
                description: The incomplete term which should be auto-completed.
                serializedName: search
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_179
            schema: *ref_12
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: suggesterName
                description: The name of the suggester as specified in the suggesters collection that's part of the index definition.
                serializedName: suggesterName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - *ref_169
          - *ref_170
          - *ref_171
          - *ref_172
          - *ref_173
          - *ref_174
          - *ref_175
          - *ref_176
        requests:
          - !<!Request> 
            parameters:
              - *ref_177
              - *ref_36
            signatureParameters:
              - *ref_177
              - *ref_36
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /docs/search.autocomplete
                method: get
                uri: 'https://{searchServiceName}.{searchDnsSuffix}/indexes(''{indexName}'')'
        signatureParameters:
          - *ref_178
          - *ref_179
        responses:
          - !<!SchemaResponse> 
            schema: *ref_180
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-examples:
            SearchIndexAutocompleteDocumentsGet:
              parameters:
                api-version: '2019-05-06'
                autocompleteMode: oneTerm
                filter: 'search.in(docId,''101,102,105'')'
                fuzzy: false
                highlightPostTag: </em>
                highlightPreTag: <em>
                indexName: myindex
                minimumCoverage: 80
                search: washington medic
                searchDnsSuffix: search.windows.net
                searchFields:
                  - title
                  - description
                searchServiceName: myservice
                suggesterName: sg
                top: 10
              responses:
                '200':
                  body:
                    - queryPlusText: washington medicaid
                      text: medicaid
                    - queryPlusText: washington medicare
                      text: medicare
                    - queryPlusText: washington medicine
                      text: medicine
          x-ms-request-id: request-id
        language: !<!Languages> 
          default:
            name: AutocompleteGet
            description: Autocompletes incomplete query terms based on input text and matching terms in the index.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-05-06'
        parameters:
          - *ref_108
          - *ref_109
          - *ref_110
          - *ref_181
          - *ref_112
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_184
                schema: *ref_182
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: autocompleteRequest
                    description: The definition of the Autocomplete request.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - *ref_183
            signatureParameters:
              - *ref_184
              - *ref_183
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /docs/search.post.autocomplete
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: 'https://{searchServiceName}.{searchDnsSuffix}/indexes(''{indexName}'')'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_180
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-examples:
            SearchIndexAutocompleteDocumentsPost:
              parameters:
                api-version: '2019-05-06'
                autocompleteRequest:
                  autocompleteMode: oneTerm
                  filter: 'search.in(docId,''101,102,105'')'
                  highlightPostTag: </em>
                  highlightPreTag: <em>
                  minimumCoverage: 80
                  search: washington medic
                  searchFields: 'title,description'
                  suggesterName: sg
                  top: 10
                indexName: myindex
                searchDnsSuffix: search.windows.net
                searchServiceName: myservice
              responses:
                '200':
                  body:
                    - queryPlusText: washington medicaid
                      text: medicaid
                    - queryPlusText: washington medicare
                      text: medicare
                    - queryPlusText: washington medicine
                      text: medicine
          x-ms-request-id: request-id
        language: !<!Languages> 
          default:
            name: AutocompletePost
            description: Autocompletes incomplete query terms based on input text and matching terms in the index.
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Documents
        description: ''
    protocol: !<!Protocols> {}
security: !<!Security> 
  authenticationRequired: false
language: !<!Languages> 
  default:
    name: SearchIndexClient
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
