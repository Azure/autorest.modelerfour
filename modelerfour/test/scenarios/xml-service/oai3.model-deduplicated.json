{
 "openapi": "3.0.0",
 "info": {
  "title": "xml-service",
  "description": "Test Infrastructure for AutoRest Swagger BAT",
  "x-ms-metadata": {
   "apiVersions": [
    "1.0.0"
   ]
  },
  "version": "1.0.0"
 },
 "paths": {
  "path:0": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/complex-type-ref-no-meta",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1complex-type-ref-no-meta"
    ]
   }
  },
  "path:0.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/complex-type-ref-no-meta",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1complex-type-ref-no-meta"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getComplexTypeRefNoMeta",
    "description": "Get a complex type that has a ref to a complex type with no XML node",
    "tags": [
     "XML Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:0",
      "description": "The empty list."
     }
    }
   }
  },
  "path:0.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/complex-type-ref-no-meta",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1complex-type-ref-no-meta"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_putComplexTypeRefNoMeta",
    "description": "Puts a complex type that has a ref to a complex type with no XML node",
    "tags": [
     "XML Operations"
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:0"
    },
    "x-ms-requestBody-index": 0,
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success."
     }
    }
   }
  },
  "path:1": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/complex-type-ref-with-meta",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1complex-type-ref-with-meta"
    ]
   }
  },
  "path:1.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/complex-type-ref-with-meta",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1complex-type-ref-with-meta"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getComplexTypeRefWithMeta",
    "description": "Get a complex type that has a ref to a complex type with XML node",
    "tags": [
     "XML Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:2",
      "description": "The empty list."
     }
    }
   }
  },
  "path:1.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/complex-type-ref-with-meta",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1complex-type-ref-with-meta"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_putComplexTypeRefWithMeta",
    "description": "Puts a complex type that has a ref to a complex type with XML node",
    "tags": [
     "XML Operations"
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:1"
    },
    "x-ms-requestBody-index": 0,
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success."
     }
    }
   }
  },
  "path:2": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/simple",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1simple"
    ]
   }
  },
  "path:2.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/simple",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1simple"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getSimple",
    "description": "Get a simple XML document",
    "tags": [
     "XML Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:4",
      "description": "The simpleÂ XML document"
     },
     "default": {
      "$ref": "#/components/responses/responses:5",
      "description": "Unexpected error"
     }
    }
   }
  },
  "path:2.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/simple",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1simple"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_putSimple",
    "description": "Put a simple XML document",
    "tags": [
     "XML Operations"
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:2"
    },
    "x-ms-requestBody-index": 0,
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success"
     },
     "default": {
      "$ref": "#/components/responses/responses:5",
      "description": "Unexpected error"
     }
    }
   }
  },
  "path:3": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/wrapped-lists",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1wrapped-lists"
    ]
   }
  },
  "path:3.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/wrapped-lists",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1wrapped-lists"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getWrappedLists",
    "description": "Get an XML document with multiple wrapped lists",
    "tags": [
     "XML Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:8",
      "description": "The XML document with multiple wrapped lists"
     }
    }
   }
  },
  "path:3.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/wrapped-lists",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1wrapped-lists"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_putWrappedLists",
    "description": "Put an XML document with multiple wrapped lists",
    "tags": [
     "XML Operations"
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:3"
    },
    "x-ms-requestBody-index": 0,
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success"
     },
     "default": {
      "$ref": "#/components/responses/responses:5",
      "description": "Unexpected error"
     }
    }
   }
  },
  "path:4": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/headers",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1headers"
    ]
   }
  },
  "path:4.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/headers",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1headers"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getHeaders",
    "description": "Get strongly-typed response headers.",
    "tags": [
     "XML Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:11",
      "description": "The response header."
     }
    }
   }
  },
  "path:5": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/empty-list",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1empty-list"
    ]
   }
  },
  "path:5.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/empty-list",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1empty-list"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getEmptyList",
    "description": "Get an empty list.",
    "tags": [
     "XML Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:4",
      "description": "The empty list."
     }
    }
   }
  },
  "path:5.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/empty-list",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1empty-list"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_putEmptyList",
    "description": "Puts an empty list.",
    "tags": [
     "XML Operations"
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:2"
    },
    "x-ms-requestBody-index": 0,
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success."
     }
    }
   }
  },
  "path:6": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/empty-wrapped-lists",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1empty-wrapped-lists"
    ]
   }
  },
  "path:6.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/empty-wrapped-lists",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1empty-wrapped-lists"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getEmptyWrappedLists",
    "description": "Gets some empty wrapped lists.",
    "tags": [
     "XML Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:8",
      "description": "The empty lists."
     }
    }
   }
  },
  "path:6.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/empty-wrapped-lists",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1empty-wrapped-lists"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_putEmptyWrappedLists",
    "description": "Puts some empty wrapped lists.",
    "tags": [
     "XML Operations"
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:5"
    },
    "x-ms-requestBody-index": 0,
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success."
     }
    }
   }
  },
  "path:7": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/root-list",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1root-list"
    ]
   }
  },
  "path:7.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/root-list",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1root-list"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getRootList",
    "description": "Gets a list as the root element.",
    "tags": [
     "XML Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:16",
      "description": "The root list."
     }
    }
   }
  },
  "path:7.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/root-list",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1root-list"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_putRootList",
    "description": "Puts a list as the root element.",
    "tags": [
     "XML Operations"
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:6"
    },
    "x-ms-requestBody-index": 0,
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success."
     }
    }
   }
  },
  "path:8": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/root-list-single-item",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1root-list-single-item"
    ]
   }
  },
  "path:8.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/root-list-single-item",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1root-list-single-item"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getRootListSingleItem",
    "description": "Gets a list with a single item.",
    "tags": [
     "XML Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:16",
      "description": "The root list."
     }
    }
   }
  },
  "path:8.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/root-list-single-item",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1root-list-single-item"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_putRootListSingleItem",
    "description": "Puts a list with a single item.",
    "tags": [
     "XML Operations"
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:6"
    },
    "x-ms-requestBody-index": 0,
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success."
     }
    }
   }
  },
  "path:9": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/empty-root-list",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1empty-root-list"
    ]
   }
  },
  "path:9.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/empty-root-list",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1empty-root-list"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getEmptyRootList",
    "description": "Gets an empty list as the root element.",
    "tags": [
     "XML Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:16",
      "description": "The root list."
     }
    }
   }
  },
  "path:9.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/empty-root-list",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1empty-root-list"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_putEmptyRootList",
    "description": "Puts an empty list as the root element.",
    "tags": [
     "XML Operations"
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:6"
    },
    "x-ms-requestBody-index": 0,
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success."
     }
    }
   }
  },
  "path:10": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/empty-child-element",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1empty-child-element"
    ]
   }
  },
  "path:10.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/empty-child-element",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1empty-child-element"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getEmptyChildElement",
    "description": "Gets an XML document with an empty child element.",
    "tags": [
     "XML Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:22",
      "description": "The unknown banana."
     }
    }
   }
  },
  "path:10.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/empty-child-element",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1empty-child-element"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_putEmptyChildElement",
    "description": "Puts a value with an empty child element.",
    "tags": [
     "XML Operations"
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:9"
    },
    "x-ms-requestBody-index": 0,
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success."
     }
    }
   }
  },
  "path:11": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/?comp=list",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1?comp=list"
    ]
   }
  },
  "path:11.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/?comp=list",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1?comp=list"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_listContainers",
    "description": "Lists containers in a storage account.",
    "tags": [
     "XML Operations"
    ],
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:24",
      "description": "A list of containers."
     }
    }
   }
  },
  "path:12": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/?comp=properties&restype=service",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1?comp=properties&restype=service"
    ]
   }
  },
  "path:12.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/?comp=properties&restype=service",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1?comp=properties&restype=service"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getServiceProperties",
    "description": "Gets storage service properties.",
    "tags": [
     "XML Operations"
    ],
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:2"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:25",
      "description": "The storage service properties."
     }
    }
   }
  },
  "path:12.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/?comp=properties&restype=service",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1?comp=properties&restype=service"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_putServiceProperties",
    "description": "Puts storage service properties.",
    "tags": [
     "XML Operations"
    ],
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:2"
     }
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:10"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success."
     }
    }
   }
  },
  "path:13": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/mycontainer?comp=acl&restype=container",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1mycontainer?comp=acl&restype=container"
    ]
   }
  },
  "path:13.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/mycontainer?comp=acl&restype=container",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1mycontainer?comp=acl&restype=container"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_getAcls",
    "description": "Gets storage ACLs for a container.",
    "tags": [
     "XML Operations"
    ],
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:6"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:27",
      "description": "The storage ACLs."
     }
    }
   }
  },
  "path:13.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/mycontainer?comp=acl&restype=container",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1mycontainer?comp=acl&restype=container"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_putAcls",
    "description": "Puts storage ACLs for a container.",
    "tags": [
     "XML Operations"
    ],
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:6"
     }
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:11"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success."
     }
    }
   }
  },
  "path:14": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/mycontainer?comp=list&restype=container",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1mycontainer?comp=list&restype=container"
    ]
   }
  },
  "path:14.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/mycontainer?comp=list&restype=container",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1mycontainer?comp=list&restype=container"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_listBlobs",
    "description": "Lists blobs in a storage container.",
    "tags": [
     "XML Operations"
    ],
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:6"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:29",
      "description": "A list of containers."
     }
    }
   }
  },
  "path:15": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/jsoninput",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1jsoninput"
    ]
   }
  },
  "path:15.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/jsoninput",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1jsoninput"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_jsonInput",
    "description": "A Swagger with XML that has one operation that takes JSON as input. You need to send the ID number 42",
    "tags": [
     "XML Operations"
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:12"
    },
    "x-ms-requestBody-index": 0,
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:1",
      "description": "Indicates success."
     }
    }
   }
  },
  "path:16": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/jsonoutput",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1jsonoutput"
    ]
   }
  },
  "path:16.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "1.0.0"
    ],
    "filename": [
     "mem:///100?oai3.shaken.json"
    ],
    "path": "/xml/jsonoutput",
    "originalLocations": [
     "http://localhost:3000/__files/xml-service.json#/paths/~1xml~1jsonoutput"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "http://localhost:3000/"
     }
    ],
    "operationId": "xml_jsonOutput",
    "description": "A Swagger with XML that has one operation that returns JSON. ID number 42",
    "tags": [
     "XML Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:31",
      "description": "Indicates success."
     }
    }
   }
  }
 },
 "components": {
  "responses": {
   "responses:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-complex_type_ref_no_metaÂ·getÂ·responsesÂ·200",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-complex_type_ref_no_metaÂ·getÂ·responsesÂ·200"
     ]
    },
    "description": "The empty list.",
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:106"
      }
     }
    }
   },
   "responses:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-complex_type_ref_no_metaÂ·putÂ·responsesÂ·201",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-complex_type_ref_no_metaÂ·putÂ·responsesÂ·201",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-complex_type_ref_with_metaÂ·putÂ·responsesÂ·201",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-simpleÂ·putÂ·responsesÂ·201",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-wrapped_listsÂ·putÂ·responsesÂ·201",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-empty_listÂ·putÂ·responsesÂ·201",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-empty_wrapped_listsÂ·putÂ·responsesÂ·201",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-root_listÂ·putÂ·responsesÂ·201",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-root_list_single_itemÂ·putÂ·responsesÂ·201",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-empty_root_listÂ·putÂ·responsesÂ·201",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-empty_child_elementÂ·putÂ·responsesÂ·201",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-comp-properties-restype-serviceÂ·putÂ·responsesÂ·201",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-mycontainer-comp-acl-restype-containerÂ·putÂ·responsesÂ·201",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-jsoninputÂ·putÂ·responsesÂ·200"
     ]
    },
    "description": "Indicates success."
   },
   "responses:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-complex_type_ref_with_metaÂ·getÂ·responsesÂ·200",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-complex_type_ref_with_metaÂ·getÂ·responsesÂ·200"
     ]
    },
    "description": "The empty list.",
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:108"
      }
     }
    }
   },
   "responses:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-simpleÂ·getÂ·responsesÂ·200",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-simpleÂ·getÂ·responsesÂ·200",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-empty_listÂ·getÂ·responsesÂ·200"
     ]
    },
    "description": "The simpleÂ XML document",
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:16"
      }
     }
    }
   },
   "responses:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-simpleÂ·getÂ·responsesÂ·default",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-simpleÂ·getÂ·responsesÂ·default",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-simpleÂ·putÂ·responsesÂ·default",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-wrapped_listsÂ·putÂ·responsesÂ·default"
     ]
    },
    "description": "Unexpected error",
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:9"
      }
     }
    }
   },
   "responses:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-wrapped_listsÂ·getÂ·responsesÂ·200",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-wrapped_listsÂ·getÂ·responsesÂ·200",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-empty_wrapped_listsÂ·getÂ·responsesÂ·200"
     ]
    },
    "description": "The XML document with multiple wrapped lists",
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:21"
      }
     }
    }
   },
   "responses:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-headersÂ·getÂ·responsesÂ·200",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-headersÂ·getÂ·responsesÂ·200"
     ]
    },
    "description": "The response header.",
    "headers": {
     "Custom-Header": {
      "$ref": "#/components/headers/headers:0",
      "description": "A custom response header."
     }
    }
   },
   "responses:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-root_listÂ·getÂ·responsesÂ·200",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-root_listÂ·getÂ·responsesÂ·200",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-root_list_single_itemÂ·getÂ·responsesÂ·200",
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-empty_root_listÂ·getÂ·responsesÂ·200"
     ]
    },
    "description": "The root list.",
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:1"
      }
     }
    }
   },
   "responses:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-empty_child_elementÂ·getÂ·responsesÂ·200",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-empty_child_elementÂ·getÂ·responsesÂ·200"
     ]
    },
    "description": "The unknown banana.",
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:26"
      }
     }
    }
   },
   "responses:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-comp-listÂ·getÂ·responsesÂ·200",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-comp-listÂ·getÂ·responsesÂ·200"
     ]
    },
    "description": "A list of containers.",
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:35"
      }
     }
    }
   },
   "responses:25": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-comp-properties-restype-serviceÂ·getÂ·responsesÂ·200",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-comp-properties-restype-serviceÂ·getÂ·responsesÂ·200"
     ]
    },
    "description": "The storage service properties.",
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:99"
      }
     }
    }
   },
   "responses:27": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-mycontainer-comp-acl-restype-containerÂ·getÂ·responsesÂ·200",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-mycontainer-comp-acl-restype-containerÂ·getÂ·responsesÂ·200"
     ]
    },
    "description": "The storage ACLs.",
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:98"
      }
     }
    }
   },
   "responses:29": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-mycontainer-comp-list-restype-containerÂ·getÂ·responsesÂ·200",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-mycontainer-comp-list-restype-containerÂ·getÂ·responsesÂ·200"
     ]
    },
    "description": "A list of containers.",
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:72"
      }
     }
    }
   },
   "responses:31": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-jsonoutputÂ·getÂ·responsesÂ·200",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/responses/pathsÂ·xml-jsonoutputÂ·getÂ·responsesÂ·200"
     ]
    },
    "description": "Indicates success.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:8"
      }
     }
    }
   }
  },
  "schemas": {
   "schemas:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-headersÂ·getÂ·responsesÂ·200Â·headersÂ·custom_headerÂ·schema",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/pathsÂ·xml-headersÂ·getÂ·responsesÂ·200Â·headersÂ·custom_headerÂ·schema",
      "http://localhost:3000/__files/xml-service.json#/components/schemas/componentsÂ·schemasÂ·metadataÂ·additionalproperties"
     ]
    },
    "type": "string"
   },
   "schemas:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-root_listÂ·getÂ·responsesÂ·200Â·contentÂ·application-xmlÂ·schema",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/pathsÂ·xml-root_listÂ·getÂ·responsesÂ·200Â·contentÂ·application-xmlÂ·schema",
      "http://localhost:3000/__files/xml-service.json#/components/schemas/pathsÂ·xml-root_list_single_itemÂ·getÂ·responsesÂ·200Â·contentÂ·application-xmlÂ·schema",
      "http://localhost:3000/__files/xml-service.json#/components/schemas/pathsÂ·xml-empty_root_listÂ·getÂ·responsesÂ·200Â·contentÂ·application-xmlÂ·schema"
     ]
    },
    "type": "array",
    "xml": {
     "name": "bananas"
    },
    "items": {
     "$ref": "#/components/schemas/schemas:26"
    }
   },
   "schemas:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-root_listÂ·putÂ·requestbodyÂ·contentÂ·application-xmlÂ·schema",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/pathsÂ·xml-root_listÂ·putÂ·requestbodyÂ·contentÂ·application-xmlÂ·schema",
      "http://localhost:3000/__files/xml-service.json#/components/schemas/pathsÂ·xml-root_list_single_itemÂ·putÂ·requestbodyÂ·contentÂ·application-xmlÂ·schema",
      "http://localhost:3000/__files/xml-service.json#/components/schemas/pathsÂ·xml-empty_root_listÂ·putÂ·requestbodyÂ·contentÂ·application-xmlÂ·schema"
     ]
    },
    "type": "array",
    "xml": {
     "name": "bananas",
     "wrapped": true
    },
    "items": {
     "$ref": "#/components/schemas/schemas:26"
    }
   },
   "schemas:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "JSONInput",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/JSONInput"
     ]
    },
    "properties": {
     "id": {
      "type": "integer"
     }
    }
   },
   "schemas:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "JSONOutput",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/JSONOutput"
     ]
    },
    "properties": {
     "id": {
      "type": "integer"
     }
    }
   },
   "schemas:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Error",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Error"
     ]
    },
    "properties": {
     "status": {
      "type": "integer",
      "format": "int32"
     },
     "message": {
      "$ref": "#/components/schemas/schemas:10"
     }
    }
   },
   "schemas:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Error-message",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Error-message"
     ]
    },
    "type": "string"
   },
   "schemas:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Slide",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Slide"
     ]
    },
    "type": "object",
    "description": "A slide in a slideshow",
    "properties": {
     "type": {
      "$ref": "#/components/schemas/schemas:12"
     },
     "title": {
      "$ref": "#/components/schemas/schemas:13"
     },
     "items": {
      "$ref": "#/components/schemas/schemas:14"
     }
    },
    "xml": {
     "name": "slide"
    }
   },
   "schemas:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Slide-type",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Slide-type"
     ]
    },
    "type": "string",
    "xml": {
     "attribute": true
    }
   },
   "schemas:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Slide-title",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Slide-title"
     ]
    },
    "type": "string"
   },
   "schemas:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Slide-items",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Slide-items"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:15"
    }
   },
   "schemas:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Slide-itemsItem",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Slide-itemsItem"
     ]
    },
    "type": "string",
    "xml": {
     "name": "item"
    }
   },
   "schemas:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Slideshow",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Slideshow"
     ]
    },
    "type": "object",
    "description": "Data about a slideshow",
    "xml": {
     "name": "slideshow"
    },
    "properties": {
     "title": {
      "$ref": "#/components/schemas/schemas:17"
     },
     "date": {
      "$ref": "#/components/schemas/schemas:18"
     },
     "author": {
      "$ref": "#/components/schemas/schemas:19"
     },
     "slides": {
      "$ref": "#/components/schemas/schemas:20"
     }
    }
   },
   "schemas:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Slideshow-title",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Slideshow-title"
     ]
    },
    "type": "string",
    "xml": {
     "attribute": true
    }
   },
   "schemas:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Slideshow-date",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Slideshow-date"
     ]
    },
    "type": "string",
    "xml": {
     "attribute": true
    }
   },
   "schemas:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Slideshow-author",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Slideshow-author"
     ]
    },
    "type": "string",
    "xml": {
     "attribute": true
    }
   },
   "schemas:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Slideshow-slides",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Slideshow-slides"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:11"
    }
   },
   "schemas:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "AppleBarrel",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/AppleBarrel"
     ]
    },
    "type": "object",
    "description": "A barrel of apples.",
    "properties": {
     "GoodApples": {
      "$ref": "#/components/schemas/schemas:22"
     },
     "BadApples": {
      "$ref": "#/components/schemas/schemas:24"
     }
    }
   },
   "schemas:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "AppleBarrel-GoodApples",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/AppleBarrel-GoodApples"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:23"
    },
    "xml": {
     "wrapped": true
    }
   },
   "schemas:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "AppleBarrel-GoodApplesItem",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/AppleBarrel-GoodApplesItem"
     ]
    },
    "type": "string",
    "xml": {
     "name": "Apple"
    }
   },
   "schemas:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "AppleBarrel-BadApples",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/AppleBarrel-BadApples"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:25"
    },
    "xml": {
     "wrapped": true
    }
   },
   "schemas:25": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "AppleBarrel-BadApplesItem",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/AppleBarrel-BadApplesItem"
     ]
    },
    "type": "string",
    "xml": {
     "name": "Apple"
    }
   },
   "schemas:26": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Banana",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Banana"
     ]
    },
    "type": "object",
    "description": "A banana.",
    "properties": {
     "name": {
      "$ref": "#/components/schemas/schemas:27"
     },
     "flavor": {
      "$ref": "#/components/schemas/schemas:28"
     },
     "expiration": {
      "$ref": "#/components/schemas/schemas:29",
      "description": "The time at which you should reconsider eating this banana"
     }
    },
    "xml": {
     "name": "banana"
    }
   },
   "schemas:27": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Banana-name",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Banana-name"
     ]
    },
    "type": "string",
    "xml": {
     "name": "name"
    }
   },
   "schemas:28": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Banana-flavor",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Banana-flavor"
     ]
    },
    "type": "string",
    "xml": {
     "name": "flavor"
    }
   },
   "schemas:29": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Banana-expiration",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Banana-expiration"
     ]
    },
    "description": "The time at which you should reconsider eating this banana",
    "type": "string",
    "format": "date-time",
    "xml": {
     "name": "expiration"
    }
   },
   "schemas:30": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Container",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Container"
     ]
    },
    "type": "object",
    "description": "An Azure Storage container",
    "properties": {
     "Name": {
      "$ref": "#/components/schemas/schemas:31"
     },
     "Properties": {
      "$ref": "#/components/schemas/schemas:32"
     },
     "Metadata": {
      "$ref": "#/components/schemas/schemas:68"
     }
    },
    "required": [
     "Name",
     "Properties"
    ]
   },
   "schemas:31": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Container-Name",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Container-Name"
     ]
    },
    "type": "string"
   },
   "schemas:32": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ContainerProperties",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ContainerProperties"
     ]
    },
    "type": "object",
    "description": "Properties of a container",
    "properties": {
     "Last-Modified": {
      "$ref": "#/components/schemas/schemas:33"
     },
     "Etag": {
      "$ref": "#/components/schemas/schemas:34"
     },
     "LeaseStatus": {
      "$ref": "#/components/schemas/schemas:88"
     },
     "LeaseState": {
      "$ref": "#/components/schemas/schemas:87"
     },
     "LeaseDuration": {
      "$ref": "#/components/schemas/schemas:86"
     },
     "PublicAccess": {
      "$ref": "#/components/schemas/schemas:84"
     }
    },
    "required": [
     "Last-Modified",
     "Etag"
    ]
   },
   "schemas:33": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ContainerProperties-Last-Modified",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ContainerProperties-Last-Modified"
     ]
    },
    "type": "string",
    "format": "date-time-rfc1123"
   },
   "schemas:34": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ContainerProperties-Etag",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ContainerProperties-Etag"
     ]
    },
    "type": "string",
    "format": "etag"
   },
   "schemas:35": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListContainersResponse",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListContainersResponse"
     ]
    },
    "xml": {
     "name": "EnumerationResults"
    },
    "description": "An enumeration of containers",
    "type": "object",
    "properties": {
     "ServiceEndpoint": {
      "$ref": "#/components/schemas/schemas:36"
     },
     "Prefix": {
      "$ref": "#/components/schemas/schemas:37"
     },
     "Marker": {
      "$ref": "#/components/schemas/schemas:38"
     },
     "MaxResults": {
      "type": "integer"
     },
     "Containers": {
      "$ref": "#/components/schemas/schemas:39"
     },
     "NextMarker": {
      "$ref": "#/components/schemas/schemas:40"
     }
    },
    "required": [
     "ServiceEndpoint",
     "Prefix",
     "MaxResults",
     "NextMarker"
    ]
   },
   "schemas:36": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListContainersResponse-ServiceEndpoint",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListContainersResponse-ServiceEndpoint"
     ]
    },
    "type": "string",
    "xml": {
     "attribute": true
    }
   },
   "schemas:37": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListContainersResponse-Prefix",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListContainersResponse-Prefix"
     ]
    },
    "type": "string"
   },
   "schemas:38": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListContainersResponse-Marker",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListContainersResponse-Marker"
     ]
    },
    "type": "string"
   },
   "schemas:39": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListContainersResponse-Containers",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListContainersResponse-Containers"
     ]
    },
    "xml": {
     "wrapped": true
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:30"
    }
   },
   "schemas:40": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListContainersResponse-NextMarker",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListContainersResponse-NextMarker"
     ]
    },
    "type": "string"
   },
   "schemas:41": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "CorsRule",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/CorsRule"
     ]
    },
    "description": "CORS is an HTTP feature that enables a web application running under one domain to access resources in another domain. Web browsers implement a security restriction known as same-origin policy that prevents a web page from calling APIs in a different domain; CORS provides a secure way to allow one domain (the origin domain) to call APIs in another domain",
    "type": "object",
    "properties": {
     "AllowedOrigins": {
      "$ref": "#/components/schemas/schemas:42",
      "description": "The origin domains that are permitted to make a request against the storage service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS."
     },
     "AllowedMethods": {
      "$ref": "#/components/schemas/schemas:43",
      "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated)"
     },
     "AllowedHeaders": {
      "$ref": "#/components/schemas/schemas:44",
      "description": "the request headers that the origin domain may specify on the CORS request."
     },
     "ExposedHeaders": {
      "$ref": "#/components/schemas/schemas:45",
      "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer"
     },
     "MaxAgeInSeconds": {
      "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
      "type": "integer",
      "minimum": 0
     }
    },
    "xml": {
     "name": "CorsRule"
    },
    "required": [
     "AllowedOrigins",
     "AllowedMethods",
     "AllowedHeaders",
     "ExposedHeaders",
     "MaxAgeInSeconds"
    ]
   },
   "schemas:42": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "CorsRule-AllowedOrigins",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/CorsRule-AllowedOrigins"
     ]
    },
    "description": "The origin domains that are permitted to make a request against the storage service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS.",
    "type": "string"
   },
   "schemas:43": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "CorsRule-AllowedMethods",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/CorsRule-AllowedMethods"
     ]
    },
    "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated)",
    "type": "string"
   },
   "schemas:44": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "CorsRule-AllowedHeaders",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/CorsRule-AllowedHeaders"
     ]
    },
    "description": "the request headers that the origin domain may specify on the CORS request.",
    "type": "string"
   },
   "schemas:45": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "CorsRule-ExposedHeaders",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/CorsRule-ExposedHeaders"
     ]
    },
    "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer",
    "type": "string"
   },
   "schemas:46": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Blob",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Blob"
     ]
    },
    "description": "An Azure Storage blob",
    "type": "object",
    "properties": {
     "Name": {
      "$ref": "#/components/schemas/schemas:47"
     },
     "Deleted": {
      "type": "boolean"
     },
     "Snapshot": {
      "$ref": "#/components/schemas/schemas:48"
     },
     "Properties": {
      "$ref": "#/components/schemas/schemas:49"
     },
     "Metadata": {
      "$ref": "#/components/schemas/schemas:68"
     }
    },
    "xml": {
     "name": "Blob"
    },
    "required": [
     "Name",
     "Deleted",
     "Snapshot",
     "Properties"
    ]
   },
   "schemas:47": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Blob-Name",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Blob-Name"
     ]
    },
    "type": "string"
   },
   "schemas:48": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Blob-Snapshot",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Blob-Snapshot"
     ]
    },
    "type": "string"
   },
   "schemas:49": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties"
     ]
    },
    "description": "Properties of a blob",
    "type": "object",
    "properties": {
     "Last-Modified": {
      "$ref": "#/components/schemas/schemas:50"
     },
     "Etag": {
      "$ref": "#/components/schemas/schemas:51"
     },
     "Content-Length": {
      "type": "integer",
      "format": "int64",
      "description": "Size in bytes"
     },
     "Content-Type": {
      "$ref": "#/components/schemas/schemas:52"
     },
     "Content-Encoding": {
      "$ref": "#/components/schemas/schemas:53"
     },
     "Content-Language": {
      "$ref": "#/components/schemas/schemas:54"
     },
     "Content-MD5": {
      "$ref": "#/components/schemas/schemas:55"
     },
     "Content-Disposition": {
      "$ref": "#/components/schemas/schemas:56"
     },
     "Cache-Control": {
      "$ref": "#/components/schemas/schemas:57"
     },
     "x-ms-blob-sequence-number": {
      "x-ms-client-name": "blobSequenceNumber",
      "type": "integer"
     },
     "BlobType": {
      "$ref": "#/components/schemas/schemas:58"
     },
     "LeaseStatus": {
      "$ref": "#/components/schemas/schemas:88"
     },
     "LeaseState": {
      "$ref": "#/components/schemas/schemas:87"
     },
     "LeaseDuration": {
      "$ref": "#/components/schemas/schemas:86"
     },
     "CopyId": {
      "$ref": "#/components/schemas/schemas:59"
     },
     "CopyStatus": {
      "$ref": "#/components/schemas/schemas:85"
     },
     "CopySource": {
      "$ref": "#/components/schemas/schemas:60"
     },
     "CopyProgress": {
      "$ref": "#/components/schemas/schemas:61"
     },
     "CopyCompletionTime": {
      "$ref": "#/components/schemas/schemas:62"
     },
     "CopyStatusDescription": {
      "$ref": "#/components/schemas/schemas:63"
     },
     "ServerEncrypted": {
      "type": "boolean"
     },
     "IncrementalCopy": {
      "type": "boolean"
     },
     "DestinationSnapshot": {
      "$ref": "#/components/schemas/schemas:64"
     },
     "DeletedTime": {
      "$ref": "#/components/schemas/schemas:65"
     },
     "RemainingRetentionDays": {
      "type": "integer"
     },
     "AccessTier": {
      "$ref": "#/components/schemas/schemas:93"
     },
     "AccessTierInferred": {
      "type": "boolean"
     },
     "ArchiveStatus": {
      "$ref": "#/components/schemas/schemas:94"
     }
    },
    "required": [
     "Etag",
     "Last-Modified"
    ]
   },
   "schemas:50": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-Last-Modified",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-Last-Modified"
     ]
    },
    "type": "string",
    "format": "date-time-rfc1123"
   },
   "schemas:51": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-Etag",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-Etag"
     ]
    },
    "type": "string",
    "format": "etag"
   },
   "schemas:52": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-Content-Type",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-Content-Type"
     ]
    },
    "type": "string"
   },
   "schemas:53": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-Content-Encoding",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-Content-Encoding"
     ]
    },
    "type": "string"
   },
   "schemas:54": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-Content-Language",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-Content-Language"
     ]
    },
    "type": "string"
   },
   "schemas:55": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-Content-MD5",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-Content-MD5"
     ]
    },
    "type": "string"
   },
   "schemas:56": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-Content-Disposition",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-Content-Disposition"
     ]
    },
    "type": "string"
   },
   "schemas:57": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-Cache-Control",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-Cache-Control"
     ]
    },
    "type": "string"
   },
   "schemas:58": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobType",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-BlobType"
     ]
    },
    "type": "string",
    "enum": [
     "BlockBlob",
     "PageBlob",
     "AppendBlob"
    ],
    "x-ms-enum": {
     "name": "BlobType",
     "modelAsString": false
    }
   },
   "schemas:59": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-CopyId",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-CopyId"
     ]
    },
    "type": "string"
   },
   "schemas:60": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-CopySource",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-CopySource"
     ]
    },
    "type": "string"
   },
   "schemas:61": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-CopyProgress",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-CopyProgress"
     ]
    },
    "type": "string"
   },
   "schemas:62": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-CopyCompletionTime",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-CopyCompletionTime"
     ]
    },
    "type": "string",
    "format": "date-time-rfc1123"
   },
   "schemas:63": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-CopyStatusDescription",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-CopyStatusDescription"
     ]
    },
    "type": "string"
   },
   "schemas:64": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-DestinationSnapshot",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-DestinationSnapshot"
     ]
    },
    "type": "string"
   },
   "schemas:65": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobProperties-DeletedTime",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobProperties-DeletedTime"
     ]
    },
    "type": "string",
    "format": "date-time-rfc1123"
   },
   "schemas:66": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Logging",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Logging"
     ]
    },
    "description": "Azure Analytics Logging settings.",
    "type": "object",
    "properties": {
     "Version": {
      "$ref": "#/components/schemas/schemas:67",
      "description": "The version of Storage Analytics to configure."
     },
     "Delete": {
      "description": "Indicates whether all delete requests should be logged.",
      "type": "boolean"
     },
     "Read": {
      "description": "Indicates whether all read requests should be logged.",
      "type": "boolean"
     },
     "Write": {
      "description": "Indicates whether all write requests should be logged.",
      "type": "boolean"
     },
     "RetentionPolicy": {
      "$ref": "#/components/schemas/schemas:95"
     }
    },
    "required": [
     "Version",
     "Delete",
     "Read",
     "Write",
     "RetentionPolicy"
    ]
   },
   "schemas:67": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Logging-Version",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Logging-Version"
     ]
    },
    "description": "The version of Storage Analytics to configure.",
    "type": "string"
   },
   "schemas:68": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Metadata",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Metadata"
     ]
    },
    "type": "object",
    "additionalProperties": {
     "$ref": "#/components/schemas/schemas:0"
    }
   },
   "schemas:70": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Metrics",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Metrics"
     ]
    },
    "description": "",
    "properties": {
     "Version": {
      "$ref": "#/components/schemas/schemas:71",
      "description": "The version of Storage Analytics to configure."
     },
     "Enabled": {
      "description": "Indicates whether metrics are enabled for the Blob service.",
      "type": "boolean"
     },
     "IncludeAPIs": {
      "description": "Indicates whether metrics should generate summary statistics for called API operations.",
      "type": "boolean"
     },
     "RetentionPolicy": {
      "$ref": "#/components/schemas/schemas:95"
     }
    },
    "required": [
     "Enabled"
    ]
   },
   "schemas:71": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Metrics-Version",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Metrics-Version"
     ]
    },
    "description": "The version of Storage Analytics to configure.",
    "type": "string"
   },
   "schemas:72": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListBlobsResponse",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListBlobsResponse"
     ]
    },
    "xml": {
     "name": "EnumerationResults"
    },
    "description": "An enumeration of blobs",
    "type": "object",
    "properties": {
     "ServiceEndpoint": {
      "$ref": "#/components/schemas/schemas:73"
     },
     "ContainerName": {
      "$ref": "#/components/schemas/schemas:74"
     },
     "Prefix": {
      "$ref": "#/components/schemas/schemas:75"
     },
     "Marker": {
      "$ref": "#/components/schemas/schemas:76"
     },
     "MaxResults": {
      "type": "integer"
     },
     "Delimiter": {
      "$ref": "#/components/schemas/schemas:77"
     },
     "Blobs": {
      "$ref": "#/components/schemas/schemas:79"
     },
     "NextMarker": {
      "$ref": "#/components/schemas/schemas:78"
     }
    },
    "required": [
     "ServiceEndpoint",
     "ContainerName",
     "Prefix",
     "Marker",
     "MaxResults",
     "Delimiter",
     "Blobs",
     "NextMarker"
    ]
   },
   "schemas:73": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListBlobsResponse-ServiceEndpoint",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListBlobsResponse-ServiceEndpoint"
     ]
    },
    "type": "string",
    "xml": {
     "attribute": true
    }
   },
   "schemas:74": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListBlobsResponse-ContainerName",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListBlobsResponse-ContainerName"
     ]
    },
    "type": "string",
    "xml": {
     "attribute": true
    }
   },
   "schemas:75": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListBlobsResponse-Prefix",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListBlobsResponse-Prefix"
     ]
    },
    "type": "string"
   },
   "schemas:76": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListBlobsResponse-Marker",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListBlobsResponse-Marker"
     ]
    },
    "type": "string"
   },
   "schemas:77": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListBlobsResponse-Delimiter",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListBlobsResponse-Delimiter"
     ]
    },
    "type": "string"
   },
   "schemas:78": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ListBlobsResponse-NextMarker",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ListBlobsResponse-NextMarker"
     ]
    },
    "type": "string"
   },
   "schemas:79": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Blobs",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Blobs"
     ]
    },
    "type": "object",
    "properties": {
     "BlobPrefix": {
      "$ref": "#/components/schemas/schemas:80"
     },
     "Blob": {
      "$ref": "#/components/schemas/schemas:81"
     }
    }
   },
   "schemas:80": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Blobs-BlobPrefix",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Blobs-BlobPrefix"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:82"
    }
   },
   "schemas:81": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "Blobs-Blob",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/Blobs-Blob"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:46"
    }
   },
   "schemas:82": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobPrefix",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobPrefix"
     ]
    },
    "type": "object",
    "properties": {
     "Name": {
      "$ref": "#/components/schemas/schemas:83"
     }
    },
    "required": [
     "Name"
    ]
   },
   "schemas:83": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "BlobPrefix-Name",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/BlobPrefix-Name"
     ]
    },
    "type": "string"
   },
   "schemas:84": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "PublicAccessType",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/PublicAccessType"
     ]
    },
    "type": "string",
    "enum": [
     "container",
     "blob"
    ],
    "x-ms-enum": {
     "name": "PublicAccessType",
     "modelAsString": true
    }
   },
   "schemas:85": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "CopyStatusType",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/CopyStatus"
     ]
    },
    "type": "string",
    "enum": [
     "pending",
     "success",
     "aborted",
     "failed"
    ],
    "x-ms-enum": {
     "name": "CopyStatusType",
     "modelAsString": false
    }
   },
   "schemas:86": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "LeaseDurationType",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/LeaseDuration"
     ]
    },
    "type": "string",
    "enum": [
     "infinite",
     "fixed"
    ],
    "x-ms-enum": {
     "name": "LeaseDurationType",
     "modelAsString": false
    }
   },
   "schemas:87": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "LeaseStateType",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/LeaseState"
     ]
    },
    "type": "string",
    "enum": [
     "available",
     "leased",
     "expired",
     "breaking",
     "broken"
    ],
    "x-ms-enum": {
     "name": "LeaseStateType",
     "modelAsString": false
    }
   },
   "schemas:88": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "LeaseStatusType",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/LeaseStatus"
     ]
    },
    "type": "string",
    "enum": [
     "locked",
     "unlocked"
    ],
    "x-ms-enum": {
     "name": "LeaseStatusType",
     "modelAsString": false
    }
   },
   "schemas:89": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "AccessPolicy",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/AccessPolicy"
     ]
    },
    "type": "object",
    "description": "An Access policy",
    "properties": {
     "Start": {
      "$ref": "#/components/schemas/schemas:90",
      "description": "the date-time the policy is active"
     },
     "Expiry": {
      "$ref": "#/components/schemas/schemas:91",
      "description": "the date-time the policy expires"
     },
     "Permission": {
      "$ref": "#/components/schemas/schemas:92",
      "description": "the permissions for the acl policy"
     }
    },
    "required": [
     "Start",
     "Expiry",
     "Permission"
    ]
   },
   "schemas:90": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "AccessPolicy-Start",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/AccessPolicy-Start"
     ]
    },
    "description": "the date-time the policy is active",
    "type": "string",
    "format": "date-time"
   },
   "schemas:91": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "AccessPolicy-Expiry",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/AccessPolicy-Expiry"
     ]
    },
    "description": "the date-time the policy expires",
    "type": "string",
    "format": "date-time"
   },
   "schemas:92": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "AccessPolicy-Permission",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/AccessPolicy-Permission"
     ]
    },
    "description": "the permissions for the acl policy",
    "type": "string"
   },
   "schemas:93": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "AccessTier",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/AccessTier"
     ]
    },
    "type": "string",
    "enum": [
     "P4",
     "P6",
     "P10",
     "P20",
     "P30",
     "P40",
     "P50",
     "Hot",
     "Cool",
     "Archive"
    ],
    "x-ms-enum": {
     "name": "AccessTier",
     "modelAsString": true
    }
   },
   "schemas:94": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ArchiveStatus",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ArchiveStatus"
     ]
    },
    "type": "string",
    "enum": [
     "rehydrate-pending-to-hot",
     "rehydrate-pending-to-cool"
    ],
    "x-ms-enum": {
     "name": "ArchiveStatus",
     "modelAsString": true
    }
   },
   "schemas:95": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "RetentionPolicy",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/RetentionPolicy"
     ]
    },
    "description": "the retention policy",
    "type": "object",
    "properties": {
     "Enabled": {
      "description": "Indicates whether a retention policy is enabled for the storage service",
      "type": "boolean"
     },
     "Days": {
      "description": "Indicates the number of days that metrics or logging or soft-deleted data should be retained. All data older than this value will be deleted",
      "type": "integer",
      "minimum": 1
     }
    },
    "required": [
     "Enabled"
    ]
   },
   "schemas:96": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "SignedIdentifier",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/SignedIdentifier"
     ]
    },
    "description": "signed identifier",
    "type": "object",
    "properties": {
     "Id": {
      "$ref": "#/components/schemas/schemas:97",
      "description": "a unique id"
     },
     "AccessPolicy": {
      "description": "The access policy",
      "$ref": "#/components/schemas/schemas:89"
     }
    },
    "xml": {
     "name": "SignedIdentifier"
    },
    "required": [
     "Id",
     "AccessPolicy"
    ]
   },
   "schemas:97": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "SignedIdentifier-Id",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/SignedIdentifier-Id"
     ]
    },
    "type": "string",
    "description": "a unique id"
   },
   "schemas:98": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "SignedIdentifiers",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/SignedIdentifiers"
     ]
    },
    "description": "a collection of signed identifiers",
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:96"
    },
    "xml": {
     "wrapped": true,
     "name": "SignedIdentifiers"
    }
   },
   "schemas:99": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "StorageServiceProperties",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/StorageServiceProperties"
     ]
    },
    "description": "Storage Service Properties.",
    "type": "object",
    "properties": {
     "Logging": {
      "description": "Azure Analytics Logging settings",
      "$ref": "#/components/schemas/schemas:66"
     },
     "HourMetrics": {
      "description": "A summary of request statistics grouped by API in hourly aggregates for blobs",
      "$ref": "#/components/schemas/schemas:70"
     },
     "MinuteMetrics": {
      "description": "a summary of request statistics grouped by API in minute aggregates for blobs",
      "$ref": "#/components/schemas/schemas:70"
     },
     "Cors": {
      "$ref": "#/components/schemas/schemas:100",
      "description": "The set of CORS rules."
     },
     "DefaultServiceVersion": {
      "$ref": "#/components/schemas/schemas:101",
      "description": "The default version to use for requests to the Blob service if an incoming request's version is not specified. Possible values include version 2008-10-27 and all more recent versions"
     },
     "DeleteRetentionPolicy": {
      "description": "The Delete Retention Policy for the service",
      "$ref": "#/components/schemas/schemas:95"
     }
    }
   },
   "schemas:100": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "StorageServiceProperties-Cors",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/StorageServiceProperties-Cors"
     ]
    },
    "description": "The set of CORS rules.",
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:41"
    },
    "xml": {
     "wrapped": true
    }
   },
   "schemas:101": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "StorageServiceProperties-DefaultServiceVersion",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/StorageServiceProperties-DefaultServiceVersion"
     ]
    },
    "description": "The default version to use for requests to the Blob service if an incoming request's version is not specified. Possible values include version 2008-10-27 and all more recent versions",
    "type": "string"
   },
   "schemas:102": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ComplexTypeNoMeta",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ComplexTypeNoMeta"
     ]
    },
    "description": "I am a complex type with no XML node",
    "type": "object",
    "properties": {
     "ID": {
      "$ref": "#/components/schemas/schemas:103",
      "description": "The id of the res"
     }
    }
   },
   "schemas:103": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ComplexTypeNoMeta-ID",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ComplexTypeNoMeta-ID"
     ]
    },
    "description": "The id of the res",
    "type": "string"
   },
   "schemas:104": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ComplexTypeWithMeta",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ComplexTypeWithMeta"
     ]
    },
    "description": "I am a complex type with XML node",
    "type": "object",
    "properties": {
     "ID": {
      "$ref": "#/components/schemas/schemas:105",
      "description": "The id of the res"
     }
    },
    "xml": {
     "name": "XMLComplexTypeWithMeta"
    }
   },
   "schemas:105": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "ComplexTypeWithMeta-ID",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/ComplexTypeWithMeta-ID"
     ]
    },
    "description": "The id of the res",
    "type": "string"
   },
   "schemas:106": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "RootWithRefAndNoMeta",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/RootWithRefAndNoMeta"
     ]
    },
    "description": "I am root, and I ref a model with no meta",
    "type": "object",
    "properties": {
     "RefToModel": {
      "description": "XML will use RefToModel",
      "$ref": "#/components/schemas/schemas:102"
     },
     "Something": {
      "$ref": "#/components/schemas/schemas:107",
      "description": "Something else (just to avoid flattening)"
     }
    }
   },
   "schemas:107": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "RootWithRefAndNoMeta-Something",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/RootWithRefAndNoMeta-Something"
     ]
    },
    "description": "Something else (just to avoid flattening)",
    "type": "string"
   },
   "schemas:108": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "RootWithRefAndMeta",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/RootWithRefAndMeta"
     ]
    },
    "description": "I am root, and I ref a model WITH meta",
    "type": "object",
    "properties": {
     "RefToModel": {
      "description": "XML will use XMLComplexTypeWithMeta",
      "$ref": "#/components/schemas/schemas:104"
     },
     "Something": {
      "$ref": "#/components/schemas/schemas:109",
      "description": "Something else (just to avoid flattening)"
     }
    }
   },
   "schemas:109": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "RootWithRefAndMeta-Something",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/schemas/RootWithRefAndMeta-Something"
     ]
    },
    "description": "Something else (just to avoid flattening)",
    "type": "string"
   }
  },
  "requestBodies": {
   "requestBodies:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-complex_type_ref_no_metaÂ·putÂ·requestbody",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-complex_type_ref_no_metaÂ·putÂ·requestbody"
     ]
    },
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:106"
      }
     }
    },
    "required": true,
    "x-ms-requestBody-name": "model"
   },
   "requestBodies:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-complex_type_ref_with_metaÂ·putÂ·requestbody",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-complex_type_ref_with_metaÂ·putÂ·requestbody"
     ]
    },
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:108"
      }
     }
    },
    "required": true,
    "x-ms-requestBody-name": "model"
   },
   "requestBodies:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-simpleÂ·putÂ·requestbody",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-simpleÂ·putÂ·requestbody",
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-empty_listÂ·putÂ·requestbody"
     ]
    },
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:16"
      }
     }
    },
    "required": true,
    "x-ms-requestBody-name": "slideshow"
   },
   "requestBodies:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-wrapped_listsÂ·putÂ·requestbody",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-wrapped_listsÂ·putÂ·requestbody"
     ]
    },
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:21"
      }
     }
    },
    "required": true,
    "x-ms-requestBody-name": "wrappedLists"
   },
   "requestBodies:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-empty_wrapped_listsÂ·putÂ·requestbody",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-empty_wrapped_listsÂ·putÂ·requestbody"
     ]
    },
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:21"
      }
     }
    },
    "required": true,
    "x-ms-requestBody-name": "appleBarrel"
   },
   "requestBodies:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-root_listÂ·putÂ·requestbody",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-root_listÂ·putÂ·requestbody",
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-root_list_single_itemÂ·putÂ·requestbody",
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-empty_root_listÂ·putÂ·requestbody"
     ]
    },
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:2"
      }
     }
    },
    "required": true,
    "x-ms-requestBody-name": "bananas"
   },
   "requestBodies:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-empty_child_elementÂ·putÂ·requestbody",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-empty_child_elementÂ·putÂ·requestbody"
     ]
    },
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:26"
      }
     }
    },
    "required": true,
    "x-ms-requestBody-name": "banana"
   },
   "requestBodies:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-comp-properties-restype-serviceÂ·putÂ·requestbody",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-comp-properties-restype-serviceÂ·putÂ·requestbody"
     ]
    },
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:99"
      }
     }
    },
    "required": true,
    "x-ms-requestBody-name": "properties"
   },
   "requestBodies:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-mycontainer-comp-acl-restype-containerÂ·putÂ·requestbody",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-mycontainer-comp-acl-restype-containerÂ·putÂ·requestbody"
     ]
    },
    "content": {
     "application/xml": {
      "schema": {
       "$ref": "#/components/schemas/schemas:98"
      }
     }
    },
    "required": true,
    "x-ms-requestBody-name": "properties"
   },
   "requestBodies:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-jsoninputÂ·putÂ·requestbody",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/requestBodies/pathsÂ·xml-jsoninputÂ·putÂ·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:7"
      }
     }
    },
    "required": true,
    "x-ms-requestBody-name": "properties"
   }
  },
  "headers": {
   "headers:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-headersÂ·getÂ·responsesÂ·200Â·headersÂ·custom_header",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/headers/pathsÂ·xml-headersÂ·getÂ·responsesÂ·200Â·headersÂ·custom_header"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:0"
    },
    "description": "A custom response header."
   }
  },
  "parameters": {
   "parameters:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-comp-listÂ·getÂ·parametersÂ·0",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/parameters/pathsÂ·xml-comp-listÂ·getÂ·parametersÂ·0",
      "http://localhost:3000/__files/xml-service.json#/components/parameters/pathsÂ·xml-mycontainer-comp-list-restype-containerÂ·getÂ·parametersÂ·0"
     ]
    },
    "name": "comp",
    "in": "query",
    "schema": {
     "enum": [
      "list"
     ],
     "type": "string"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-comp-properties-restype-serviceÂ·getÂ·parametersÂ·0",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/parameters/pathsÂ·xml-comp-properties-restype-serviceÂ·getÂ·parametersÂ·0",
      "http://localhost:3000/__files/xml-service.json#/components/parameters/pathsÂ·xml-comp-properties-restype-serviceÂ·putÂ·parametersÂ·0"
     ]
    },
    "name": "comp",
    "in": "query",
    "schema": {
     "enum": [
      "properties"
     ],
     "type": "string"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-comp-properties-restype-serviceÂ·getÂ·parametersÂ·1",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/parameters/pathsÂ·xml-comp-properties-restype-serviceÂ·getÂ·parametersÂ·1",
      "http://localhost:3000/__files/xml-service.json#/components/parameters/pathsÂ·xml-comp-properties-restype-serviceÂ·putÂ·parametersÂ·1"
     ]
    },
    "name": "restype",
    "in": "query",
    "schema": {
     "enum": [
      "service"
     ],
     "type": "string"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-mycontainer-comp-acl-restype-containerÂ·getÂ·parametersÂ·0",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/parameters/pathsÂ·xml-mycontainer-comp-acl-restype-containerÂ·getÂ·parametersÂ·0",
      "http://localhost:3000/__files/xml-service.json#/components/parameters/pathsÂ·xml-mycontainer-comp-acl-restype-containerÂ·putÂ·parametersÂ·0"
     ]
    },
    "name": "comp",
    "in": "query",
    "schema": {
     "enum": [
      "acl"
     ],
     "type": "string"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0.0"
     ],
     "filename": [
      "mem:///100?oai3.shaken.json"
     ],
     "name": "pathsÂ·xml-mycontainer-comp-acl-restype-containerÂ·getÂ·parametersÂ·1",
     "originalLocations": [
      "http://localhost:3000/__files/xml-service.json#/components/parameters/pathsÂ·xml-mycontainer-comp-acl-restype-containerÂ·getÂ·parametersÂ·1",
      "http://localhost:3000/__files/xml-service.json#/components/parameters/pathsÂ·xml-mycontainer-comp-acl-restype-containerÂ·putÂ·parametersÂ·1",
      "http://localhost:3000/__files/xml-service.json#/components/parameters/pathsÂ·xml-mycontainer-comp-list-restype-containerÂ·getÂ·parametersÂ·1"
     ]
    },
    "name": "restype",
    "in": "query",
    "schema": {
     "enum": [
      "container"
     ],
     "type": "string"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   }
  }
 },
 "servers": [
  {
   "url": "http://localhost:3000/"
  }
 ]
}