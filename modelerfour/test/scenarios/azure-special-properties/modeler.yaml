!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_9
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    properties:
    - !<!Property> 
      schema: !<!NumberSchema> &ref_2
        type: integer
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForstatus
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      required: false
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!ConstantSchema> &ref_5
        type: constant
        value: !<!ConstantValue> 
          value: 1
          language:
            default:
              name: ''
              description: ''
        valueType: !<!NumberSchema> &ref_3
          type: number
          precision: 32
          language: !<!Languages> 
            default:
              name: number
              description: MISSING·SCHEMA-DESCRIPTION-NUMBER
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: typeForconstantId
            description: MISSING·SCHEMA-DESCRIPTION-CHOICE
        protocol: !<!Protocols> {}
      required: true
      serializedName: constantId
      language: !<!Languages> 
        default:
          name: constantId
          description: MISSING·SCHEMA-DESCRIPTION-CHOICE
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_0
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-07-01-preview
        language: !<!Languages> 
          default:
            name: Error-message
            description: MISSING·SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      required: false
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: MISSING·SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Error
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150701Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> 
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    properties:
    - !<!Property> 
      schema: !<!NumberSchema> &ref_4
        type: integer
        precision: 32
        language: !<!Languages> 
          default:
            name: typeForid
            description: MISSING·SCHEMA-DESCRIPTION-INTEGER
        protocol: !<!Protocols> {}
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: MISSING·SCHEMA-DESCRIPTION-INTEGER
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_1
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-07-01-preview
        language: !<!Languages> 
          default:
            name: OdataFilter-name
            description: MISSING·SCHEMA-DESCRIPTION-STRING
        protocol: !<!Protocols> {}
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: MISSING·SCHEMA-DESCRIPTION-STRING
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: OdataFilter
        description: MISSING·SCHEMA-DESCRIPTION-OBJECTSCHEMA
        namespace: Api20150701Preview
    protocol: !<!Protocols> {}
  constants:
  - *ref_5
  - !<!ConstantSchema> &ref_11
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: !<!StringSchema> &ref_6
      type: string
      language: !<!Languages> 
        default:
          name: string
          description: simple string
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-07-01-preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_6
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-07-01-preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_6
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-07-01-preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_6
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-07-01-preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_6
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-07-01-preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_6
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-07-01-preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_6
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-07-01-preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_6
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-07-01-preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_6
    language: !<!Languages> 
      default:
        name: ApiVersion-2015-07-01-preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_13
    type: constant
    value: !<!ConstantValue> 
      value: path1/path2/path3
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_6
    language: !<!Languages> 
      default:
        name: ''
        description: MISSING·SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_14
    type: constant
    value: !<!ConstantValue> 
      value: value1&q2=value2&q3=value3
      language:
        default:
          name: ''
          description: ''
    valueType: *ref_6
    language: !<!Languages> 
      default:
        name: ''
        description: MISSING·SCHEMA-DESCRIPTION-CHOICE
    protocol: !<!Protocols> {}
  numbers:
  - *ref_2
  - *ref_3
  - !<!NumberSchema> &ref_15
    type: integer
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    precision: 32
    language: !<!Languages> 
      default:
        name: paths·azurespecials-odata-filter·get·parameters·1·schema
        description: MISSING·SCHEMA-DESCRIPTION-INTEGER
    protocol: !<!Protocols> {}
  - *ref_4
  strings:
  - *ref_6
  - !<!StringSchema> &ref_8
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    language: !<!Languages> 
      default:
        name: paths·azurespecials-customnamedrequestid·post·responses·200·headers·foo_request_id·schema
        description: MISSING·SCHEMA-DESCRIPTION-STRING
        header: foo-request-id
    protocol: !<!Protocols> {}
  - *ref_0
  - *ref_1
globalParameters:
- !<!Parameter> &ref_10
  schema: *ref_8
  implementation: Client
  required: true
  extensions:
    x-ms-priority: 0
  language: !<!Languages> 
    default:
      name: subscriptionId
      description: 'The subscription id, which appears in the path, always modeled in credentials. The value is always ''1234-5678-9012-3456'''
      serializedName: subscriptionId
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: path
- !<!Parameter> &ref_7
  schema: *ref_6
  clientDefaultValue: 'http://localhost:3000'
  implementation: Client
  required: true
  language: !<!Languages> 
    default:
      name: $host
      description: server parameter
      serializedName: $host
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: uri
- !<!Parameter> &ref_12
  schema: *ref_11
  implementation: Client
  required: true
  language: !<!Languages> 
    default:
      name: ApiVersion
      description: Api Version
      serializedName: api-version
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: query
info: !<!Info> 
  description: Test Infrastructure for AutoRest
  title: azure-special-properties
operationGroups:
- !<!OperationGroup> 
  $key: x-ms-client-request-id
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/overwrite/x-ms-client-request-id/method/
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: Get
        description: Get method that overwrites x-ms-client-request header with value 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: x-ms-client-request-id
            description: 'This should appear as a method parameter, use value ''9C4D50EE-2D56-4CD3-8152-34347DC9F2B0'''
            serializedName: x-ms-client-request-id
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/overwrite/x-ms-client-request-id/via-param/method/
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ParamGet
        description: Get method that overwrites x-ms-client-request header with value 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: x-ms-client-request-id
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: subscriptionInCredentials
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_10
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/method/string/none/path/global/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postMethodGlobalValid
        description: POST method with subscriptionId modeled in credentials.  Set the credential subscriptionId to '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_10
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/method/string/none/path/global/null/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postMethodGlobalNull
        description: 'POST method with subscriptionId modeled in credentials.  Set the credential subscriptionId to null, and client-side validation should prevent you from making this call'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_10
      - *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/method/string/none/path/globalNotProvided/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postMethodGlobalNotProvidedValid
        description: POST method with subscriptionId modeled in credentials.  Set the credential subscriptionId to '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_10
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/path/string/none/path/global/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postPathGlobalValid
        description: POST method with subscriptionId modeled in credentials.  Set the credential subscriptionId to '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_10
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/swagger/string/none/path/global/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postSwaggerGlobalValid
        description: POST method with subscriptionId modeled in credentials.  Set the credential subscriptionId to '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: subscriptionInCredentials
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: subscriptionInMethod
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: 'This should appear as a method parameter, use value ''1234-5678-9012-3456'''
            serializedName: subscriptionId
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/method/string/none/path/local/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postMethodLocalValid
        description: POST method with subscriptionId modeled in the method.  pass in subscription id = '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: 'This should appear as a method parameter, use value ''1234-5678-9012-3456'''
            serializedName: subscriptionId
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/method/string/none/path/local/null/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postMethodLocalNull
        description: 'POST method with subscriptionId modeled in the method.  pass in subscription id = null, client-side validation should prevent you from making this call'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: 'This should appear as a method parameter, use value ''1234-5678-9012-3456'''
            serializedName: subscriptionId
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/path/string/none/path/local/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postPathLocalValid
        description: POST method with subscriptionId modeled in the method.  pass in subscription id = '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: 'This should appear as a method parameter, use value ''1234-5678-9012-3456'''
            serializedName: subscriptionId
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/swagger/string/none/path/local/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: postSwaggerLocalValid
        description: POST method with subscriptionId modeled in the method.  pass in subscription id = '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: subscriptionInMethod
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: apiVersionDefault
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/method/string/none/query/global/2015-07-01-preview
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getMethodGlobalValid
        description: GET method with api-version modeled in global settings.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/method/string/none/query/globalNotProvided/2015-07-01-preview
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getMethodGlobalNotProvidedValid
        description: GET method with api-version modeled in global settings.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/path/string/none/query/global/2015-07-01-preview
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getPathGlobalValid
        description: GET method with api-version modeled in global settings.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/swagger/string/none/query/global/2015-07-01-preview
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getSwaggerGlobalValid
        description: GET method with api-version modeled in global settings.
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: apiVersionDefault
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: apiVersionLocal
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/method/string/none/query/local/2.0
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getMethodLocalValid
        description: Get method with api-version modeled in the method.  pass in api-version = '2.0' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/method/string/none/query/local/null
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getMethodLocalNull
        description: Get method with api-version modeled in the method.  pass in api-version = null to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/path/string/none/query/local/2.0
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getPathLocalValid
        description: Get method with api-version modeled in the method.  pass in api-version = '2.0' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/swagger/string/none/query/local/2.0
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getSwaggerLocalValid
        description: Get method with api-version modeled in the method.  pass in api-version = '2.0' to succeed
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: apiVersionLocal
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: skipUrlEncoding
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        required: true
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: unencodedPathParam
            description: Unencoded path parameter with value 'path1/path2/path3'
            serializedName: unencodedPathParam
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/skipUrlEncoding/method/path/valid/{unencodedPathParam}'
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getMethodPathValid
        description: Get method with unencoded path parameter with value 'path1/path2/path3'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        required: true
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: unencodedPathParam
            description: Unencoded path parameter with value 'path1/path2/path3'
            serializedName: unencodedPathParam
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/skipUrlEncoding/path/path/valid/{unencodedPathParam}'
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getPathPathValid
        description: Get method with unencoded path parameter with value 'path1/path2/path3'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_13
        implementation: Method
        required: true
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: unencodedPathParam
            description: An unencoded path parameter with value 'path1/path2/path3'
            serializedName: unencodedPathParam
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/skipUrlEncoding/swagger/path/valid/{unencodedPathParam}'
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getSwaggerPathValid
        description: Get method with unencoded path parameter with value 'path1/path2/path3'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        required: true
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: q1
            description: Unencoded query parameter with value 'value1&q2=value2&q3=value3'
            serializedName: q1
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/skipUrlEncoding/method/query/valid
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getMethodQueryValid
        description: Get method with unencoded query parameter with value 'value1&q2=value2&q3=value3'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: q1
            description: Unencoded query parameter with value null
            serializedName: q1
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/skipUrlEncoding/method/query/null
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getMethodQueryNull
        description: Get method with unencoded query parameter with value null
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        required: true
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: q1
            description: Unencoded query parameter with value 'value1&q2=value2&q3=value3'
            serializedName: q1
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/skipUrlEncoding/path/query/valid
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getPathQueryValid
        description: Get method with unencoded query parameter with value 'value1&q2=value2&q3=value3'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_14
        implementation: Method
        required: true
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: q1
            description: An unencoded query parameter with value 'value1&q2=value2&q3=value3'
            serializedName: q1
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/skipUrlEncoding/swagger/query/valid
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getSwaggerQueryValid
        description: Get method with unencoded query parameter with value 'value1&q2=value2&q3=value3'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: skipUrlEncoding
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: odata
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        language: !<!Languages> 
          default:
            name: $filter
            description: The filter parameter with value '$filter=id gt 5 and name eq 'foo''.
            serializedName: $filter
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        schema: *ref_15
        implementation: Method
        language: !<!Languages> 
          default:
            name: $top
            description: The top parameter with value 10.
            serializedName: $top
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        language: !<!Languages> 
          default:
            name: $orderby
            description: The orderby parameter with value id.
            serializedName: $orderby
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/odata/filter
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-odata: '#/components/schemas/OdataFilter'
    language: !<!Languages> 
      default:
        name: getWithFilter
        description: Specify filter parameter with value '$filter=id gt 5 and name eq 'foo'&$orderby=id&$top=10'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: odata
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: header
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        required: true
        extensions:
          x-ms-client-request-id: true
        language: !<!Languages> 
          default:
            name: foo-client-request-id
            description: The fooRequestId
            serializedName: foo-client-request-id
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/customNamedRequestId
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_8
            header: foo-request-id
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-request-id: foo-request-id
    language: !<!Languages> 
      default:
        name: customNamedRequestId
        description: Send foo-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 in the header of the request
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        required: true
        extensions:
          x-ms-client-request-id: true
          x-ms-parameter-grouping: {}
        language: !<!Languages> 
          default:
            name: foo-client-request-id
            description: The fooRequestId
            serializedName: foo-client-request-id
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/customNamedRequestIdParamGrouping
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_8
            header: foo-request-id
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-request-id: foo-request-id
    language: !<!Languages> 
      default:
        name: customNamedRequestIdParamGrouping
        description: 'Send foo-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 in the header of the request, via a parameter group'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_7
      - !<!Parameter> 
        schema: *ref_8
        implementation: Method
        required: true
        extensions:
          x-ms-client-request-id: true
        language: !<!Languages> 
          default:
            name: foo-client-request-id
            description: The fooRequestId
            serializedName: foo-client-request-id
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/customNamedRequestIdHead
          method: head
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_8
            header: foo-request-id
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '404'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_9
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-request-id: foo-request-id
    language: !<!Languages> 
      default:
        name: customNamedRequestIdHead
        description: Send foo-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 in the header of the request
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: header
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
