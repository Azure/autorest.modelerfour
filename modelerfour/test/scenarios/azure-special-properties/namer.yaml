!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_11
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    properties:
    - !<!Property> 
      schema: !<!NumberSchema> &ref_0
        type: integer
        precision: 32
        language: !<!Languages> 
          default:
            name: Integer
            description: ''
        protocol: !<!Protocols> {}
      required: false
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: ''
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!ConstantSchema> &ref_1
        type: constant
        value: !<!ConstantValue> 
          value: 1
        valueType: !<!NumberSchema> &ref_5
          type: number
          precision: 32
          language: !<!Languages> 
            default:
              name: Number
              description: ''
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: Constant0
            description: ''
        protocol: !<!Protocols> {}
      required: true
      serializedName: constantId
      language: !<!Languages> 
        default:
          name: constantId
          description: ''
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_6
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-07-01-preview
        language: !<!Languages> 
          default:
            name: ErrorMessage
            description: ''
        protocol: !<!Protocols> {}
      required: false
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Error
        description: ''
        namespace: Api20150701Preview
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> 
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    properties:
    - !<!Property> 
      schema: *ref_0
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: ''
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_7
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-07-01-preview
        language: !<!Languages> 
          default:
            name: OdataFilterName
            description: ''
        protocol: !<!Protocols> {}
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: OdataFilter
        description: ''
        namespace: Api20150701Preview
    protocol: !<!Protocols> {}
  constants:
  - *ref_1
  - !<!ConstantSchema> &ref_8
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
    valueType: !<!StringSchema> &ref_2
      type: string
      language: !<!Languages> 
        default:
          name: String
          description: simple string
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ApiVersion20150701Preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: ApiVersion20150701Preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: ApiVersion20150701Preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: ApiVersion20150701Preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: ApiVersion20150701Preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: ApiVersion20150701Preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: ApiVersion20150701Preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: ApiVersion20150701Preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> 
    type: constant
    value: !<!ConstantValue> 
      value: 2015-07-01-preview
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: ApiVersion20150701Preview
        description: Api Version (2015-07-01-preview)
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_20
    type: constant
    value: !<!ConstantValue> 
      value: path1/path2/path3
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: Constant10
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_24
    type: constant
    value: !<!ConstantValue> 
      value: value1&q2=value2&q3=value3
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: Constant11
        description: ''
    protocol: !<!Protocols> {}
  groups:
  - !<!GroupSchema> &ref_4
    type: group
    properties:
    - !<!Property> 
      schema: !<!StringSchema> &ref_3
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 2015-07-01-preview
        language: !<!Languages> 
          default:
            name: String
            description: ''
            header: foo-request-id
        protocol: !<!Protocols> {}
      originalParameter:
      - !<!Parameter> &ref_30
        schema: *ref_3
        groupedBy: !<!Parameter> &ref_31
          schema: *ref_4
          implementation: Method
          required: true
          language: !<!Languages> 
            default:
              name: headerCustomNamedRequestIdParamGroupingParameters
              description: Parameter group
          protocol: !<!Protocols> {}
        implementation: Method
        required: true
        extensions:
          x-ms-client-request-id: true
        language: !<!Languages> 
          default:
            name: foo-client-request-id
            description: The fooRequestId
            serializedName: foo-client-request-id
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      required: true
      serializedName: foo-client-request-id
      language: !<!Languages> 
        default:
          name: fooClientRequestId
          description: The fooRequestId
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: HeaderCustomNamedRequestIdParamGroupingParameters
        description: Parameter group
    protocol: !<!Protocols> {}
  numbers:
  - *ref_0
  - *ref_5
  - !<!NumberSchema> &ref_25
    type: integer
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    precision: 32
    language: !<!Languages> 
      default:
        name: Integer
        description: ''
    protocol: !<!Protocols> {}
  strings:
  - *ref_2
  - *ref_3
  - *ref_6
  - *ref_7
globalParameters:
- !<!Parameter> &ref_12
  schema: *ref_3
  implementation: Client
  required: true
  extensions:
    x-ms-priority: 0
  language: !<!Languages> 
    default:
      name: subscriptionId
      description: 'The subscription id, which appears in the path, always modeled in credentials. The value is always ''1234-5678-9012-3456'''
      serializedName: subscriptionId
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: path
- !<!Parameter> &ref_9
  schema: *ref_2
  clientDefaultValue: 'http://localhost:3000'
  implementation: Client
  required: true
  extensions:
    x-ms-skip-url-encoding: true
  language: !<!Languages> 
    default:
      name: $host
      description: server parameter
      serializedName: $host
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: uri
- !<!Parameter> &ref_13
  schema: *ref_8
  implementation: Client
  required: true
  language: !<!Languages> 
    default:
      name: ApiVersion
      description: Api Version
      serializedName: api-version
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: query
info: !<!Info> 
  description: Test Infrastructure for AutoRest
  title: azure-special-properties
operationGroups:
- !<!OperationGroup> 
  $key: x-ms-client-request-id
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/overwrite/x-ms-client-request-id/method/
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: Get
        description: Get method that overwrites x-ms-client-request header with value 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_10
        schema: *ref_3
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: xMSClientRequestId
            description: 'This should appear as a method parameter, use value ''9C4D50EE-2D56-4CD3-8152-34347DC9F2B0'''
            serializedName: x-ms-client-request-id
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      signatureParameters:
      - *ref_10
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/overwrite/x-ms-client-request-id/via-param/method/
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ParamGet
        description: Get method that overwrites x-ms-client-request header with value 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: XMSClientRequestId
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: subscriptionInCredentials
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_12
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/method/string/none/path/global/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostMethodGlobalValid
        description: POST method with subscriptionId modeled in credentials.  Set the credential subscriptionId to '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_12
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/method/string/none/path/global/null/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostMethodGlobalNull
        description: 'POST method with subscriptionId modeled in credentials.  Set the credential subscriptionId to null, and client-side validation should prevent you from making this call'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_12
      - *ref_13
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/method/string/none/path/globalNotProvided/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostMethodGlobalNotProvidedValid
        description: POST method with subscriptionId modeled in credentials.  Set the credential subscriptionId to '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_12
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/path/string/none/path/global/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostPathGlobalValid
        description: POST method with subscriptionId modeled in credentials.  Set the credential subscriptionId to '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_12
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/swagger/string/none/path/global/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostSwaggerGlobalValid
        description: POST method with subscriptionId modeled in credentials.  Set the credential subscriptionId to '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: SubscriptionInCredentials
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: subscriptionInMethod
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_14
        schema: *ref_3
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: 'This should appear as a method parameter, use value ''1234-5678-9012-3456'''
            serializedName: subscriptionId
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      signatureParameters:
      - *ref_14
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/method/string/none/path/local/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostMethodLocalValid
        description: POST method with subscriptionId modeled in the method.  pass in subscription id = '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_15
        schema: *ref_3
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: 'This should appear as a method parameter, use value ''1234-5678-9012-3456'''
            serializedName: subscriptionId
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      signatureParameters:
      - *ref_15
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/method/string/none/path/local/null/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostMethodLocalNull
        description: 'POST method with subscriptionId modeled in the method.  pass in subscription id = null, client-side validation should prevent you from making this call'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_16
        schema: *ref_3
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: 'This should appear as a method parameter, use value ''1234-5678-9012-3456'''
            serializedName: subscriptionId
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      signatureParameters:
      - *ref_16
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/path/string/none/path/local/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostPathLocalValid
        description: POST method with subscriptionId modeled in the method.  pass in subscription id = '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_17
        schema: *ref_3
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: subscriptionId
            description: 'This should appear as a method parameter, use value ''1234-5678-9012-3456'''
            serializedName: subscriptionId
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      signatureParameters:
      - *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/subscriptionId/swagger/string/none/path/local/1234-5678-9012-3456/{subscriptionId}'
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostSwaggerLocalValid
        description: POST method with subscriptionId modeled in the method.  pass in subscription id = '1234-5678-9012-3456' to succeed
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: SubscriptionInMethod
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: apiVersionDefault
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_13
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/method/string/none/query/global/2015-07-01-preview
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetMethodGlobalValid
        description: GET method with api-version modeled in global settings.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_13
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/method/string/none/query/globalNotProvided/2015-07-01-preview
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetMethodGlobalNotProvidedValid
        description: GET method with api-version modeled in global settings.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_13
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/path/string/none/query/global/2015-07-01-preview
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetPathGlobalValid
        description: GET method with api-version modeled in global settings.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_13
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/swagger/string/none/query/global/2015-07-01-preview
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetSwaggerGlobalValid
        description: GET method with api-version modeled in global settings.
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: ApiVersionDefault
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: apiVersionLocal
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_13
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/method/string/none/query/local/2.0
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetMethodLocalValid
        description: Get method with api-version modeled in the method.  pass in api-version = '2.0' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_13
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/method/string/none/query/local/null
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetMethodLocalNull
        description: Get method with api-version modeled in the method.  pass in api-version = null to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_13
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/path/string/none/query/local/2.0
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetPathLocalValid
        description: Get method with api-version modeled in the method.  pass in api-version = '2.0' to succeed
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_13
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/apiVersion/swagger/string/none/query/local/2.0
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetSwaggerLocalValid
        description: Get method with api-version modeled in the method.  pass in api-version = '2.0' to succeed
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: ApiVersionLocal
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: skipUrlEncoding
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_18
        schema: *ref_3
        implementation: Method
        required: true
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: unencodedPathParam
            description: Unencoded path parameter with value 'path1/path2/path3'
            serializedName: unencodedPathParam
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      signatureParameters:
      - *ref_18
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/skipUrlEncoding/method/path/valid/{unencodedPathParam}'
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetMethodPathValid
        description: Get method with unencoded path parameter with value 'path1/path2/path3'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_19
        schema: *ref_3
        implementation: Method
        required: true
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: unencodedPathParam
            description: Unencoded path parameter with value 'path1/path2/path3'
            serializedName: unencodedPathParam
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      signatureParameters:
      - *ref_19
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/skipUrlEncoding/path/path/valid/{unencodedPathParam}'
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetPathValid
        description: Get method with unencoded path parameter with value 'path1/path2/path3'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> 
        schema: *ref_20
        implementation: Method
        required: true
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: unencodedPathParam
            description: An unencoded path parameter with value 'path1/path2/path3'
            serializedName: unencodedPathParam
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: path
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: '/azurespecials/skipUrlEncoding/swagger/path/valid/{unencodedPathParam}'
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetSwaggerPathValid
        description: Get method with unencoded path parameter with value 'path1/path2/path3'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_21
        schema: *ref_3
        implementation: Method
        required: true
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: q1
            description: Unencoded query parameter with value 'value1&q2=value2&q3=value3'
            serializedName: q1
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      signatureParameters:
      - *ref_21
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/skipUrlEncoding/method/query/valid
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetMethodQueryValid
        description: Get method with unencoded query parameter with value 'value1&q2=value2&q3=value3'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_22
        schema: *ref_3
        implementation: Method
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: q1
            description: Unencoded query parameter with value null
            serializedName: q1
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      signatureParameters:
      - *ref_22
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/skipUrlEncoding/method/query/null
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetMethodQueryNull
        description: Get method with unencoded query parameter with value null
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_23
        schema: *ref_3
        implementation: Method
        required: true
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: q1
            description: Unencoded query parameter with value 'value1&q2=value2&q3=value3'
            serializedName: q1
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      signatureParameters:
      - *ref_23
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/skipUrlEncoding/path/query/valid
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetPathQueryValid
        description: Get method with unencoded query parameter with value 'value1&q2=value2&q3=value3'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> 
        schema: *ref_24
        implementation: Method
        required: true
        extensions:
          x-ms-skip-url-encoding: true
        language: !<!Languages> 
          default:
            name: q1
            description: An unencoded query parameter with value 'value1&q2=value2&q3=value3'
            serializedName: q1
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      signatureParameters: []
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/skipUrlEncoding/swagger/query/valid
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetSwaggerQueryValid
        description: Get method with unencoded query parameter with value 'value1&q2=value2&q3=value3'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: SkipUrlEncoding
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: odata
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_26
        schema: *ref_3
        implementation: Method
        language: !<!Languages> 
          default:
            name: filter
            description: The filter parameter with value '$filter=id gt 5 and name eq 'foo''.
            serializedName: $filter
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> &ref_27
        schema: *ref_25
        implementation: Method
        language: !<!Languages> 
          default:
            name: top
            description: The top parameter with value 10.
            serializedName: $top
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      - !<!Parameter> &ref_28
        schema: *ref_3
        implementation: Method
        language: !<!Languages> 
          default:
            name: orderby
            description: The orderby parameter with value id.
            serializedName: $orderby
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: query
      signatureParameters:
      - *ref_26
      - *ref_27
      - *ref_28
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/odata/filter
          method: get
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-odata: '#/components/schemas/OdataFilter'
    language: !<!Languages> 
      default:
        name: GetWithFilter
        description: Specify filter parameter with value '$filter=id gt 5 and name eq 'foo'&$orderby=id&$top=10'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: Odata
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: header
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_29
        schema: *ref_3
        implementation: Method
        required: true
        extensions:
          x-ms-client-request-id: true
        language: !<!Languages> 
          default:
            name: fooClientRequestId
            description: The fooRequestId
            serializedName: foo-client-request-id
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      signatureParameters:
      - *ref_29
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/customNamedRequestId
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_3
            header: foo-request-id
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-request-id: foo-request-id
    language: !<!Languages> 
      default:
        name: CustomNamedRequestId
        description: Send foo-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 in the header of the request
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - *ref_30
      - *ref_31
      signatureParameters:
      - *ref_31
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/customNamedRequestIdParamGrouping
          method: post
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_3
            header: foo-request-id
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-request-id: foo-request-id
    language: !<!Languages> 
      default:
        name: CustomNamedRequestIdParamGrouping
        description: 'Send foo-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 in the header of the request, via a parameter group'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 2015-07-01-preview
    request: !<!Request> 
      parameters:
      - *ref_9
      - !<!Parameter> &ref_32
        schema: *ref_3
        implementation: Method
        required: true
        extensions:
          x-ms-client-request-id: true
        language: !<!Languages> 
          default:
            name: fooClientRequestId
            description: The fooRequestId
            serializedName: foo-client-request-id
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      signatureParameters:
      - *ref_32
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /azurespecials/customNamedRequestIdHead
          method: head
          uri: '{$host}'
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          headers:
          - !<!HttpHeader> 
            schema: *ref_3
            header: foo-request-id
          statusCodes:
          - '200'
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '404'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-request-id: foo-request-id
    language: !<!Languages> 
      default:
        name: CustomNamedRequestIdHead
        description: Send foo-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 in the header of the request
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: Header
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: AzureSpecialProperties
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
