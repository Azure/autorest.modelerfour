{
 "openapi": "3.0.0",
 "info": {
  "x-ms-metadata": {
   "merged": true,
   "apiVersions": [
    "2019-06-01"
   ],
   "deduplicated": true,
   "schemaReduced": true
  },
  "title": "StorageManagementClient",
  "description": "The Azure Storage Management API.",
  "version": "2019-06-01"
 },
 "paths": {
  "path:0": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/providers/Microsoft.Storage/operations",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1providers~1Microsoft.Storage~1operations"
    ]
   }
  },
  "path:0.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/providers/Microsoft.Storage/operations",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1providers~1Microsoft.Storage~1operations"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "Operations"
    ],
    "description": "Lists all of the available Storage Rest API operations.",
    "operationId": "Operations_List",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:24"
     }
    ],
    "responses": {
     "200": {
      "description": "OK. The request has succeeded.",
      "$ref": "#/components/responses/responses:0"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:1": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1skus"
    ]
   }
  },
  "path:1.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1skus"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "Skus"
    ],
    "operationId": "Skus_List",
    "description": "Lists the available SKUs supported by Microsoft.Storage for given subscription.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- List of storage SKUs in the given subscription retrieved and returned successfully.",
      "$ref": "#/components/responses/responses:1"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:2": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1checkNameAvailability"
    ]
   }
  },
  "path:2.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1checkNameAvailability"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_CheckNameAvailability",
    "description": "Checks that the storage account name is valid and is not already in use.",
    "requestBody": {
     "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
     "$ref": "#/components/requestBodies/requestBodies:0"
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "x-ms-requestBody-index": 0,
    "responses": {
     "200": {
      "description": "OK -- Operation to check the storage account name availability was successful.",
      "$ref": "#/components/responses/responses:2"
     }
    }
   }
  },
  "path:3": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}"
    ]
   }
  },
  "path:3.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_Create",
    "description": "Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "The parameters to provide for the created account.",
     "$ref": "#/components/requestBodies/requestBodies:1"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "OK -- returned when the storage account was already created from a previous request with the same properties specified in the request body.",
      "$ref": "#/components/responses/responses:3"
     },
     "202": {
      "description": "Accepted -- Create or update request accepted; operation will complete asynchronously.",
      "$ref": "#/components/responses/responses:4"
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:3.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_Delete",
    "description": "Deletes a storage account in Microsoft Azure.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- storage account deleted successfully.",
      "$ref": "#/components/responses/responses:5"
     },
     "204": {
      "description": "NoContent -- account does not exist in the subscription.",
      "$ref": "#/components/responses/responses:6"
     }
    }
   }
  },
  "path:3.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_GetProperties",
    "description": "Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:0",
      "description": "May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus."
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- properties retrieved successfully for the storage account.",
      "$ref": "#/components/responses/responses:7"
     }
    }
   }
  },
  "path:3.patch": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}"
    ]
   },
   "patch": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_Update",
    "description": "The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "The parameters to provide for the updated account.",
     "$ref": "#/components/requestBodies/requestBodies:2"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "OK -- storage account properties updated successfully.",
      "$ref": "#/components/responses/responses:8"
     }
    }
   }
  },
  "path:4": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1storageAccounts"
    ]
   }
  },
  "path:4.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1storageAccounts"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_List",
    "description": "Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- List of storage accounts was retrieved and returned successfully.",
      "$ref": "#/components/responses/responses:9"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:5": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts"
    ]
   }
  },
  "path:5.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_ListByResourceGroup",
    "description": "Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- List of storage accounts in the given resource group retrieved and returned successfully.",
      "$ref": "#/components/responses/responses:10"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:6": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1listKeys"
    ]
   }
  },
  "path:6.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1listKeys"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_ListKeys",
    "description": "Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:1",
      "description": "Specifies type of the key to be listed. Possible value is kerb."
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- list of keys retrieved and returned successfully.",
      "$ref": "#/components/responses/responses:11"
     }
    }
   }
  },
  "path:7": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1regenerateKey"
    ]
   }
  },
  "path:7.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1regenerateKey"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_RegenerateKey",
    "description": "Regenerates one of the access keys or Kerberos keys for the specified storage account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "Specifies name of the key which should be regenerated -- key1, key2, kerb1, kerb2.",
     "$ref": "#/components/requestBodies/requestBodies:3"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "OK -- specified key regenerated successfully.",
      "$ref": "#/components/responses/responses:12"
     }
    }
   }
  },
  "path:8": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1locations~1{location}~1usages"
    ]
   }
  },
  "path:8.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1locations~1{location}~1usages"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "LocationUsage"
    ],
    "operationId": "Usages_ListByLocation",
    "description": "Gets the current usage count and the limit for the resources of the location under the subscription.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:2",
      "description": "The location of the Azure Storage resource."
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- current usage count and limit retrieved and returned successfully.",
      "$ref": "#/components/responses/responses:13"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:9": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1ListAccountSas"
    ]
   }
  },
  "path:9.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1ListAccountSas"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_ListAccountSAS",
    "description": "List SAS credentials of a storage account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "The parameters to provide to list SAS credentials for the storage account.",
     "$ref": "#/components/requestBodies/requestBodies:4"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "OK -- returned the account SAS created for the storage account requested.",
      "$ref": "#/components/responses/responses:14"
     }
    }
   }
  },
  "path:10": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1ListServiceSas"
    ]
   }
  },
  "path:10.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1ListServiceSas"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_ListServiceSAS",
    "description": "List service SAS credentials of a specific resource.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "The parameters to provide to list service SAS credentials.",
     "$ref": "#/components/requestBodies/requestBodies:5"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "OK -- returned the service SAS created for the storage service requested.",
      "$ref": "#/components/responses/responses:15"
     }
    }
   }
  },
  "path:11": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1failover"
    ]
   }
  },
  "path:11.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1failover"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_Failover",
    "description": "Failover request can be triggered for a storage account in case of availability issues. The failover occurs from the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Returned when the storage account failover is completed, and the secondary cluster has become primary.",
      "$ref": "#/components/responses/responses:16"
     },
     "202": {
      "description": "Accepted -- Failover request accepted; operation will complete asynchronously.",
      "$ref": "#/components/responses/responses:17"
     }
    },
    "x-ms-long-running-operation": true,
    "x-ms-long-running-operation-options": {
     "final-state-via": "location"
    }
   }
  },
  "path:12": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/restoreBlobRanges",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1restoreBlobRanges"
    ]
   }
  },
  "path:12.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/restoreBlobRanges",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1restoreBlobRanges"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_RestoreBlobRanges",
    "description": "Restore blobs in the specified blob ranges",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "The parameters to provide for restore blob ranges.",
     "$ref": "#/components/requestBodies/requestBodies:6"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "OK -- returned when blob ranges are restored completely with the same properties specified in the request body.",
      "$ref": "#/components/responses/responses:18"
     },
     "202": {
      "description": "Accepted -- Blob restore request accepted; operation will complete asynchronously.",
      "$ref": "#/components/responses/responses:19"
     }
    },
    "x-ms-long-running-operation": true,
    "x-ms-long-running-operation-options": {
     "final-state-via": "location"
    }
   }
  },
  "path:13": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}"
    ]
   }
  },
  "path:13.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "ManagementPolicies"
    ],
    "operationId": "ManagementPolicies_Get",
    "description": "Gets the managementpolicy associated with the specified storage account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:6"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Get the managementpolicy successfully.",
      "$ref": "#/components/responses/responses:20"
     }
    }
   }
  },
  "path:13.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "ManagementPolicies"
    ],
    "operationId": "ManagementPolicies_CreateOrUpdate",
    "description": "Sets the managementpolicy to the specified storage account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:6"
     }
    ],
    "requestBody": {
     "description": "The ManagementPolicy set to a storage account.",
     "$ref": "#/components/requestBodies/requestBodies:7"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK -- Put managementpolicy successfully.",
      "$ref": "#/components/responses/responses:21"
     }
    }
   }
  },
  "path:13.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "ManagementPolicies"
    ],
    "operationId": "ManagementPolicies_Delete",
    "description": "Deletes the managementpolicy associated with the specified storage account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:6"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Delete the managementpolicy successfully.",
      "$ref": "#/components/responses/responses:22"
     },
     "204": {
      "description": "No Content -- The managementpolicy does not exist.",
      "$ref": "#/components/responses/responses:23"
     }
    }
   }
  },
  "path:14": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}"
    ]
   }
  },
  "path:14.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "PrivateEndpointConnections"
    ],
    "operationId": "PrivateEndpointConnections_Get",
    "description": "Gets the specified private endpoint connection associated with the storage account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:7"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Get the private endpoint connection properties successfully.",
      "$ref": "#/components/responses/responses:24"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:25"
     }
    }
   }
  },
  "path:14.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "PrivateEndpointConnections"
    ],
    "operationId": "PrivateEndpointConnections_Put",
    "description": "Update the state of specified private endpoint connection associated with the storage account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:7"
     }
    ],
    "requestBody": {
     "description": "The private endpoint connection properties.",
     "$ref": "#/components/requestBodies/requestBodies:8"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK -- Update the private endpoint connection properties successfully.",
      "$ref": "#/components/responses/responses:26"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:27"
     }
    }
   }
  },
  "path:14.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "PrivateEndpointConnections"
    ],
    "operationId": "PrivateEndpointConnections_Delete",
    "description": "Deletes the specified private endpoint connection associated with the storage account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:7"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Delete the private endpoint connection successfully.",
      "$ref": "#/components/responses/responses:28"
     },
     "204": {
      "description": "No Content -- The private endpoint connection does not exist.",
      "$ref": "#/components/responses/responses:29"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:30"
     }
    }
   }
  },
  "path:15": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateLinkResources",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateLinkResources"
    ]
   }
  },
  "path:15.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateLinkResources",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateLinkResources"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "PrivateLinkResources"
    ],
    "operationId": "PrivateLinkResources_ListByStorageAccount",
    "description": "Gets the private link resources that need to be created for a storage account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved private link resources.",
      "$ref": "#/components/responses/responses:31"
     }
    }
   }
  },
  "path:16": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1revokeUserDelegationKeys"
    ]
   }
  },
  "path:16.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1revokeUserDelegationKeys"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_RevokeUserDelegationKeys",
    "description": "Revoke user delegation keys.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:3",
      "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- revoke user delegation keys succeeded.",
      "$ref": "#/components/responses/responses:32"
     }
    }
   }
  },
  "path:17": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}"
    ]
   }
  },
  "path:17.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "EncryptionScopes"
    ],
    "operationId": "EncryptionScopes_Put",
    "description": "Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:8"
     }
    ],
    "requestBody": {
     "description": "Encryption scope properties to be used for the create or update.",
     "$ref": "#/components/requestBodies/requestBodies:9"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK -- Update encryption scope operation completed successfully.",
      "$ref": "#/components/responses/responses:33"
     },
     "201": {
      "description": "Created -- Create encryption scope operation completed successfully.",
      "$ref": "#/components/responses/responses:34"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:35"
     }
    }
   }
  },
  "path:17.patch": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}"
    ]
   },
   "patch": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "EncryptionScopes"
    ],
    "operationId": "EncryptionScopes_Patch",
    "description": "Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:8"
     }
    ],
    "requestBody": {
     "description": "Encryption scope properties to be used for the update.",
     "$ref": "#/components/requestBodies/requestBodies:10"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK -- Update encryption scope operation completed successfully.",
      "$ref": "#/components/responses/responses:36"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:37"
     }
    }
   }
  },
  "path:17.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "EncryptionScopes"
    ],
    "operationId": "EncryptionScopes_Get",
    "description": "Returns the properties for the specified encryption scope.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:8"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Get encryption scope operation completed successfully.",
      "$ref": "#/components/responses/responses:38"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:39"
     }
    }
   }
  },
  "path:18": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes"
    ]
   }
  },
  "path:18.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///231?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "EncryptionScopes"
    ],
    "operationId": "EncryptionScopes_List",
    "description": "Lists all the encryption scopes available under the specified storage account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- List encryption scopes operation completed successfully.",
      "$ref": "#/components/responses/responses:40"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:19": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices"
    ]
   }
  },
  "path:19.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobService"
    ],
    "operationId": "BlobServices_List",
    "description": "List blob services of storage account. It returns a collection of one object named default.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- List blob services operation completed successfully.",
      "$ref": "#/components/responses/responses:41"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:20": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1{BlobServicesName}"
    ]
   }
  },
  "path:20.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1{BlobServicesName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobService"
    ],
    "operationId": "BlobServices_SetServiceProperties",
    "description": "Sets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. ",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:18"
     }
    ],
    "requestBody": {
     "description": "The properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
     "$ref": "#/components/requestBodies/requestBodies:11"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK -- Sets The properties of a storage account’s Blob service successfully.",
      "$ref": "#/components/responses/responses:42"
     }
    }
   }
  },
  "path:20.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1{BlobServicesName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobService"
    ],
    "operationId": "BlobServices_GetServiceProperties",
    "description": "Gets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:18"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- returned the properties of a storage account’s Blob service.",
      "$ref": "#/components/responses/responses:43"
     }
    }
   }
  },
  "path:21": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers"
    ]
   }
  },
  "path:21.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_List",
    "description": "Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:9",
      "description": "Optional. Specified maximum number of containers that can be included in the list."
     },
     {
      "$ref": "#/components/parameters/parameters:10",
      "description": "Optional. When specified, only container names starting with the filter will be listed."
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- List Container operation completed successfully.",
      "$ref": "#/components/responses/responses:44"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:22": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}"
    ]
   }
  },
  "path:22.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_Create",
    "description": "Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container. ",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "Properties of the blob container to create.",
     "$ref": "#/components/requestBodies/requestBodies:12"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "OK -- The Container is already created.",
      "$ref": "#/components/responses/responses:45"
     },
     "201": {
      "description": "Created -- Create Container operation completed successfully.",
      "$ref": "#/components/responses/responses:46"
     }
    }
   }
  },
  "path:22.patch": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}"
    ]
   },
   "patch": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_Update",
    "description": "Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn't already exist. ",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "Properties to update for the blob container.",
     "$ref": "#/components/requestBodies/requestBodies:13"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "OK -- Update Container operation completed successfully.",
      "$ref": "#/components/responses/responses:47"
     }
    }
   }
  },
  "path:22.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_Get",
    "description": "Gets properties of a specified container. ",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Get Container operation completed successfully.",
      "$ref": "#/components/responses/responses:48"
     }
    }
   }
  },
  "path:22.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_Delete",
    "description": "Deletes specified container under its account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Delete Container operation completed successfully.",
      "$ref": "#/components/responses/responses:49"
     },
     "204": {
      "description": "No Content -- The Container not exist.",
      "$ref": "#/components/responses/responses:50"
     }
    }
   }
  },
  "path:23": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/setLegalHold",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1setLegalHold"
    ]
   }
  },
  "path:23.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/setLegalHold",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1setLegalHold"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_SetLegalHold",
    "description": "Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "The LegalHold property that will be set to a blob container.",
     "$ref": "#/components/requestBodies/requestBodies:14"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK -- Set legal hold tags for Container completed successfully.",
      "$ref": "#/components/responses/responses:51"
     }
    }
   }
  },
  "path:24": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/clearLegalHold",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1clearLegalHold"
    ]
   }
  },
  "path:24.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/clearLegalHold",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1clearLegalHold"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_ClearLegalHold",
    "description": "Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "The LegalHold property that will be clear from a blob container.",
     "$ref": "#/components/requestBodies/requestBodies:15"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK -- Clear legal hold tags for Container completed successfully.",
      "$ref": "#/components/responses/responses:52"
     }
    }
   }
  },
  "path:25": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1{immutabilityPolicyName}"
    ]
   }
  },
  "path:25.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1{immutabilityPolicyName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_CreateOrUpdateImmutabilityPolicy",
    "description": "Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "$ref": "#/components/parameters/parameters:17"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:11",
      "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied."
     }
    ],
    "requestBody": {
     "description": "The ImmutabilityPolicy Properties that will be created or updated to a blob container.",
     "$ref": "#/components/requestBodies/requestBodies:16"
    },
    "x-ms-requestBody-index": 6,
    "responses": {
     "200": {
      "description": "OK -- Creates or updates container ImmutabilityPolicy operation completed successfully.",
      "$ref": "#/components/responses/responses:53"
     }
    }
   }
  },
  "path:25.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1{immutabilityPolicyName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_GetImmutabilityPolicy",
    "description": "Gets the existing immutability policy along with the corresponding ETag in response headers and body.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "$ref": "#/components/parameters/parameters:17"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:12",
      "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied."
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Gets container ImmutabilityPolicy operation completed successfully.",
      "$ref": "#/components/responses/responses:54"
     }
    }
   }
  },
  "path:25.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1{immutabilityPolicyName}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_DeleteImmutabilityPolicy",
    "description": "Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, only way is to delete the container after deleting all blobs inside the container.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "$ref": "#/components/parameters/parameters:17"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:13",
      "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied."
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Deletes container ImmutabilityPolicy operation completed successfully.",
      "$ref": "#/components/responses/responses:55"
     }
    }
   }
  },
  "path:26": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/lock",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1default~1lock"
    ]
   }
  },
  "path:26.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/lock",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1default~1lock"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_LockImmutabilityPolicy",
    "description": "Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:14",
      "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied."
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Locks container ImmutabilityPolicy operation completed successfully.",
      "$ref": "#/components/responses/responses:56"
     }
    }
   }
  },
  "path:27": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/extend",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1default~1extend"
    ]
   }
  },
  "path:27.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/extend",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1default~1extend"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_ExtendImmutabilityPolicy",
    "description": "Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:15",
      "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied."
     }
    ],
    "requestBody": {
     "description": "The ImmutabilityPolicy Properties that will be extended for a blob container.",
     "$ref": "#/components/requestBodies/requestBodies:17"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK -- Extends container ImmutabilityPolicy operation completed successfully..",
      "$ref": "#/components/responses/responses:57"
     }
    }
   }
  },
  "path:28": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/lease",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1lease"
    ]
   }
  },
  "path:28.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///232?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/lease",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1lease"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobContainers"
    ],
    "operationId": "BlobContainers_Lease",
    "description": "The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "Lease Container request body.",
     "$ref": "#/components/requestBodies/requestBodies:18"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK -- Lease Container operation completed successfully.",
      "$ref": "#/components/responses/responses:58"
     }
    }
   }
  },
  "path:29": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///233?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices"
    ]
   }
  },
  "path:29.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///233?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "FileService"
    ],
    "operationId": "FileServices_List",
    "description": "List all file services in storage accounts",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- List file services operation completed successfully.",
      "$ref": "#/components/responses/responses:59"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:60"
     }
    }
   }
  },
  "path:30": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///233?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1{FileServicesName}"
    ]
   }
  },
  "path:30.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///233?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1{FileServicesName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "FileService"
    ],
    "operationId": "FileServices_SetServiceProperties",
    "description": "Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. ",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:21"
     }
    ],
    "requestBody": {
     "description": "The properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.",
     "$ref": "#/components/requestBodies/requestBodies:19"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK -- Sets The properties of a storage account’s File service successfully.",
      "$ref": "#/components/responses/responses:61"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:62"
     }
    }
   }
  },
  "path:30.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///233?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1{FileServicesName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "FileService"
    ],
    "operationId": "FileServices_GetServiceProperties",
    "description": "Gets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:21"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- returned the properties of a storage account’s File service.",
      "$ref": "#/components/responses/responses:63"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:64"
     }
    }
   }
  },
  "path:31": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///233?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares"
    ]
   }
  },
  "path:31.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///233?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "FileShares"
    ],
    "operationId": "FileShares_List",
    "description": "Lists all shares.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:19",
      "description": "Optional. Specified maximum number of shares that can be included in the list."
     },
     {
      "$ref": "#/components/parameters/parameters:20",
      "description": "Optional. When specified, only share names starting with the filter will be listed."
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- List Shares operation completed successfully.",
      "$ref": "#/components/responses/responses:65"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:66"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:32": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///233?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}"
    ]
   }
  },
  "path:32.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///233?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "FileShares"
    ],
    "operationId": "FileShares_Create",
    "description": "Creates a new share under the specified account as described by request body. The share resource includes metadata and properties for that share. It does not include a list of the files contained by the share. ",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "Properties of the file share to create.",
     "$ref": "#/components/requestBodies/requestBodies:20"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "OK -- The Share is already created.",
      "$ref": "#/components/responses/responses:67"
     },
     "201": {
      "description": "Created -- Create Share operation completed successfully.",
      "$ref": "#/components/responses/responses:68"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:69"
     }
    }
   }
  },
  "path:32.patch": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///233?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}"
    ]
   },
   "patch": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "FileShares"
    ],
    "operationId": "FileShares_Update",
    "description": "Updates share properties as specified in request body. Properties not mentioned in the request will not be changed. Update fails if the specified share does not already exist. ",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "requestBody": {
     "description": "Properties to update for the file share.",
     "$ref": "#/components/requestBodies/requestBodies:21"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "OK -- Update Share operation completed successfully.",
      "$ref": "#/components/responses/responses:70"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:71"
     }
    }
   }
  },
  "path:32.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///233?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "FileShares"
    ],
    "operationId": "FileShares_Get",
    "description": "Gets properties of a specified share.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Get Share operation completed successfully.",
      "$ref": "#/components/responses/responses:72"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:73"
     }
    }
   }
  },
  "path:32.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-06-01"
    ],
    "filename": [
     "mem:///233?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "FileShares"
    ],
    "operationId": "FileShares_Delete",
    "description": "Deletes specified share under its account.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:24"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "description": "OK -- Delete Share operation completed successfully.",
      "$ref": "#/components/responses/responses:74"
     },
     "204": {
      "description": "No Content -- The Share not exist.",
      "$ref": "#/components/responses/responses:75"
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "$ref": "#/components/responses/responses:76"
     }
    }
   }
  }
 },
 "components": {
  "parameters": {
   "parameters:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1nxd1rl·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·get·parameters·4",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/parameters/paths·1nxd1rl·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·get·parameters·4"
     ]
    },
    "name": "$expand",
    "in": "query",
    "description": "May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus.",
    "schema": {
     "$ref": "#/components/schemas/StorageAccountExpand"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·5ud07r·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listkeys·post·parameters·4",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/parameters/paths·5ud07r·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listkeys·post·parameters·4"
     ]
    },
    "name": "$expand",
    "in": "query",
    "description": "Specifies type of the key to be listed. Possible value is kerb.",
    "schema": {
     "$ref": "#/components/schemas/ListKeyExpand"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1p1g75m·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·parameters·2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/parameters/paths·1p1g75m·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·parameters·2"
     ]
    },
    "name": "location",
    "in": "path",
    "description": "The location of the Azure Storage resource.",
    "schema": {
     "$ref": "#/components/schemas/schemas:2"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1yndr4j·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·parameters·1",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/parameters/paths·1yndr4j·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·parameters·1"
     ]
    },
    "name": "accountName",
    "in": "path",
    "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
    "schema": {
     "$ref": "#/components/schemas/schemas:3"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ResourceGroupName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/parameters/ResourceGroupName"
     ]
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:252"
    },
    "required": true
   },
   "parameters:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/parameters/StorageAccountName"
     ]
    },
    "name": "accountName",
    "in": "path",
    "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:253"
    },
    "required": true
   },
   "parameters:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/parameters/ManagementPolicyName"
     ]
    },
    "name": "managementPolicyName",
    "in": "path",
    "description": "The name of the Storage Account Management Policy. It should always be 'default'",
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "x-ms-enum": {
      "name": "ManagementPolicyName",
      "modelAsString": true
     },
     "type": "string"
    },
    "required": true
   },
   "parameters:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateEndpointConnectionName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/parameters/PrivateEndpointConnectionName"
     ]
    },
    "name": "privateEndpointConnectionName",
    "in": "path",
    "description": "The name of the private endpoint connection associated with the Storage Account",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:254"
    },
    "required": true
   },
   "parameters:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionScopeName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/parameters/EncryptionScopeName"
     ]
    },
    "name": "encryptionScopeName",
    "in": "path",
    "description": "The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:255"
    },
    "required": true
   },
   "parameters:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·11zftm6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers·get·parameters·4",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/parameters/paths·11zftm6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers·get·parameters·4"
     ]
    },
    "name": "$maxpagesize",
    "in": "query",
    "description": "Optional. Specified maximum number of containers that can be included in the list.",
    "schema": {
     "$ref": "#/components/schemas/schemas:256"
    },
    "x-ms-parameter-location": "method"
   },
   "parameters:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·5jygkv·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers·get·parameters·5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/parameters/paths·5jygkv·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers·get·parameters·5"
     ]
    },
    "name": "$filter",
    "in": "query",
    "description": "Optional. When specified, only container names starting with the filter will be listed.",
    "schema": {
     "$ref": "#/components/schemas/schemas:257"
    },
    "x-ms-parameter-location": "method"
   },
   "parameters:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·bj7m0q·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·put·parameters·6",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/parameters/paths·bj7m0q·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·put·parameters·6"
     ]
    },
    "name": "If-Match",
    "in": "header",
    "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.",
    "schema": {
     "$ref": "#/components/schemas/schemas:258"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·f7fvfy·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·get·parameters·6",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/parameters/paths·f7fvfy·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·get·parameters·6"
     ]
    },
    "name": "If-Match",
    "in": "header",
    "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.",
    "schema": {
     "$ref": "#/components/schemas/schemas:260"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·1mt03sr·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·delete·parameters·6",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/parameters/paths·1mt03sr·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·delete·parameters·6"
     ]
    },
    "name": "If-Match",
    "in": "header",
    "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.",
    "schema": {
     "$ref": "#/components/schemas/schemas:262"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·1uq38ee·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-lock·post·parameters·5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/parameters/paths·1uq38ee·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-lock·post·parameters·5"
     ]
    },
    "name": "If-Match",
    "in": "header",
    "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.",
    "schema": {
     "$ref": "#/components/schemas/schemas:264"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·1qftr13·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-extend·post·parameters·5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/parameters/paths·1qftr13·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-extend·post·parameters·5"
     ]
    },
    "name": "If-Match",
    "in": "header",
    "description": "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.",
    "schema": {
     "$ref": "#/components/schemas/schemas:266"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ContainerName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/parameters/ContainerName"
     ]
    },
    "name": "containerName",
    "in": "path",
    "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:318"
    },
    "required": true
   },
   "parameters:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ImmutabilityPolicyName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/parameters/ImmutabilityPolicyName"
     ]
    },
    "name": "immutabilityPolicyName",
    "in": "path",
    "description": "The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'",
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    },
    "required": true
   },
   "parameters:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "BlobServicesName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/parameters/BlobServicesName"
     ]
    },
    "name": "BlobServicesName",
    "in": "path",
    "description": "The name of the blob Service within the specified storage account. Blob Service Name must be 'default'",
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    },
    "required": true
   },
   "parameters:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·1u7b0py·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares·get·parameters·4",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/parameters/paths·1u7b0py·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares·get·parameters·4"
     ]
    },
    "name": "$maxpagesize",
    "in": "query",
    "description": "Optional. Specified maximum number of shares that can be included in the list.",
    "schema": {
     "$ref": "#/components/schemas/schemas:319"
    },
    "x-ms-parameter-location": "method"
   },
   "parameters:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·1st3svg·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares·get·parameters·5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/parameters/paths·1st3svg·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares·get·parameters·5"
     ]
    },
    "name": "$filter",
    "in": "query",
    "description": "Optional. When specified, only share names starting with the filter will be listed.",
    "schema": {
     "$ref": "#/components/schemas/schemas:320"
    },
    "x-ms-parameter-location": "method"
   },
   "parameters:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileServicesName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/parameters/FileServicesName"
     ]
    },
    "name": "FileServicesName",
    "in": "path",
    "description": "The name of the file Service within the specified storage account. File Service Name must be \"default\"",
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    },
    "required": true
   },
   "parameters:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "ShareName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/parameters/ShareName"
     ]
    },
    "name": "shareName",
    "in": "path",
    "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:340"
    },
    "required": true
   },
   "parameters:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
     ]
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The ID of the target subscription.",
    "schema": {
     "$ref": "#/components/schemas/schemas:406"
    },
    "required": true
   },
   "parameters:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
     ]
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for this operation.",
    "schema": {
     "$ref": "#/components/schemas/schemas:407"
    },
    "required": true
   }
  },
  "responses": {
   "responses:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·ce8332·providers-microsoft-storage-operations·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·ce8332·providers-microsoft-storage-operations·get·responses·200"
     ]
    },
    "description": "OK. The request has succeeded.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:4"
      }
     }
    }
   },
   "responses:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·hsb9tg·subscriptions-subscriptionid-providers-microsoft-storage-skus·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·hsb9tg·subscriptions-subscriptionid-providers-microsoft-storage-skus·get·responses·200"
     ]
    },
    "description": "OK -- List of storage SKUs in the given subscription retrieved and returned successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:40"
      }
     }
    }
   },
   "responses:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1a2hh5i·subscriptions-subscriptionid-providers-microsoft-storage-checknameavailability·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·1a2hh5i·subscriptions-subscriptionid-providers-microsoft-storage-checknameavailability·post·responses·200"
     ]
    },
    "description": "OK -- Operation to check the storage account name availability was successful.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:42"
      }
     }
    }
   },
   "responses:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·124a14t·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·124a14t·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·responses·200"
     ]
    },
    "description": "OK -- returned when the storage account was already created from a previous request with the same properties specified in the request body.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:136"
      }
     }
    }
   },
   "responses:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·9ibjrd·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·responses·202",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·9ibjrd·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·responses·202"
     ]
    },
    "description": "Accepted -- Create or update request accepted; operation will complete asynchronously."
   },
   "responses:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1fgghhl·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·delete·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·1fgghhl·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·delete·responses·200"
     ]
    },
    "description": "OK -- storage account deleted successfully."
   },
   "responses:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·d3ade2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·delete·responses·204",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·d3ade2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·delete·responses·204"
     ]
    },
    "description": "NoContent -- account does not exist in the subscription."
   },
   "responses:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·i3pbh0·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·i3pbh0·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·get·responses·200"
     ]
    },
    "description": "OK -- properties retrieved successfully for the storage account.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:136"
      }
     }
    }
   },
   "responses:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1kzvacs·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·patch·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·1kzvacs·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·patch·responses·200"
     ]
    },
    "description": "OK -- storage account properties updated successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:136"
      }
     }
    }
   },
   "responses:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·9t3xvq·subscriptions-subscriptionid-providers-microsoft-storage-storageaccounts·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·9t3xvq·subscriptions-subscriptionid-providers-microsoft-storage-storageaccounts·get·responses·200"
     ]
    },
    "description": "OK -- List of storage accounts was retrieved and returned successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:142"
      }
     }
    }
   },
   "responses:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1tk92u5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·1tk92u5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts·get·responses·200"
     ]
    },
    "description": "OK -- List of storage accounts in the given resource group retrieved and returned successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:142"
      }
     }
    }
   },
   "responses:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·viy1h7·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listkeys·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·viy1h7·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listkeys·post·responses·200"
     ]
    },
    "description": "OK -- list of keys retrieved and returned successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:145"
      }
     }
    }
   },
   "responses:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·17f0cto·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-regeneratekey·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·17f0cto·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-regeneratekey·post·responses·200"
     ]
    },
    "description": "OK -- specified key regenerated successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:145"
      }
     }
    }
   },
   "responses:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·134gqwy·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·134gqwy·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·responses·200"
     ]
    },
    "description": "OK -- current usage count and limit retrieved and returned successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:167"
      }
     }
    }
   },
   "responses:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·16hwgpb·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listaccountsas·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·16hwgpb·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listaccountsas·post·responses·200"
     ]
    },
    "description": "OK -- returned the account SAS created for the storage account requested.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:178"
      }
     }
    }
   },
   "responses:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·12o808z·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listservicesas·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·12o808z·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listservicesas·post·responses·200"
     ]
    },
    "description": "OK -- returned the service SAS created for the storage service requested.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:199"
      }
     }
    }
   },
   "responses:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·u0td3i·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-failover·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·u0td3i·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-failover·post·responses·200"
     ]
    },
    "description": "OK -- Returned when the storage account failover is completed, and the secondary cluster has become primary."
   },
   "responses:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·rhhpky·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-failover·post·responses·202",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·rhhpky·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-failover·post·responses·202"
     ]
    },
    "description": "Accepted -- Failover request accepted; operation will complete asynchronously."
   },
   "responses:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·gwgy04·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-restoreblobranges·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·gwgy04·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-restoreblobranges·post·responses·200"
     ]
    },
    "description": "OK -- returned when blob ranges are restored completely with the same properties specified in the request body.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:121"
      }
     }
    }
   },
   "responses:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·3l65d2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-restoreblobranges·post·responses·202",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·3l65d2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-restoreblobranges·post·responses·202"
     ]
    },
    "description": "Accepted -- Blob restore request accepted; operation will complete asynchronously.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:121"
      }
     }
    }
   },
   "responses:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·yyp3ln·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·yyp3ln·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·get·responses·200"
     ]
    },
    "description": "OK -- Get the managementpolicy successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:201"
      }
     }
    }
   },
   "responses:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·ystiu3·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·put·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·ystiu3·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·put·responses·200"
     ]
    },
    "description": "OK -- Put managementpolicy successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:201"
      }
     }
    }
   },
   "responses:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·omgqzn·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·delete·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·omgqzn·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·delete·responses·200"
     ]
    },
    "description": "OK -- Delete the managementpolicy successfully."
   },
   "responses:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·zd5dst·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·delete·responses·204",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·zd5dst·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·delete·responses·204"
     ]
    },
    "description": "No Content -- The managementpolicy does not exist."
   },
   "responses:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1awkjri·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·1awkjri·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·get·responses·200"
     ]
    },
    "description": "OK -- Get the private endpoint connection properties successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:220"
      }
     }
    }
   },
   "responses:25": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·kuxiin·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·get·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·kuxiin·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·get·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:249"
      }
     }
    }
   },
   "responses:26": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·l0flbt·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·put·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·l0flbt·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·put·responses·200"
     ]
    },
    "description": "OK -- Update the private endpoint connection properties successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:220"
      }
     }
    }
   },
   "responses:27": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·qe61cp·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·put·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·qe61cp·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·put·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:249"
      }
     }
    }
   },
   "responses:28": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·136vinz·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·delete·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·136vinz·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·delete·responses·200"
     ]
    },
    "description": "OK -- Delete the private endpoint connection successfully."
   },
   "responses:29": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1xhtc05·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·delete·responses·204",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·1xhtc05·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·delete·responses·204"
     ]
    },
    "description": "No Content -- The private endpoint connection does not exist."
   },
   "responses:30": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·drocv9·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·delete·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·drocv9·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·delete·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:249"
      }
     }
    }
   },
   "responses:31": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1q7c3jo·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privatelinkresources·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·1q7c3jo·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privatelinkresources·get·responses·200"
     ]
    },
    "description": "Successfully retrieved private link resources.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:229"
      }
     }
    }
   },
   "responses:32": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·c91ix2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·c91ix2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·responses·200"
     ]
    },
    "description": "OK -- revoke user delegation keys succeeded."
   },
   "responses:33": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1er6gbf·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·1er6gbf·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·responses·200"
     ]
    },
    "description": "OK -- Update encryption scope operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:238"
      }
     }
    }
   },
   "responses:34": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·7z1qgf·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·responses·201",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·7z1qgf·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·responses·201"
     ]
    },
    "description": "Created -- Create encryption scope operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:238"
      }
     }
    }
   },
   "responses:35": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1xx1iju·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·1xx1iju·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:249"
      }
     }
    }
   },
   "responses:36": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1j8p5gb·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·patch·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·1j8p5gb·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·patch·responses·200"
     ]
    },
    "description": "OK -- Update encryption scope operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:238"
      }
     }
    }
   },
   "responses:37": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·escx8r·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·patch·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·escx8r·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·patch·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:249"
      }
     }
    }
   },
   "responses:38": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1kuncsk·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·1kuncsk·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·get·responses·200"
     ]
    },
    "description": "OK -- Get encryption scope operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:238"
      }
     }
    }
   },
   "responses:39": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·470sjj·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·get·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·470sjj·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·get·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:249"
      }
     }
    }
   },
   "responses:40": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1bdp6f5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/responses/paths·1bdp6f5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·responses·200"
     ]
    },
    "description": "OK -- List encryption scopes operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:246"
      }
     }
    }
   },
   "responses:41": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·6mz2i6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·6mz2i6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices·get·responses·200"
     ]
    },
    "description": "OK -- List blob services operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:307"
      }
     }
    }
   },
   "responses:42": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·a9qqsq·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-blobservicesname·put·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·a9qqsq·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-blobservicesname·put·responses·200"
     ]
    },
    "description": "OK -- Sets The properties of a storage account’s Blob service successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:304"
      }
     }
    }
   },
   "responses:43": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·sn7psq·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-blobservicesname·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·sn7psq·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-blobservicesname·get·responses·200"
     ]
    },
    "description": "OK -- returned the properties of a storage account’s Blob service.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:304"
      }
     }
    }
   },
   "responses:44": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·mhbu35·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·mhbu35·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers·get·responses·200"
     ]
    },
    "description": "OK -- List Container operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:301"
      }
     }
    }
   },
   "responses:45": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·19bteah·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·put·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·19bteah·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·put·responses·200"
     ]
    },
    "description": "OK -- The Container is already created.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:276"
      }
     }
    }
   },
   "responses:46": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·9cml8z·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·put·responses·201",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·9cml8z·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·put·responses·201"
     ]
    },
    "description": "Created -- Create Container operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:276"
      }
     }
    }
   },
   "responses:47": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·1d4h7w4·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·patch·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·1d4h7w4·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·patch·responses·200"
     ]
    },
    "description": "OK -- Update Container operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "description": "Properties of the updated blob container.",
       "$ref": "#/components/schemas/schemas:276"
      }
     }
    }
   },
   "responses:48": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·w8ubqh·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·w8ubqh·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·get·responses·200"
     ]
    },
    "description": "OK -- Get Container operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:276"
      }
     }
    }
   },
   "responses:49": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·twyx2x·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·delete·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·twyx2x·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·delete·responses·200"
     ]
    },
    "description": "OK -- Delete Container operation completed successfully."
   },
   "responses:50": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·10ajlhj·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·delete·responses·204",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·10ajlhj·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·delete·responses·204"
     ]
    },
    "description": "No Content -- The Container not exist."
   },
   "responses:51": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·tw0lq0·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-setlegalhold·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·tw0lq0·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-setlegalhold·post·responses·200"
     ]
    },
    "description": "OK -- Set legal hold tags for Container completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:297"
      }
     }
    }
   },
   "responses:52": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·nelett·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-clearlegalhold·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·nelett·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-clearlegalhold·post·responses·200"
     ]
    },
    "description": "OK -- Clear legal hold tags for Container completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:297"
      }
     }
    }
   },
   "responses:53": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·1x1ixg·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·put·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·1x1ixg·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·put·responses·200"
     ]
    },
    "description": "OK -- Creates or updates container ImmutabilityPolicy operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:282"
      }
     }
    },
    "headers": {
     "ETag": {
      "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
      "$ref": "#/components/headers/headers:0"
     }
    }
   },
   "responses:54": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·1cb19f·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·1cb19f·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·get·responses·200"
     ]
    },
    "description": "OK -- Gets container ImmutabilityPolicy operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:282"
      }
     }
    },
    "headers": {
     "ETag": {
      "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
      "$ref": "#/components/headers/headers:1"
     }
    }
   },
   "responses:55": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·19nlksq·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·delete·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·19nlksq·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·delete·responses·200"
     ]
    },
    "description": "OK -- Deletes container ImmutabilityPolicy operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:282"
      }
     }
    },
    "headers": {
     "ETag": {
      "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
      "$ref": "#/components/headers/headers:2"
     }
    }
   },
   "responses:56": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·7xrdul·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-lock·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·7xrdul·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-lock·post·responses·200"
     ]
    },
    "description": "OK -- Locks container ImmutabilityPolicy operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:282"
      }
     }
    },
    "headers": {
     "ETag": {
      "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
      "$ref": "#/components/headers/headers:3"
     }
    }
   },
   "responses:57": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·xrhnw8·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-extend·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·xrhnw8·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-extend·post·responses·200"
     ]
    },
    "description": "OK -- Extends container ImmutabilityPolicy operation completed successfully..",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:282"
      }
     }
    },
    "headers": {
     "ETag": {
      "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
      "$ref": "#/components/headers/headers:4"
     }
    }
   },
   "responses:58": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·1gr3j2m·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-lease·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/responses/paths·1gr3j2m·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-lease·post·responses·200"
     ]
    },
    "description": "OK -- Lease Container operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:315"
      }
     }
    }
   },
   "responses:59": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·12fqk6c·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·12fqk6c·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices·get·responses·200"
     ]
    },
    "description": "OK -- List file services operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:321"
      }
     }
    }
   },
   "responses:60": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·ed395·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices·get·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·ed395·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices·get·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:334"
      }
     }
    }
   },
   "responses:61": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·1bhc8lg·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-fileservicesname·put·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·1bhc8lg·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-fileservicesname·put·responses·200"
     ]
    },
    "description": "OK -- Sets The properties of a storage account’s File service successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:323"
      }
     }
    }
   },
   "responses:62": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·cga8o1·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-fileservicesname·put·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·cga8o1·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-fileservicesname·put·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:334"
      }
     }
    }
   },
   "responses:63": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·1fu20cx·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-fileservicesname·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·1fu20cx·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-fileservicesname·get·responses·200"
     ]
    },
    "description": "OK -- returned the properties of a storage account’s File service.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:323"
      }
     }
    }
   },
   "responses:64": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·n7t1ew·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-fileservicesname·get·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·n7t1ew·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-fileservicesname·get·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:334"
      }
     }
    }
   },
   "responses:65": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·hthuqi·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·hthuqi·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares·get·responses·200"
     ]
    },
    "description": "OK -- List Shares operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:327"
      }
     }
    }
   },
   "responses:66": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·j3sfw9·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares·get·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·j3sfw9·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares·get·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:334"
      }
     }
    }
   },
   "responses:67": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·1sg22js·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·put·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·1sg22js·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·put·responses·200"
     ]
    },
    "description": "OK -- The Share is already created.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:325"
      }
     }
    }
   },
   "responses:68": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·1thns8p·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·put·responses·201",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·1thns8p·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·put·responses·201"
     ]
    },
    "description": "Created -- Create Share operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:325"
      }
     }
    }
   },
   "responses:69": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·p34fyn·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·put·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·p34fyn·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·put·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:334"
      }
     }
    }
   },
   "responses:70": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·fxv8fi·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·patch·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·fxv8fi·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·patch·responses·200"
     ]
    },
    "description": "OK -- Update Share operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "description": "Properties of the updated file share.",
       "$ref": "#/components/schemas/schemas:325"
      }
     }
    }
   },
   "responses:71": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·56yyew·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·patch·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·56yyew·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·patch·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:334"
      }
     }
    }
   },
   "responses:72": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·nlepb9·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·nlepb9·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·get·responses·200"
     ]
    },
    "description": "OK -- Get Share operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:325"
      }
     }
    }
   },
   "responses:73": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·gkj9l·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·get·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·gkj9l·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·get·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:334"
      }
     }
    }
   },
   "responses:74": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·ygebi3·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·delete·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·ygebi3·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·delete·responses·200"
     ]
    },
    "description": "OK -- Delete Share operation completed successfully."
   },
   "responses:75": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·1we65b2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·delete·responses·204",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·1we65b2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·delete·responses·204"
     ]
    },
    "description": "No Content -- The Share not exist."
   },
   "responses:76": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·1e62hp2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·delete·responses·default",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/responses/paths·1e62hp2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·delete·responses·default"
     ]
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:334"
      }
     }
    }
   }
  },
  "schemas": {
   "schemas:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1dierdw·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·parameters·2·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/paths·1dierdw·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·parameters·2·schema"
     ]
    },
    "type": "string"
   },
   "schemas:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·192jc6u·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·parameters·1·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/paths·192jc6u·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·parameters·1·schema"
     ]
    },
    "maxLength": 24,
    "minLength": 3,
    "type": "string"
   },
   "schemas:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "OperationListResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/OperationListResult"
     ]
    },
    "description": "Result of the request to list Storage operations. It contains a list of operations and a URL link to get the next set of results.",
    "properties": {
     "value": {
      "description": "List of Storage operations supported by the Storage resource provider.",
      "$ref": "#/components/schemas/schemas:5"
     }
    }
   },
   "schemas:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "OperationListResult-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/OperationListResult-value"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:6"
    },
    "description": "List of Storage operations supported by the Storage resource provider."
   },
   "schemas:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Operation",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Operation"
     ]
    },
    "description": "Storage REST API operation definition.",
    "type": "object",
    "properties": {
     "name": {
      "description": "Operation name: {provider}/{resource}/{operation}",
      "$ref": "#/components/schemas/schemas:7"
     },
     "display": {
      "description": "Display metadata associated with the operation.",
      "$ref": "#/components/schemas/schemas:8"
     },
     "origin": {
      "description": "The origin of operations.",
      "$ref": "#/components/schemas/schemas:13"
     },
     "properties": {
      "description": "Properties of operation, include metric specifications.",
      "x-ms-client-flatten": true,
      "x-ms-client-name": "OperationProperties",
      "$ref": "#/components/schemas/schemas:14"
     }
    }
   },
   "schemas:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Operation-name",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Operation-name"
     ]
    },
    "description": "Operation name: {provider}/{resource}/{operation}",
    "type": "string"
   },
   "schemas:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Operation-display",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Operation-display"
     ]
    },
    "description": "Display metadata associated with the operation.",
    "properties": {
     "provider": {
      "description": "Service provider: Microsoft Storage.",
      "$ref": "#/components/schemas/schemas:9"
     },
     "resource": {
      "description": "Resource on which the operation is performed etc.",
      "$ref": "#/components/schemas/schemas:10"
     },
     "operation": {
      "description": "Type of operation: get, read, delete, etc.",
      "$ref": "#/components/schemas/schemas:11"
     },
     "description": {
      "description": "Description of the operation.",
      "$ref": "#/components/schemas/schemas:12"
     }
    }
   },
   "schemas:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Operation-display-provider",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Operation-display-provider"
     ]
    },
    "description": "Service provider: Microsoft Storage.",
    "type": "string"
   },
   "schemas:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Operation-display-resource",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Operation-display-resource"
     ]
    },
    "description": "Resource on which the operation is performed etc.",
    "type": "string"
   },
   "schemas:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Operation-display-operation",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Operation-display-operation"
     ]
    },
    "description": "Type of operation: get, read, delete, etc.",
    "type": "string"
   },
   "schemas:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Operation-display-description",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Operation-display-description"
     ]
    },
    "description": "Description of the operation.",
    "type": "string"
   },
   "schemas:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Operation-origin",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Operation-origin"
     ]
    },
    "type": "string",
    "description": "The origin of operations."
   },
   "schemas:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "OperationProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/OperationProperties"
     ]
    },
    "description": "Properties of operation, include metric specifications.",
    "properties": {
     "serviceSpecification": {
      "description": "One property of operation, include metric specifications.",
      "$ref": "#/components/schemas/schemas:15"
     }
    }
   },
   "schemas:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSpecification",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSpecification"
     ]
    },
    "description": "One property of operation, include metric specifications.",
    "properties": {
     "metricSpecifications": {
      "description": "Metric specifications of operation.",
      "$ref": "#/components/schemas/schemas:16"
     }
    }
   },
   "schemas:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSpecification-metricSpecifications",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSpecification-metricSpecifications"
     ]
    },
    "description": "Metric specifications of operation.",
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:17"
    }
   },
   "schemas:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "MetricSpecification",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/MetricSpecification"
     ]
    },
    "description": "Metric specification of operation.",
    "properties": {
     "name": {
      "description": "Name of metric specification.",
      "$ref": "#/components/schemas/schemas:18"
     },
     "displayName": {
      "description": "Display name of metric specification.",
      "$ref": "#/components/schemas/schemas:19"
     },
     "displayDescription": {
      "description": "Display description of metric specification.",
      "$ref": "#/components/schemas/schemas:20"
     },
     "unit": {
      "description": "Unit could be Bytes or Count.",
      "$ref": "#/components/schemas/schemas:21"
     },
     "dimensions": {
      "description": "Dimensions of blobs, including blob type and access tier.",
      "$ref": "#/components/schemas/schemas:22"
     },
     "aggregationType": {
      "description": "Aggregation type could be Average.",
      "$ref": "#/components/schemas/schemas:23"
     },
     "fillGapWithZero": {
      "type": "boolean",
      "description": "The property to decide fill gap with zero or not."
     },
     "category": {
      "description": "The category this metric specification belong to, could be Capacity.",
      "$ref": "#/components/schemas/schemas:24"
     },
     "resourceIdDimensionNameOverride": {
      "description": "Account Resource Id.",
      "$ref": "#/components/schemas/schemas:25"
     }
    }
   },
   "schemas:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "MetricSpecification-name",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/MetricSpecification-name"
     ]
    },
    "type": "string",
    "description": "Name of metric specification."
   },
   "schemas:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "MetricSpecification-displayName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/MetricSpecification-displayName"
     ]
    },
    "type": "string",
    "description": "Display name of metric specification."
   },
   "schemas:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "MetricSpecification-displayDescription",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/MetricSpecification-displayDescription"
     ]
    },
    "type": "string",
    "description": "Display description of metric specification."
   },
   "schemas:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "MetricSpecification-unit",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/MetricSpecification-unit"
     ]
    },
    "type": "string",
    "description": "Unit could be Bytes or Count."
   },
   "schemas:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "MetricSpecification-dimensions",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/MetricSpecification-dimensions"
     ]
    },
    "description": "Dimensions of blobs, including blob type and access tier.",
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:26"
    }
   },
   "schemas:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "MetricSpecification-aggregationType",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/MetricSpecification-aggregationType"
     ]
    },
    "type": "string",
    "description": "Aggregation type could be Average."
   },
   "schemas:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "MetricSpecification-category",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/MetricSpecification-category"
     ]
    },
    "type": "string",
    "description": "The category this metric specification belong to, could be Capacity."
   },
   "schemas:25": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "MetricSpecification-resourceIdDimensionNameOverride",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/MetricSpecification-resourceIdDimensionNameOverride"
     ]
    },
    "type": "string",
    "description": "Account Resource Id."
   },
   "schemas:26": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Dimension",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Dimension"
     ]
    },
    "description": "Dimension of blobs, possibly be blob type or access tier.",
    "properties": {
     "name": {
      "description": "Display name of dimension.",
      "$ref": "#/components/schemas/schemas:27"
     },
     "displayName": {
      "description": "Display name of dimension.",
      "$ref": "#/components/schemas/schemas:28"
     }
    }
   },
   "schemas:27": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Dimension-name",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Dimension-name"
     ]
    },
    "type": "string",
    "description": "Display name of dimension."
   },
   "schemas:28": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Dimension-displayName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Dimension-displayName"
     ]
    },
    "type": "string",
    "description": "Display name of dimension."
   },
   "schemas:29": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountCheckNameAvailabilityParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountCheckNameAvailabilityParameters"
     ]
    },
    "properties": {
     "name": {
      "description": "The storage account name.",
      "$ref": "#/components/schemas/schemas:30"
     },
     "type": {
      "description": "The type of resource, Microsoft.Storage/storageAccounts",
      "$ref": "#/components/schemas/Type"
     }
    },
    "description": "The parameters used to check the availability of the storage account name.",
    "required": [
     "name",
     "type"
    ]
   },
   "schemas:30": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountCheckNameAvailabilityParameters-name",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountCheckNameAvailabilityParameters-name"
     ]
    },
    "type": "string",
    "description": "The storage account name."
   },
   "schemas:32": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "SKUCapability",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/SKUCapability"
     ]
    },
    "properties": {
     "name": {
      "description": "The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:33"
     },
     "value": {
      "description": "A string value to indicate states of given capability. Possibly 'true' or 'false'.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:34"
     }
    },
    "description": "The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc."
   },
   "schemas:33": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "SKUCapability-name",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/SKUCapability-name"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc."
   },
   "schemas:34": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "SKUCapability-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/SKUCapability-value"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "A string value to indicate states of given capability. Possibly 'true' or 'false'."
   },
   "schemas:35": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Restriction",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Restriction"
     ]
    },
    "properties": {
     "type": {
      "description": "The type of restrictions. As of now only possible value for this is location.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:36"
     },
     "values": {
      "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:37"
     },
     "reasonCode": {
      "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC.",
      "$ref": "#/components/schemas/ReasonCode"
     }
    },
    "description": "The restriction because of which SKU cannot be used."
   },
   "schemas:36": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Restriction-type",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Restriction-type"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "The type of restrictions. As of now only possible value for this is location."
   },
   "schemas:37": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Restriction-values",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Restriction-values"
     ]
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:38"
    },
    "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted."
   },
   "schemas:38": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Restriction-valuesItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Restriction-valuesItem"
     ]
    },
    "type": "string"
   },
   "schemas:40": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageSkuListResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageSkuListResult"
     ]
    },
    "properties": {
     "value": {
      "description": "Get the list result of storage SKUs and their properties.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:41"
     }
    },
    "description": "The response from the List Storage SKUs operation."
   },
   "schemas:41": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageSkuListResult-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageSkuListResult-value"
     ]
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:45"
    },
    "description": "Get the list result of storage SKUs and their properties."
   },
   "schemas:42": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "CheckNameAvailabilityResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/CheckNameAvailabilityResult"
     ]
    },
    "properties": {
     "nameAvailable": {
      "readOnly": true,
      "type": "boolean",
      "description": "Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used."
     },
     "reason": {
      "description": "Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.",
      "readOnly": true,
      "$ref": "#/components/schemas/Reason"
     },
     "message": {
      "description": "Gets an error message explaining the Reason value in more detail.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:44"
     }
    },
    "description": "The CheckNameAvailability operation response."
   },
   "schemas:44": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "CheckNameAvailabilityResult-message",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/CheckNameAvailabilityResult-message"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets an error message explaining the Reason value in more detail."
   },
   "schemas:45": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "SkuInformation",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/SkuInformation"
     ]
    },
    "properties": {
     "name": {
      "$ref": "#/components/schemas/SkuName"
     },
     "tier": {
      "$ref": "#/components/schemas/SkuTier"
     },
     "resourceType": {
      "description": "The type of the resource, usually it is 'storageAccounts'.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:46"
     },
     "kind": {
      "description": "Indicates the type of storage account.",
      "readOnly": true,
      "$ref": "#/components/schemas/Kind"
     },
     "locations": {
      "description": "The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:48"
     },
     "capabilities": {
      "description": "The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:50"
     },
     "restrictions": {
      "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.",
      "$ref": "#/components/schemas/schemas:51"
     }
    },
    "description": "Storage SKU and its properties",
    "required": [
     "name"
    ]
   },
   "schemas:46": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "SkuInformation-resourceType",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/SkuInformation-resourceType"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "The type of the resource, usually it is 'storageAccounts'."
   },
   "schemas:48": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "SkuInformation-locations",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/SkuInformation-locations"
     ]
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:49"
    },
    "description": "The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.)."
   },
   "schemas:49": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "SkuInformation-locationsItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/SkuInformation-locationsItem"
     ]
    },
    "type": "string"
   },
   "schemas:50": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "SkuInformation-capabilities",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/SkuInformation-capabilities"
     ]
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:32"
    },
    "description": "The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc."
   },
   "schemas:51": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "SkuInformation-restrictions",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/SkuInformation-restrictions"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:35"
    },
    "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions."
   },
   "schemas:52": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "CustomDomain",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/CustomDomain"
     ]
    },
    "properties": {
     "name": {
      "description": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.",
      "$ref": "#/components/schemas/schemas:53"
     },
     "useSubDomainName": {
      "type": "boolean",
      "description": "Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates."
     }
    },
    "description": "The custom domain assigned to this storage account. This can be set via Update.",
    "required": [
     "name"
    ]
   },
   "schemas:53": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "CustomDomain-name",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/CustomDomain-name"
     ]
    },
    "type": "string",
    "description": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source."
   },
   "schemas:54": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionService",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionService"
     ]
    },
    "properties": {
     "enabled": {
      "type": "boolean",
      "description": "A boolean indicating whether or not the service encrypts the data as it is stored."
     },
     "lastEnabledTime": {
      "description": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:55"
     },
     "keyType": {
      "description": "Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.",
      "$ref": "#/components/schemas/KeyType"
     }
    },
    "description": "A service that allows server-side encryption to be used."
   },
   "schemas:55": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionService-lastEnabledTime",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionService-lastEnabledTime"
     ]
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate."
   },
   "schemas:57": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionServices",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionServices"
     ]
    },
    "properties": {
     "blob": {
      "description": "The encryption function of the blob storage service.",
      "$ref": "#/components/schemas/schemas:54"
     },
     "file": {
      "description": "The encryption function of the file storage service.",
      "$ref": "#/components/schemas/schemas:54"
     },
     "table": {
      "description": "The encryption function of the table storage service.",
      "$ref": "#/components/schemas/schemas:54"
     },
     "queue": {
      "description": "The encryption function of the queue storage service.",
      "$ref": "#/components/schemas/schemas:54"
     }
    },
    "description": "A list of services that support encryption."
   },
   "schemas:58": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "KeyVaultProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/KeyVaultProperties"
     ]
    },
    "description": "Properties of key vault.",
    "properties": {
     "keyname": {
      "description": "The name of KeyVault key.",
      "x-ms-client-name": "KeyName",
      "$ref": "#/components/schemas/schemas:59"
     },
     "keyversion": {
      "description": "The version of KeyVault key.",
      "x-ms-client-name": "KeyVersion",
      "$ref": "#/components/schemas/schemas:60"
     },
     "keyvaulturi": {
      "description": "The Uri of KeyVault.",
      "x-ms-client-name": "KeyVaultUri",
      "$ref": "#/components/schemas/schemas:61"
     }
    }
   },
   "schemas:59": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "KeyVaultProperties-keyname",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/KeyVaultProperties-keyname"
     ]
    },
    "type": "string",
    "description": "The name of KeyVault key.",
    "x-ms-client-name": "KeyName"
   },
   "schemas:60": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "KeyVaultProperties-keyversion",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/KeyVaultProperties-keyversion"
     ]
    },
    "type": "string",
    "description": "The version of KeyVault key.",
    "x-ms-client-name": "KeyVersion"
   },
   "schemas:61": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "KeyVaultProperties-keyvaulturi",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/KeyVaultProperties-keyvaulturi"
     ]
    },
    "type": "string",
    "description": "The Uri of KeyVault.",
    "x-ms-client-name": "KeyVaultUri"
   },
   "schemas:62": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Encryption",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Encryption"
     ]
    },
    "properties": {
     "services": {
      "description": "List of services which support encryption.",
      "$ref": "#/components/schemas/schemas:57"
     },
     "keySource": {
      "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault",
      "$ref": "#/components/schemas/KeySource"
     },
     "keyvaultproperties": {
      "x-ms-client-name": "KeyVaultProperties",
      "description": "Properties provided by key vault.",
      "$ref": "#/components/schemas/schemas:58"
     }
    },
    "description": "The encryption settings on the storage account.",
    "required": [
     "keySource"
    ]
   },
   "schemas:64": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "VirtualNetworkRule",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/VirtualNetworkRule"
     ]
    },
    "properties": {
     "id": {
      "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
      "x-ms-client-name": "VirtualNetworkResourceId",
      "$ref": "#/components/schemas/schemas:65"
     },
     "action": {
      "description": "The action of virtual network rule.",
      "$ref": "#/components/schemas/Action"
     },
     "state": {
      "description": "Gets the state of virtual network rule.",
      "$ref": "#/components/schemas/State"
     }
    },
    "description": "Virtual Network rule.",
    "required": [
     "id"
    ]
   },
   "schemas:65": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "VirtualNetworkRule-id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/VirtualNetworkRule-id"
     ]
    },
    "type": "string",
    "x-ms-client-name": "VirtualNetworkResourceId",
    "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}."
   },
   "schemas:68": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "IPRule",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/IPRule"
     ]
    },
    "properties": {
     "value": {
      "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
      "x-ms-client-name": "IPAddressOrRange",
      "$ref": "#/components/schemas/schemas:69"
     },
     "action": {
      "description": "The action of IP ACL rule.",
      "$ref": "#/components/schemas/Action"
     }
    },
    "description": "IP rule with specific IP or IP range in CIDR format.",
    "required": [
     "value"
    ]
   },
   "schemas:69": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "IPRule-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/IPRule-value"
     ]
    },
    "type": "string",
    "x-ms-client-name": "IPAddressOrRange",
    "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."
   },
   "schemas:71": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "NetworkRuleSet",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/NetworkRuleSet"
     ]
    },
    "properties": {
     "bypass": {
      "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics.",
      "x-ms-client-name": "Bypass",
      "$ref": "#/components/schemas/Bypass"
     },
     "virtualNetworkRules": {
      "description": "Sets the virtual network rules",
      "$ref": "#/components/schemas/schemas:73"
     },
     "ipRules": {
      "description": "Sets the IP ACL rules",
      "$ref": "#/components/schemas/schemas:74"
     },
     "defaultAction": {
      "description": "Specifies the default action of allow or deny when no other rules match.",
      "$ref": "#/components/schemas/DefaultAction"
     }
    },
    "description": "Network rule set",
    "required": [
     "defaultAction"
    ]
   },
   "schemas:73": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "NetworkRuleSet-virtualNetworkRules",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/NetworkRuleSet-virtualNetworkRules"
     ]
    },
    "type": "array",
    "items": {
     "description": "Virtual Network rule.",
     "$ref": "#/components/schemas/schemas:64"
    },
    "description": "Sets the virtual network rules"
   },
   "schemas:74": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "NetworkRuleSet-ipRules",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/NetworkRuleSet-ipRules"
     ]
    },
    "type": "array",
    "items": {
     "description": "IP rule with specific IP or IP range in CIDR format.",
     "$ref": "#/components/schemas/schemas:68"
    },
    "description": "Sets the IP ACL rules"
   },
   "schemas:76": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "AzureFilesIdentityBasedAuthentication",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/AzureFilesIdentityBasedAuthentication"
     ]
    },
    "properties": {
     "directoryServiceOptions": {
      "description": "Indicates the directory service used.",
      "$ref": "#/components/schemas/DirectoryServiceOptions"
     },
     "activeDirectoryProperties": {
      "description": "Required if choose AD.",
      "$ref": "#/components/schemas/schemas:78"
     }
    },
    "description": "Settings for Azure Files identity based authentication.",
    "required": [
     "directoryServiceOptions"
    ]
   },
   "schemas:78": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ActiveDirectoryProperties"
     ]
    },
    "properties": {
     "domainName": {
      "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
      "$ref": "#/components/schemas/schemas:79"
     },
     "netBiosDomainName": {
      "description": "Specifies the NetBIOS domain name.",
      "$ref": "#/components/schemas/schemas:80"
     },
     "forestName": {
      "description": "Specifies the Active Directory forest to get.",
      "$ref": "#/components/schemas/schemas:81"
     },
     "domainGuid": {
      "description": "Specifies the domain GUID.",
      "$ref": "#/components/schemas/schemas:82"
     },
     "domainSid": {
      "description": "Specifies the security identifier (SID).",
      "$ref": "#/components/schemas/schemas:83"
     },
     "azureStorageSid": {
      "description": "Specifies the security identifier (SID) for Azure Storage.",
      "$ref": "#/components/schemas/schemas:84"
     }
    },
    "description": "Settings properties for Active Directory (AD).",
    "required": [
     "domainName",
     "netBiosDomainName",
     "forestName",
     "domainGuid",
     "domainSid",
     "azureStorageSid"
    ]
   },
   "schemas:79": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-domainName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ActiveDirectoryProperties-domainName"
     ]
    },
    "type": "string",
    "description": "Specifies the primary domain that the AD DNS server is authoritative for."
   },
   "schemas:80": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-netBiosDomainName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ActiveDirectoryProperties-netBiosDomainName"
     ]
    },
    "type": "string",
    "description": "Specifies the NetBIOS domain name."
   },
   "schemas:81": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-forestName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ActiveDirectoryProperties-forestName"
     ]
    },
    "type": "string",
    "description": "Specifies the Active Directory forest to get."
   },
   "schemas:82": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-domainGuid",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ActiveDirectoryProperties-domainGuid"
     ]
    },
    "type": "string",
    "description": "Specifies the domain GUID."
   },
   "schemas:83": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-domainSid",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ActiveDirectoryProperties-domainSid"
     ]
    },
    "type": "string",
    "description": "Specifies the security identifier (SID)."
   },
   "schemas:84": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-azureStorageSid",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ActiveDirectoryProperties-azureStorageSid"
     ]
    },
    "type": "string",
    "description": "Specifies the security identifier (SID) for Azure Storage."
   },
   "schemas:85": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountPropertiesCreateParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountPropertiesCreateParameters"
     ]
    },
    "properties": {
     "customDomain": {
      "description": "User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.",
      "$ref": "#/components/schemas/schemas:52"
     },
     "encryption": {
      "description": "Not applicable. Azure Storage encryption is enabled for all storage accounts and cannot be disabled.",
      "$ref": "#/components/schemas/schemas:62"
     },
     "networkAcls": {
      "x-ms-client-name": "NetworkRuleSet",
      "description": "Network rule set",
      "$ref": "#/components/schemas/schemas:71"
     },
     "accessTier": {
      "description": "Required for storage accounts where kind = BlobStorage. The access tier used for billing.",
      "$ref": "#/components/schemas/AccessTier"
     },
     "azureFilesIdentityBasedAuthentication": {
      "description": "Provides the identity based authentication settings for Azure Files.",
      "$ref": "#/components/schemas/schemas:76"
     },
     "supportsHttpsTrafficOnly": {
      "type": "boolean",
      "x-ms-client-name": "EnableHttpsTrafficOnly",
      "description": "Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01."
     },
     "isHnsEnabled": {
      "type": "boolean",
      "x-ms-client-name": "IsHnsEnabled",
      "description": "Account HierarchicalNamespace enabled if sets to true."
     },
     "largeFileSharesState": {
      "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
      "$ref": "#/components/schemas/LargeFileSharesState"
     },
     "routingPreference": {
      "x-ms-client-name": "RoutingPreference",
      "description": "Maintains information about the network routing choice opted by the user for data transfer",
      "$ref": "#/components/schemas/schemas:119"
     }
    },
    "description": "The parameters used to create the storage account."
   },
   "schemas:88": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Identity",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Identity"
     ]
    },
    "properties": {
     "principalId": {
      "description": "The principal ID of resource identity.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:89"
     },
     "tenantId": {
      "description": "The tenant ID of resource.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:90"
     },
     "type": {
      "description": "The identity type.",
      "$ref": "#/components/schemas/IdentityType"
     }
    },
    "description": "Identity for the resource.",
    "required": [
     "type"
    ]
   },
   "schemas:89": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Identity-principalId",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Identity-principalId"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "The principal ID of resource identity."
   },
   "schemas:90": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Identity-tenantId",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Identity-tenantId"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "The tenant ID of resource."
   },
   "schemas:92": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountCreateParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountCreateParameters"
     ]
    },
    "properties": {
     "sku": {
      "description": "Required. Gets or sets the SKU name.",
      "$ref": "#/components/schemas/schemas:421"
     },
     "kind": {
      "description": "Required. Indicates the type of storage account.",
      "$ref": "#/components/schemas/Kind"
     },
     "location": {
      "description": "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.",
      "$ref": "#/components/schemas/schemas:94"
     },
     "tags": {
      "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.",
      "$ref": "#/components/schemas/schemas:95"
     },
     "identity": {
      "description": "The identity of the resource.",
      "$ref": "#/components/schemas/schemas:88"
     },
     "properties": {
      "x-ms-client-flatten": true,
      "description": "The parameters used to create the storage account.",
      "$ref": "#/components/schemas/schemas:85"
     }
    },
    "description": "The parameters used when creating a storage account.",
    "required": [
     "sku",
     "kind",
     "location"
    ]
   },
   "schemas:94": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountCreateParameters-location",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountCreateParameters-location"
     ]
    },
    "type": "string",
    "description": "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed."
   },
   "schemas:95": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountCreateParameters-tags",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountCreateParameters-tags"
     ]
    },
    "type": "object",
    "additionalProperties": {
     "$ref": "#/components/schemas/schemas:96"
    },
    "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters."
   },
   "schemas:96": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "components·1m4uqah·schemas·storageaccountcreateparameters·properties·tags·additionalproperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/components·1m4uqah·schemas·storageaccountcreateparameters·properties·tags·additionalproperties"
     ]
    },
    "type": "string"
   },
   "schemas:97": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Endpoints",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Endpoints"
     ]
    },
    "properties": {
     "blob": {
      "description": "Gets the blob endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:98"
     },
     "queue": {
      "description": "Gets the queue endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:99"
     },
     "table": {
      "description": "Gets the table endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:100"
     },
     "file": {
      "description": "Gets the file endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:101"
     },
     "web": {
      "description": "Gets the web endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:102"
     },
     "dfs": {
      "description": "Gets the dfs endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:103"
     },
     "microsoftEndpoints": {
      "x-ms-client-flatten": false,
      "description": "Gets the microsoft routing storage endpoints.",
      "$ref": "#/components/schemas/schemas:104"
     },
     "internetEndpoints": {
      "x-ms-client-flatten": false,
      "description": "Gets the internet routing storage endpoints",
      "$ref": "#/components/schemas/schemas:111"
     }
    },
    "description": "The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object."
   },
   "schemas:98": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Endpoints-blob",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Endpoints-blob"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the blob endpoint."
   },
   "schemas:99": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Endpoints-queue",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Endpoints-queue"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the queue endpoint."
   },
   "schemas:100": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Endpoints-table",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Endpoints-table"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the table endpoint."
   },
   "schemas:101": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Endpoints-file",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Endpoints-file"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the file endpoint."
   },
   "schemas:102": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Endpoints-web",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Endpoints-web"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the web endpoint."
   },
   "schemas:103": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Endpoints-dfs",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Endpoints-dfs"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the dfs endpoint."
   },
   "schemas:104": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints"
     ]
    },
    "properties": {
     "blob": {
      "description": "Gets the blob endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:105"
     },
     "queue": {
      "description": "Gets the queue endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:106"
     },
     "table": {
      "description": "Gets the table endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:107"
     },
     "file": {
      "description": "Gets the file endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:108"
     },
     "web": {
      "description": "Gets the web endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:109"
     },
     "dfs": {
      "description": "Gets the dfs endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:110"
     }
    },
    "description": "The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing endpoint."
   },
   "schemas:105": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints-blob",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints-blob"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the blob endpoint."
   },
   "schemas:106": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints-queue",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints-queue"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the queue endpoint."
   },
   "schemas:107": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints-table",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints-table"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the table endpoint."
   },
   "schemas:108": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints-file",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints-file"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the file endpoint."
   },
   "schemas:109": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints-web",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints-web"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the web endpoint."
   },
   "schemas:110": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints-dfs",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints-dfs"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the dfs endpoint."
   },
   "schemas:111": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountInternetEndpoints",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountInternetEndpoints"
     ]
    },
    "properties": {
     "blob": {
      "description": "Gets the blob endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:112"
     },
     "file": {
      "description": "Gets the file endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:113"
     },
     "web": {
      "description": "Gets the web endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:114"
     },
     "dfs": {
      "description": "Gets the dfs endpoint.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:115"
     }
    },
    "description": "The URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint."
   },
   "schemas:112": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountInternetEndpoints-blob",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountInternetEndpoints-blob"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the blob endpoint."
   },
   "schemas:113": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountInternetEndpoints-file",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountInternetEndpoints-file"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the file endpoint."
   },
   "schemas:114": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountInternetEndpoints-web",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountInternetEndpoints-web"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the web endpoint."
   },
   "schemas:115": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountInternetEndpoints-dfs",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountInternetEndpoints-dfs"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the dfs endpoint."
   },
   "schemas:116": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "GeoReplicationStats",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/GeoReplicationStats"
     ]
    },
    "properties": {
     "status": {
      "description": "The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.",
      "readOnly": true,
      "$ref": "#/components/schemas/GeoReplicationStatus"
     },
     "lastSyncTime": {
      "description": "All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:118"
     },
     "canFailover": {
      "readOnly": true,
      "type": "boolean",
      "description": "A boolean flag which indicates whether or not account failover is supported for the account."
     }
    },
    "description": "Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account."
   },
   "schemas:118": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "GeoReplicationStats-lastSyncTime",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/GeoReplicationStats-lastSyncTime"
     ]
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap."
   },
   "schemas:119": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "RoutingPreference",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/RoutingPreference"
     ]
    },
    "properties": {
     "routingChoice": {
      "description": "Routing Choice defines the kind of network routing opted by the user.",
      "$ref": "#/components/schemas/RoutingChoice"
     },
     "publishMicrosoftEndpoints": {
      "type": "boolean",
      "description": "A boolean flag which indicates whether microsoft routing storage endpoints are to be published"
     },
     "publishInternetEndpoints": {
      "type": "boolean",
      "description": "A boolean flag which indicates whether internet routing storage endpoints are to be published"
     }
    },
    "description": "Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing"
   },
   "schemas:121": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "BlobRestoreStatus",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/BlobRestoreStatus"
     ]
    },
    "properties": {
     "status": {
      "description": "The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.",
      "readOnly": true,
      "$ref": "#/components/schemas/BlobRestoreProgressStatus"
     },
     "failureReason": {
      "description": "Failure reason when blob restore is failed.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:123"
     },
     "restoreId": {
      "description": "Id for tracking blob restore request.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:124"
     },
     "parameters": {
      "readOnly": true,
      "description": "Blob restore request parameters.",
      "$ref": "#/components/schemas/schemas:156"
     }
    },
    "description": "Blob restore status."
   },
   "schemas:123": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "BlobRestoreStatus-failureReason",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/BlobRestoreStatus-failureReason"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Failure reason when blob restore is failed."
   },
   "schemas:124": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "BlobRestoreStatus-restoreId",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/BlobRestoreStatus-restoreId"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Id for tracking blob restore request."
   },
   "schemas:125": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountProperties"
     ]
    },
    "properties": {
     "provisioningState": {
      "description": "Gets the status of the storage account at the time the operation was called.",
      "readOnly": true,
      "$ref": "#/components/schemas/ProvisioningState"
     },
     "primaryEndpoints": {
      "readOnly": true,
      "description": "Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.",
      "$ref": "#/components/schemas/schemas:97"
     },
     "primaryLocation": {
      "description": "Gets the location of the primary data center for the storage account.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:127"
     },
     "statusOfPrimary": {
      "description": "Gets the status indicating whether the primary location of the storage account is available or unavailable.",
      "readOnly": true,
      "$ref": "#/components/schemas/AccountStatus"
     },
     "lastGeoFailoverTime": {
      "description": "Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:129"
     },
     "secondaryLocation": {
      "description": "Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:130"
     },
     "statusOfSecondary": {
      "description": "Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.",
      "readOnly": true,
      "$ref": "#/components/schemas/AccountStatus"
     },
     "creationTime": {
      "description": "Gets the creation date and time of the storage account in UTC.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:132"
     },
     "customDomain": {
      "readOnly": true,
      "description": "Gets the custom domain the user assigned to this storage account.",
      "$ref": "#/components/schemas/schemas:52"
     },
     "secondaryEndpoints": {
      "readOnly": true,
      "description": "Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.",
      "$ref": "#/components/schemas/schemas:97"
     },
     "encryption": {
      "readOnly": true,
      "description": "Gets the encryption settings on the account. If unspecified, the account is unencrypted.",
      "$ref": "#/components/schemas/schemas:62"
     },
     "accessTier": {
      "description": "Required for storage accounts where kind = BlobStorage. The access tier used for billing.",
      "readOnly": true,
      "$ref": "#/components/schemas/AccessTier"
     },
     "azureFilesIdentityBasedAuthentication": {
      "description": "Provides the identity based authentication settings for Azure Files.",
      "$ref": "#/components/schemas/schemas:76"
     },
     "supportsHttpsTrafficOnly": {
      "type": "boolean",
      "x-ms-client-name": "EnableHttpsTrafficOnly",
      "description": "Allows https traffic only to storage service if sets to true."
     },
     "networkAcls": {
      "x-ms-client-name": "NetworkRuleSet",
      "description": "Network rule set",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:71"
     },
     "isHnsEnabled": {
      "type": "boolean",
      "x-ms-client-name": "IsHnsEnabled",
      "description": "Account HierarchicalNamespace enabled if sets to true."
     },
     "geoReplicationStats": {
      "x-ms-client-name": "GeoReplicationStats",
      "description": "Geo Replication Stats",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:116"
     },
     "failoverInProgress": {
      "type": "boolean",
      "x-ms-client-name": "FailoverInProgress",
      "description": "If the failover is in progress, the value will be true, otherwise, it will be null.",
      "readOnly": true
     },
     "largeFileSharesState": {
      "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
      "$ref": "#/components/schemas/LargeFileSharesState"
     },
     "privateEndpointConnections": {
      "description": "List of private endpoint connection associated with the specified storage account",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:135"
     },
     "routingPreference": {
      "x-ms-client-name": "RoutingPreference",
      "description": "Maintains information about the network routing choice opted by the user for data transfer",
      "$ref": "#/components/schemas/schemas:119"
     },
     "blobRestoreStatus": {
      "x-ms-client-name": "BlobRestoreStatus",
      "description": "Blob restore status",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:121"
     }
    },
    "description": "Properties of the storage account."
   },
   "schemas:127": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountProperties-primaryLocation",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountProperties-primaryLocation"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the location of the primary data center for the storage account."
   },
   "schemas:129": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountProperties-lastGeoFailoverTime",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountProperties-lastGeoFailoverTime"
     ]
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS."
   },
   "schemas:130": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountProperties-secondaryLocation",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountProperties-secondaryLocation"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS."
   },
   "schemas:132": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountProperties-creationTime",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountProperties-creationTime"
     ]
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Gets the creation date and time of the storage account in UTC."
   },
   "schemas:135": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountProperties-privateEndpointConnections",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountProperties-privateEndpointConnections"
     ]
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:220"
    },
    "description": "List of private endpoint connection associated with the specified storage account"
   },
   "schemas:136": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccount",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccount"
     ]
    },
    "properties": {
     "sku": {
      "readOnly": true,
      "description": "Gets the SKU.",
      "$ref": "#/components/schemas/schemas:421"
     },
     "kind": {
      "description": "Gets the Kind.",
      "readOnly": true,
      "$ref": "#/components/schemas/Kind"
     },
     "identity": {
      "description": "The identity of the resource.",
      "$ref": "#/components/schemas/schemas:88"
     },
     "properties": {
      "x-ms-client-flatten": true,
      "description": "Properties of the storage account.",
      "$ref": "#/components/schemas/schemas:125"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:347"
     }
    ],
    "description": "The storage account."
   },
   "schemas:138": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountKey",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountKey"
     ]
    },
    "properties": {
     "keyName": {
      "description": "Name of the key.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:139"
     },
     "value": {
      "description": "Base 64-encoded value of the key.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:140"
     },
     "permissions": {
      "description": "Permissions for the key -- read-only or full permissions.",
      "readOnly": true,
      "$ref": "#/components/schemas/KeyPermission"
     }
    },
    "description": "An access key for the storage account."
   },
   "schemas:139": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountKey-keyName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountKey-keyName"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Name of the key."
   },
   "schemas:140": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountKey-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountKey-value"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Base 64-encoded value of the key."
   },
   "schemas:142": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountListResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountListResult"
     ]
    },
    "properties": {
     "value": {
      "description": "Gets the list of storage accounts and their properties.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:143"
     },
     "nextLink": {
      "description": "Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:144"
     }
    },
    "description": "The response from the List Storage Accounts operation."
   },
   "schemas:143": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountListResult-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountListResult-value"
     ]
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:136"
    },
    "description": "Gets the list of storage accounts and their properties."
   },
   "schemas:144": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountListResult-nextLink",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountListResult-nextLink"
     ]
    },
    "type": "string",
    "description": "Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size.",
    "readOnly": true
   },
   "schemas:145": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountListKeysResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountListKeysResult"
     ]
    },
    "properties": {
     "keys": {
      "description": "Gets the list of storage account keys and their properties for the specified storage account.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:146"
     }
    },
    "description": "The response from the ListKeys operation."
   },
   "schemas:146": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountListKeysResult-keys",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountListKeysResult-keys"
     ]
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:138"
    },
    "description": "Gets the list of storage account keys and their properties for the specified storage account."
   },
   "schemas:147": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountRegenerateKeyParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountRegenerateKeyParameters"
     ]
    },
    "properties": {
     "keyName": {
      "description": "The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2.",
      "$ref": "#/components/schemas/schemas:148"
     }
    },
    "description": "The parameters used to regenerate the storage account key.",
    "required": [
     "keyName"
    ]
   },
   "schemas:148": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountRegenerateKeyParameters-keyName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountRegenerateKeyParameters-keyName"
     ]
    },
    "type": "string",
    "description": "The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2."
   },
   "schemas:149": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountPropertiesUpdateParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountPropertiesUpdateParameters"
     ]
    },
    "properties": {
     "customDomain": {
      "description": "Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.",
      "$ref": "#/components/schemas/schemas:52"
     },
     "encryption": {
      "description": "Provides the encryption settings on the account. The default setting is unencrypted.",
      "$ref": "#/components/schemas/schemas:62"
     },
     "accessTier": {
      "description": "Required for storage accounts where kind = BlobStorage. The access tier used for billing.",
      "$ref": "#/components/schemas/AccessTier"
     },
     "azureFilesIdentityBasedAuthentication": {
      "description": "Provides the identity based authentication settings for Azure Files.",
      "$ref": "#/components/schemas/schemas:76"
     },
     "supportsHttpsTrafficOnly": {
      "type": "boolean",
      "x-ms-client-name": "EnableHttpsTrafficOnly",
      "description": "Allows https traffic only to storage service if sets to true."
     },
     "networkAcls": {
      "description": "Network rule set",
      "x-ms-client-name": "NetworkRuleSet",
      "$ref": "#/components/schemas/schemas:71"
     },
     "largeFileSharesState": {
      "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
      "$ref": "#/components/schemas/LargeFileSharesState"
     },
     "routingPreference": {
      "x-ms-client-name": "RoutingPreference",
      "description": "Maintains information about the network routing choice opted by the user for data transfer",
      "$ref": "#/components/schemas/schemas:119"
     }
    },
    "description": "The parameters used when updating a storage account."
   },
   "schemas:152": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountUpdateParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountUpdateParameters"
     ]
    },
    "properties": {
     "sku": {
      "description": "Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of those SKU names be updated to any other value.",
      "$ref": "#/components/schemas/schemas:421"
     },
     "tags": {
      "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.",
      "$ref": "#/components/schemas/schemas:153"
     },
     "identity": {
      "description": "The identity of the resource.",
      "$ref": "#/components/schemas/schemas:88"
     },
     "properties": {
      "x-ms-client-flatten": true,
      "description": "The parameters used when updating a storage account.",
      "$ref": "#/components/schemas/schemas:149"
     },
     "kind": {
      "description": "Optional. Indicates the type of storage account. Currently only StorageV2 value supported by server.",
      "$ref": "#/components/schemas/Kind"
     }
    },
    "description": "The parameters that can be provided when updating the storage account properties."
   },
   "schemas:153": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountUpdateParameters-tags",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountUpdateParameters-tags"
     ]
    },
    "type": "object",
    "additionalProperties": {
     "$ref": "#/components/schemas/schemas:154"
    },
    "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters."
   },
   "schemas:154": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "components·12iy6m8·schemas·storageaccountupdateparameters·properties·tags·additionalproperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/components·12iy6m8·schemas·storageaccountupdateparameters·properties·tags·additionalproperties"
     ]
    },
    "type": "string"
   },
   "schemas:156": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "BlobRestoreParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/BlobRestoreParameters"
     ]
    },
    "properties": {
     "timeToRestore": {
      "description": "Restore blob to the specified time.",
      "$ref": "#/components/schemas/schemas:157"
     },
     "blobRanges": {
      "description": "Blob ranges to restore.",
      "$ref": "#/components/schemas/schemas:158"
     }
    },
    "description": "Blob restore parameters",
    "required": [
     "timeToRestore",
     "blobRanges"
    ]
   },
   "schemas:157": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "BlobRestoreParameters-timeToRestore",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/BlobRestoreParameters-timeToRestore"
     ]
    },
    "type": "string",
    "format": "date-time",
    "description": "Restore blob to the specified time."
   },
   "schemas:158": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "BlobRestoreParameters-blobRanges",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/BlobRestoreParameters-blobRanges"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:159"
    },
    "description": "Blob ranges to restore."
   },
   "schemas:159": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "BlobRestoreRange",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/BlobRestoreRange"
     ]
    },
    "properties": {
     "startRange": {
      "description": "Blob start range. Empty means account start.",
      "$ref": "#/components/schemas/schemas:160"
     },
     "endRange": {
      "description": "Blob end range. Empty means account end.",
      "$ref": "#/components/schemas/schemas:161"
     }
    },
    "description": "Blob range",
    "required": [
     "startRange",
     "endRange"
    ]
   },
   "schemas:160": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "BlobRestoreRange-startRange",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/BlobRestoreRange-startRange"
     ]
    },
    "type": "string",
    "description": "Blob start range. Empty means account start."
   },
   "schemas:161": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "BlobRestoreRange-endRange",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/BlobRestoreRange-endRange"
     ]
    },
    "type": "string",
    "description": "Blob end range. Empty means account end."
   },
   "schemas:162": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "UsageName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/UsageName"
     ]
    },
    "properties": {
     "value": {
      "description": "Gets a string describing the resource name.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:163"
     },
     "localizedValue": {
      "description": "Gets a localized string describing the resource name.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:164"
     }
    },
    "description": "The usage names that can be used; currently limited to StorageAccount."
   },
   "schemas:163": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "UsageName-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/UsageName-value"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets a string describing the resource name."
   },
   "schemas:164": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "UsageName-localizedValue",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/UsageName-localizedValue"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets a localized string describing the resource name."
   },
   "schemas:165": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Usage",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Usage"
     ]
    },
    "properties": {
     "unit": {
      "description": "Gets the unit of measurement.",
      "readOnly": true,
      "$ref": "#/components/schemas/UsageUnit"
     },
     "currentValue": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "Gets the current count of the allocated resources in the subscription."
     },
     "limit": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "Gets the maximum count of the resources that can be allocated in the subscription."
     },
     "name": {
      "readOnly": true,
      "description": "Gets the name of the type of usage.",
      "$ref": "#/components/schemas/schemas:162"
     }
    },
    "description": "Describes Storage Resource Usage."
   },
   "schemas:167": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "UsageListResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/UsageListResult"
     ]
    },
    "properties": {
     "value": {
      "description": "Gets or sets the list of Storage Resource Usages.",
      "$ref": "#/components/schemas/schemas:168"
     }
    },
    "description": "The response from the List Usages operation."
   },
   "schemas:168": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "UsageListResult-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/UsageListResult-value"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:165"
    },
    "description": "Gets or sets the list of Storage Resource Usages."
   },
   "schemas:169": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "AccountSasParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/AccountSasParameters"
     ]
    },
    "properties": {
     "signedServices": {
      "description": "The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f).",
      "x-ms-client-name": "Services",
      "$ref": "#/components/schemas/Services"
     },
     "signedResourceTypes": {
      "description": "The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files.",
      "x-ms-client-name": "ResourceTypes",
      "$ref": "#/components/schemas/SignedResourceTypes"
     },
     "signedPermission": {
      "description": "The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).",
      "x-ms-client-name": "Permissions",
      "$ref": "#/components/schemas/Permissions"
     },
     "signedIp": {
      "description": "An IP address or a range of IP addresses from which to accept requests.",
      "x-ms-client-name": "IPAddressOrRange",
      "$ref": "#/components/schemas/schemas:173"
     },
     "signedProtocol": {
      "description": "The protocol permitted for a request made with the account SAS.",
      "x-ms-client-name": "Protocols",
      "$ref": "#/components/schemas/HttpProtocol"
     },
     "signedStart": {
      "description": "The time at which the SAS becomes valid.",
      "x-ms-client-name": "SharedAccessStartTime",
      "$ref": "#/components/schemas/schemas:175"
     },
     "signedExpiry": {
      "description": "The time at which the shared access signature becomes invalid.",
      "x-ms-client-name": "SharedAccessExpiryTime",
      "$ref": "#/components/schemas/schemas:176"
     },
     "keyToSign": {
      "description": "The key to sign the account SAS token with.",
      "$ref": "#/components/schemas/schemas:177"
     }
    },
    "description": "The parameters to list SAS credentials of a storage account.",
    "required": [
     "signedServices",
     "signedResourceTypes",
     "signedPermission",
     "signedExpiry"
    ]
   },
   "schemas:173": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "AccountSasParameters-signedIp",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/AccountSasParameters-signedIp"
     ]
    },
    "type": "string",
    "x-ms-client-name": "IPAddressOrRange",
    "description": "An IP address or a range of IP addresses from which to accept requests."
   },
   "schemas:175": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "AccountSasParameters-signedStart",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/AccountSasParameters-signedStart"
     ]
    },
    "type": "string",
    "format": "date-time",
    "x-ms-client-name": "SharedAccessStartTime",
    "description": "The time at which the SAS becomes valid."
   },
   "schemas:176": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "AccountSasParameters-signedExpiry",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/AccountSasParameters-signedExpiry"
     ]
    },
    "type": "string",
    "format": "date-time",
    "x-ms-client-name": "SharedAccessExpiryTime",
    "description": "The time at which the shared access signature becomes invalid."
   },
   "schemas:177": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "AccountSasParameters-keyToSign",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/AccountSasParameters-keyToSign"
     ]
    },
    "type": "string",
    "description": "The key to sign the account SAS token with."
   },
   "schemas:178": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ListAccountSasResponse",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ListAccountSasResponse"
     ]
    },
    "properties": {
     "accountSasToken": {
      "description": "List SAS credentials of storage account.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:179"
     }
    },
    "description": "The List SAS credentials operation response."
   },
   "schemas:179": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ListAccountSasResponse-accountSasToken",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ListAccountSasResponse-accountSasToken"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "List SAS credentials of storage account."
   },
   "schemas:180": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters"
     ]
    },
    "properties": {
     "canonicalizedResource": {
      "description": "The canonical path to the signed resource.",
      "$ref": "#/components/schemas/schemas:181"
     },
     "signedResource": {
      "description": "The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).",
      "x-ms-client-name": "Resource",
      "$ref": "#/components/schemas/signedResource"
     },
     "signedPermission": {
      "description": "The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).",
      "x-ms-client-name": "Permissions",
      "$ref": "#/components/schemas/Permissions"
     },
     "signedIp": {
      "description": "An IP address or a range of IP addresses from which to accept requests.",
      "x-ms-client-name": "IPAddressOrRange",
      "$ref": "#/components/schemas/schemas:184"
     },
     "signedProtocol": {
      "description": "The protocol permitted for a request made with the account SAS.",
      "x-ms-client-name": "Protocols",
      "$ref": "#/components/schemas/HttpProtocol"
     },
     "signedStart": {
      "description": "The time at which the SAS becomes valid.",
      "x-ms-client-name": "SharedAccessStartTime",
      "$ref": "#/components/schemas/schemas:186"
     },
     "signedExpiry": {
      "description": "The time at which the shared access signature becomes invalid.",
      "x-ms-client-name": "SharedAccessExpiryTime",
      "$ref": "#/components/schemas/schemas:187"
     },
     "signedIdentifier": {
      "description": "A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.",
      "x-ms-client-name": "Identifier",
      "$ref": "#/components/schemas/schemas:188"
     },
     "startPk": {
      "description": "The start of partition key.",
      "x-ms-client-name": "PartitionKeyStart",
      "$ref": "#/components/schemas/schemas:189"
     },
     "endPk": {
      "description": "The end of partition key.",
      "x-ms-client-name": "PartitionKeyEnd",
      "$ref": "#/components/schemas/schemas:190"
     },
     "startRk": {
      "description": "The start of row key.",
      "x-ms-client-name": "RowKeyStart",
      "$ref": "#/components/schemas/schemas:191"
     },
     "endRk": {
      "description": "The end of row key.",
      "x-ms-client-name": "RowKeyEnd",
      "$ref": "#/components/schemas/schemas:192"
     },
     "keyToSign": {
      "description": "The key to sign the account SAS token with.",
      "$ref": "#/components/schemas/schemas:193"
     },
     "rscc": {
      "description": "The response header override for cache control.",
      "x-ms-client-name": "CacheControl",
      "$ref": "#/components/schemas/schemas:194"
     },
     "rscd": {
      "description": "The response header override for content disposition.",
      "x-ms-client-name": "ContentDisposition",
      "$ref": "#/components/schemas/schemas:195"
     },
     "rsce": {
      "description": "The response header override for content encoding.",
      "x-ms-client-name": "ContentEncoding",
      "$ref": "#/components/schemas/schemas:196"
     },
     "rscl": {
      "description": "The response header override for content language.",
      "x-ms-client-name": "ContentLanguage",
      "$ref": "#/components/schemas/schemas:197"
     },
     "rsct": {
      "description": "The response header override for content type.",
      "x-ms-client-name": "ContentType",
      "$ref": "#/components/schemas/schemas:198"
     }
    },
    "description": "The parameters to list service SAS credentials of a specific resource.",
    "required": [
     "canonicalizedResource"
    ]
   },
   "schemas:181": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-canonicalizedResource",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-canonicalizedResource"
     ]
    },
    "type": "string",
    "description": "The canonical path to the signed resource."
   },
   "schemas:184": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-signedIp",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-signedIp"
     ]
    },
    "type": "string",
    "x-ms-client-name": "IPAddressOrRange",
    "description": "An IP address or a range of IP addresses from which to accept requests."
   },
   "schemas:186": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-signedStart",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-signedStart"
     ]
    },
    "type": "string",
    "format": "date-time",
    "x-ms-client-name": "SharedAccessStartTime",
    "description": "The time at which the SAS becomes valid."
   },
   "schemas:187": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-signedExpiry",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-signedExpiry"
     ]
    },
    "type": "string",
    "format": "date-time",
    "x-ms-client-name": "SharedAccessExpiryTime",
    "description": "The time at which the shared access signature becomes invalid."
   },
   "schemas:188": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-signedIdentifier",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-signedIdentifier"
     ]
    },
    "type": "string",
    "maxLength": 64,
    "x-ms-client-name": "Identifier",
    "description": "A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table."
   },
   "schemas:189": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-startPk",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-startPk"
     ]
    },
    "type": "string",
    "x-ms-client-name": "PartitionKeyStart",
    "description": "The start of partition key."
   },
   "schemas:190": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-endPk",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-endPk"
     ]
    },
    "type": "string",
    "x-ms-client-name": "PartitionKeyEnd",
    "description": "The end of partition key."
   },
   "schemas:191": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-startRk",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-startRk"
     ]
    },
    "type": "string",
    "x-ms-client-name": "RowKeyStart",
    "description": "The start of row key."
   },
   "schemas:192": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-endRk",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-endRk"
     ]
    },
    "type": "string",
    "x-ms-client-name": "RowKeyEnd",
    "description": "The end of row key."
   },
   "schemas:193": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-keyToSign",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-keyToSign"
     ]
    },
    "type": "string",
    "description": "The key to sign the account SAS token with."
   },
   "schemas:194": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-rscc",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-rscc"
     ]
    },
    "type": "string",
    "x-ms-client-name": "CacheControl",
    "description": "The response header override for cache control."
   },
   "schemas:195": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-rscd",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-rscd"
     ]
    },
    "type": "string",
    "x-ms-client-name": "ContentDisposition",
    "description": "The response header override for content disposition."
   },
   "schemas:196": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-rsce",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-rsce"
     ]
    },
    "type": "string",
    "x-ms-client-name": "ContentEncoding",
    "description": "The response header override for content encoding."
   },
   "schemas:197": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-rscl",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-rscl"
     ]
    },
    "type": "string",
    "x-ms-client-name": "ContentLanguage",
    "description": "The response header override for content language."
   },
   "schemas:198": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-rsct",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-rsct"
     ]
    },
    "type": "string",
    "x-ms-client-name": "ContentType",
    "description": "The response header override for content type."
   },
   "schemas:199": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ListServiceSasResponse",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ListServiceSasResponse"
     ]
    },
    "properties": {
     "serviceSasToken": {
      "description": "List service SAS credentials of specific resource.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:200"
     }
    },
    "description": "The List service SAS credentials operation response."
   },
   "schemas:200": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ListServiceSasResponse-serviceSasToken",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ListServiceSasResponse-serviceSasToken"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "List service SAS credentials of specific resource."
   },
   "schemas:201": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicy",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicy"
     ]
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "description": "Returns the Storage Account Data Policies Rules.",
      "$ref": "#/components/schemas/schemas:202"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:341"
     }
    ],
    "description": "The Get Storage Account ManagementPolicies operation response."
   },
   "schemas:202": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyProperties"
     ]
    },
    "properties": {
     "lastModifiedTime": {
      "description": "Returns the date and time the ManagementPolicies was last modified.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:203"
     },
     "policy": {
      "description": "The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
      "$ref": "#/components/schemas/schemas:204"
     }
    },
    "description": "The Storage Account ManagementPolicy properties.",
    "required": [
     "policy"
    ]
   },
   "schemas:203": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyProperties-lastModifiedTime",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyProperties-lastModifiedTime"
     ]
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Returns the date and time the ManagementPolicies was last modified."
   },
   "schemas:204": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicySchema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicySchema"
     ]
    },
    "properties": {
     "rules": {
      "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
      "$ref": "#/components/schemas/schemas:205"
     }
    },
    "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
    "required": [
     "rules"
    ]
   },
   "schemas:205": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicySchema-rules",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicySchema-rules"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:206"
    },
    "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts."
   },
   "schemas:206": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyRule",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyRule"
     ]
    },
    "properties": {
     "enabled": {
      "type": "boolean",
      "description": "Rule is enabled if set to true."
     },
     "name": {
      "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.",
      "$ref": "#/components/schemas/schemas:207"
     },
     "type": {
      "description": "The valid value is Lifecycle",
      "$ref": "#/components/schemas/RuleType"
     },
     "definition": {
      "description": "An object that defines the Lifecycle rule.",
      "$ref": "#/components/schemas/schemas:209"
     }
    },
    "description": "An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.",
    "required": [
     "name",
     "type",
     "definition"
    ]
   },
   "schemas:207": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyRule-name",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyRule-name"
     ]
    },
    "type": "string",
    "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy."
   },
   "schemas:209": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyDefinition",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyDefinition"
     ]
    },
    "properties": {
     "actions": {
      "description": "An object that defines the action set.",
      "$ref": "#/components/schemas/schemas:215"
     },
     "filters": {
      "description": "An object that defines the filter set.",
      "$ref": "#/components/schemas/schemas:210"
     }
    },
    "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.",
    "required": [
     "actions"
    ]
   },
   "schemas:210": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyFilter",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyFilter"
     ]
    },
    "properties": {
     "prefixMatch": {
      "description": "An array of strings for prefixes to be match.",
      "$ref": "#/components/schemas/schemas:211"
     },
     "blobTypes": {
      "description": "An array of predefined enum values. Only blockBlob is supported.",
      "$ref": "#/components/schemas/schemas:213"
     }
    },
    "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. ",
    "required": [
     "blobTypes"
    ]
   },
   "schemas:211": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyFilter-prefixMatch",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyFilter-prefixMatch"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:212"
    },
    "description": "An array of strings for prefixes to be match."
   },
   "schemas:212": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyFilter-prefixMatchItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyFilter-prefixMatchItem"
     ]
    },
    "type": "string"
   },
   "schemas:213": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyFilter-blobTypes",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyFilter-blobTypes"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:214"
    },
    "description": "An array of predefined enum values. Only blockBlob is supported."
   },
   "schemas:214": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyFilter-blobTypesItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyFilter-blobTypesItem"
     ]
    },
    "type": "string"
   },
   "schemas:215": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyAction",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyAction"
     ]
    },
    "properties": {
     "baseBlob": {
      "description": "The management policy action for base blob",
      "$ref": "#/components/schemas/schemas:216"
     },
     "snapshot": {
      "description": "The management policy action for snapshot",
      "$ref": "#/components/schemas/schemas:217"
     }
    },
    "description": "Actions are applied to the filtered blobs when the execution condition is met."
   },
   "schemas:216": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicyBaseBlob",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyBaseBlob"
     ]
    },
    "properties": {
     "tierToCool": {
      "description": "The function to tier blobs to cool storage. Support blobs currently at Hot tier",
      "$ref": "#/components/schemas/schemas:218"
     },
     "tierToArchive": {
      "description": "The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier",
      "$ref": "#/components/schemas/schemas:218"
     },
     "delete": {
      "description": "The function to delete the blob",
      "$ref": "#/components/schemas/schemas:218"
     }
    },
    "description": "Management policy action for base blob."
   },
   "schemas:217": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ManagementPolicySnapShot",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicySnapShot"
     ]
    },
    "properties": {
     "delete": {
      "description": "The function to delete the blob snapshot",
      "$ref": "#/components/schemas/schemas:219"
     }
    },
    "description": "Management policy action for snapshot."
   },
   "schemas:218": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "DateAfterModification",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/DateAfterModification"
     ]
    },
    "properties": {
     "daysAfterModificationGreaterThan": {
      "type": "number",
      "multipleOf": 1,
      "minimum": 0,
      "description": "Value indicating the age in days after last modification"
     }
    },
    "description": "Object to define the number of days after last modification.",
    "required": [
     "daysAfterModificationGreaterThan"
    ]
   },
   "schemas:219": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "DateAfterCreation",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/DateAfterCreation"
     ]
    },
    "properties": {
     "daysAfterCreationGreaterThan": {
      "type": "number",
      "multipleOf": 1,
      "minimum": 0,
      "description": "Value indicating the age in days after creation"
     }
    },
    "description": "Object to define the number of days after creation.",
    "required": [
     "daysAfterCreationGreaterThan"
    ]
   },
   "schemas:220": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateEndpointConnection",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateEndpointConnection"
     ]
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "description": "Resource properties.",
      "$ref": "#/components/schemas/schemas:221"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:341"
     }
    ],
    "description": "The Private Endpoint Connection resource."
   },
   "schemas:221": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateEndpointConnectionProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateEndpointConnectionProperties"
     ]
    },
    "properties": {
     "privateEndpoint": {
      "description": "The resource of private end point.",
      "$ref": "#/components/schemas/schemas:222"
     },
     "privateLinkServiceConnectionState": {
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "$ref": "#/components/schemas/schemas:224"
     },
     "provisioningState": {
      "description": "The provisioning state of the private endpoint connection resource.",
      "$ref": "#/components/schemas/PrivateEndpointConnectionProvisioningState"
     }
    },
    "description": "Properties of the PrivateEndpointConnectProperties.",
    "required": [
     "privateLinkServiceConnectionState"
    ]
   },
   "schemas:222": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateEndpoint",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateEndpoint"
     ]
    },
    "properties": {
     "id": {
      "description": "The ARM identifier for Private Endpoint",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:223"
     }
    },
    "description": "The Private Endpoint resource."
   },
   "schemas:223": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateEndpoint-id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateEndpoint-id"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "The ARM identifier for Private Endpoint"
   },
   "schemas:224": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateLinkServiceConnectionState",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateLinkServiceConnectionState"
     ]
    },
    "properties": {
     "status": {
      "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
      "$ref": "#/components/schemas/PrivateEndpointServiceConnectionStatus"
     },
     "description": {
      "description": "The reason for approval/rejection of the connection.",
      "$ref": "#/components/schemas/schemas:225"
     },
     "actionRequired": {
      "description": "A message indicating if changes on the service provider require any updates on the consumer.",
      "$ref": "#/components/schemas/schemas:226"
     }
    },
    "description": "A collection of information about the state of the connection between service consumer and provider."
   },
   "schemas:225": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateLinkServiceConnectionState-description",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateLinkServiceConnectionState-description"
     ]
    },
    "type": "string",
    "description": "The reason for approval/rejection of the connection."
   },
   "schemas:226": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateLinkServiceConnectionState-actionRequired",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateLinkServiceConnectionState-actionRequired"
     ]
    },
    "type": "string",
    "description": "A message indicating if changes on the service provider require any updates on the consumer."
   },
   "schemas:229": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceListResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateLinkResourceListResult"
     ]
    },
    "properties": {
     "value": {
      "description": "Array of private link resources",
      "$ref": "#/components/schemas/schemas:230"
     }
    },
    "description": "A list of private link resources"
   },
   "schemas:230": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceListResult-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateLinkResourceListResult-value"
     ]
    },
    "type": "array",
    "description": "Array of private link resources",
    "items": {
     "$ref": "#/components/schemas/schemas:231"
    }
   },
   "schemas:231": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateLinkResource",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateLinkResource"
     ]
    },
    "properties": {
     "properties": {
      "description": "Resource properties.",
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:232"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:341"
     }
    ],
    "description": "A private link resource"
   },
   "schemas:232": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateLinkResourceProperties"
     ]
    },
    "properties": {
     "groupId": {
      "description": "The private link resource group id.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:233"
     },
     "requiredMembers": {
      "description": "The private link resource required member names.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:234"
     },
     "requiredZoneNames": {
      "description": "The private link resource Private link DNS zone name.",
      "$ref": "#/components/schemas/schemas:236"
     }
    },
    "description": "Properties of a private link resource."
   },
   "schemas:233": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceProperties-groupId",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateLinkResourceProperties-groupId"
     ]
    },
    "description": "The private link resource group id.",
    "type": "string",
    "readOnly": true
   },
   "schemas:234": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceProperties-requiredMembers",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateLinkResourceProperties-requiredMembers"
     ]
    },
    "description": "The private link resource required member names.",
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:235"
    },
    "readOnly": true
   },
   "schemas:235": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceProperties-requiredMembersItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateLinkResourceProperties-requiredMembersItem"
     ]
    },
    "type": "string"
   },
   "schemas:236": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceProperties-requiredZoneNames",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateLinkResourceProperties-requiredZoneNames"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:237"
    },
    "description": "The private link resource Private link DNS zone name."
   },
   "schemas:237": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceProperties-requiredZoneNamesItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateLinkResourceProperties-requiredZoneNamesItem"
     ]
    },
    "type": "string"
   },
   "schemas:238": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionScope",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionScope"
     ]
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "x-ms-client-name": "EncryptionScopeProperties",
      "description": "Properties of the encryption scope.",
      "$ref": "#/components/schemas/schemas:239"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:341"
     }
    ],
    "description": "The Encryption Scope resource."
   },
   "schemas:239": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionScopeProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionScopeProperties"
     ]
    },
    "properties": {
     "source": {
      "description": "The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.",
      "$ref": "#/components/schemas/EncryptionScopeSource"
     },
     "state": {
      "description": "The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.",
      "$ref": "#/components/schemas/EncryptionScopeState"
     },
     "creationTime": {
      "description": "Gets the creation date and time of the encryption scope in UTC.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:242"
     },
     "lastModifiedTime": {
      "description": "Gets the last modification date and time of the encryption scope in UTC.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:243"
     },
     "keyVaultProperties": {
      "description": "The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.",
      "$ref": "#/components/schemas/schemas:244"
     }
    },
    "description": "Properties of the encryption scope."
   },
   "schemas:242": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionScopeProperties-creationTime",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionScopeProperties-creationTime"
     ]
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Gets the creation date and time of the encryption scope in UTC."
   },
   "schemas:243": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionScopeProperties-lastModifiedTime",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionScopeProperties-lastModifiedTime"
     ]
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Gets the last modification date and time of the encryption scope in UTC."
   },
   "schemas:244": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionScopeKeyVaultProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionScopeKeyVaultProperties"
     ]
    },
    "properties": {
     "keyUri": {
      "description": "The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.",
      "$ref": "#/components/schemas/schemas:245"
     }
    },
    "description": "The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'."
   },
   "schemas:245": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionScopeKeyVaultProperties-keyUri",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionScopeKeyVaultProperties-keyUri"
     ]
    },
    "type": "string",
    "description": "The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope."
   },
   "schemas:246": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionScopeListResult",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionScopeListResult"
     ]
    },
    "properties": {
     "value": {
      "description": "List of encryption scopes requested.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:247"
     },
     "nextLink": {
      "description": "Request URL that can be used to query next page of encryption scopes. Returned when total number of requested encryption scopes exceeds the maximum page size.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:248"
     }
    },
    "description": "List of encryption scopes requested, and if paging is required, a URL to the next page of encryption scopes."
   },
   "schemas:247": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionScopeListResult-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionScopeListResult-value"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:238"
    },
    "description": "List of encryption scopes requested.",
    "readOnly": true
   },
   "schemas:248": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionScopeListResult-nextLink",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionScopeListResult-nextLink"
     ]
    },
    "type": "string",
    "description": "Request URL that can be used to query next page of encryption scopes. Returned when total number of requested encryption scopes exceeds the maximum page size.",
    "readOnly": true
   },
   "schemas:249": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ErrorResponse",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ErrorResponse"
     ]
    },
    "properties": {
     "code": {
      "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
      "$ref": "#/components/schemas/schemas:250"
     },
     "message": {
      "description": "A message describing the error, intended to be suitable for display in a user interface.",
      "$ref": "#/components/schemas/schemas:251"
     }
    },
    "description": "An error response from the storage resource provider."
   },
   "schemas:250": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ErrorResponse-code",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ErrorResponse-code"
     ]
    },
    "type": "string",
    "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
   },
   "schemas:251": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ErrorResponse-message",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ErrorResponse-message"
     ]
    },
    "type": "string",
    "description": "A message describing the error, intended to be suitable for display in a user interface."
   },
   "schemas:252": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "components·1k5k8s9·parameters·resourcegroupname·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/components·1k5k8s9·parameters·resourcegroupname·schema"
     ]
    },
    "pattern": "^[-\\w\\._\\(\\)]+$",
    "minLength": 1,
    "maxLength": 90,
    "type": "string"
   },
   "schemas:253": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "components·1a563bt·parameters·storageaccountname·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/components·1a563bt·parameters·storageaccountname·schema"
     ]
    },
    "maxLength": 24,
    "minLength": 3,
    "type": "string"
   },
   "schemas:254": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "components·1kl02yy·parameters·privateendpointconnectionname·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/components·1kl02yy·parameters·privateendpointconnectionname·schema"
     ]
    },
    "type": "string"
   },
   "schemas:255": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "components·7b5pue·parameters·encryptionscopename·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/components·7b5pue·parameters·encryptionscopename·schema"
     ]
    },
    "maxLength": 63,
    "minLength": 3,
    "type": "string"
   },
   "schemas:256": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·f17k7n·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers·get·parameters·4·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/paths·f17k7n·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers·get·parameters·4·schema"
     ]
    },
    "type": "string"
   },
   "schemas:257": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·fdxnuh·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers·get·parameters·5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/paths·fdxnuh·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers·get·parameters·5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:258": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·lb4psd·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·put·parameters·6·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/paths·lb4psd·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·put·parameters·6·schema"
     ]
    },
    "type": "string"
   },
   "schemas:259": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·ri868h·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·put·responses·200·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/paths·ri868h·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·put·responses·200·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:260": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·1bw7ubx·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·get·parameters·6·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/paths·1bw7ubx·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·get·parameters·6·schema"
     ]
    },
    "type": "string"
   },
   "schemas:261": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·82fj5e·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·get·responses·200·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/paths·82fj5e·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·get·responses·200·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:262": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·uzc8op·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·delete·parameters·6·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/paths·uzc8op·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·delete·parameters·6·schema"
     ]
    },
    "type": "string"
   },
   "schemas:263": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·t01bqf·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·delete·responses·200·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/paths·t01bqf·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·delete·responses·200·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:264": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·4v5jve·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-lock·post·parameters·5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/paths·4v5jve·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-lock·post·parameters·5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:265": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·6s1iwv·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-lock·post·responses·200·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/paths·6s1iwv·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-lock·post·responses·200·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:266": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·177843c·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-extend·post·parameters·5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/paths·177843c·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-extend·post·parameters·5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:267": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·1njr8bg·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-extend·post·responses·200·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/paths·1njr8bg·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-extend·post·responses·200·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:268": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ContainerProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ContainerProperties"
     ]
    },
    "properties": {
     "publicAccess": {
      "description": "Specifies whether data in the container may be accessed publicly and the level of access.",
      "$ref": "#/components/schemas/PublicAccess"
     },
     "lastModifiedTime": {
      "description": "Returns the date and time the container was last modified.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:270"
     },
     "leaseStatus": {
      "description": "The lease status of the container.",
      "readOnly": true,
      "$ref": "#/components/schemas/LeaseStatus"
     },
     "leaseState": {
      "description": "Lease state of the container.",
      "readOnly": true,
      "$ref": "#/components/schemas/LeaseState"
     },
     "leaseDuration": {
      "description": "Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.",
      "readOnly": true,
      "$ref": "#/components/schemas/LeaseDuration"
     },
     "metadata": {
      "description": "A name-value pair to associate with the container as metadata.",
      "$ref": "#/components/schemas/schemas:274"
     },
     "immutabilityPolicy": {
      "readOnly": true,
      "x-ms-client-name": "ImmutabilityPolicy",
      "description": "The ImmutabilityPolicy property of the container.",
      "$ref": "#/components/schemas/schemas:279"
     },
     "legalHold": {
      "readOnly": true,
      "description": "The LegalHold property of the container.",
      "$ref": "#/components/schemas/schemas:289"
     },
     "hasLegalHold": {
      "type": "boolean",
      "readOnly": true,
      "description": "The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account."
     },
     "hasImmutabilityPolicy": {
      "type": "boolean",
      "readOnly": true,
      "description": "The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container."
     }
    },
    "description": "The properties of a container."
   },
   "schemas:270": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ContainerProperties-lastModifiedTime",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ContainerProperties-lastModifiedTime"
     ]
    },
    "type": "string",
    "format": "date-time",
    "readOnly": true,
    "description": "Returns the date and time the container was last modified."
   },
   "schemas:274": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ContainerProperties-metadata",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ContainerProperties-metadata"
     ]
    },
    "type": "object",
    "additionalProperties": {
     "$ref": "#/components/schemas/schemas:275"
    },
    "description": "A name-value pair to associate with the container as metadata."
   },
   "schemas:275": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "components·1hcrzwm·schemas·containerproperties·properties·metadata·additionalproperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/components·1hcrzwm·schemas·containerproperties·properties·metadata·additionalproperties"
     ]
    },
    "type": "string"
   },
   "schemas:276": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "BlobContainer",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/BlobContainer"
     ]
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "x-ms-client-name": "ContainerProperties",
      "description": "Properties of the blob container.",
      "$ref": "#/components/schemas/schemas:268"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:345"
     }
    ],
    "description": "Properties of the blob container, including Id, resource name, resource type, Etag."
   },
   "schemas:277": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ImmutabilityPolicyProperty",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ImmutabilityPolicyProperty"
     ]
    },
    "properties": {
     "immutabilityPeriodSinceCreationInDays": {
      "type": "integer",
      "description": "The immutability period for the blobs in the container since the policy creation, in days."
     },
     "state": {
      "description": "The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.",
      "readOnly": true,
      "$ref": "#/components/schemas/ImmutabilityPolicyState"
     },
     "allowProtectedAppendWrites": {
      "type": "boolean",
      "description": "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API"
     }
    },
    "description": "The properties of an ImmutabilityPolicy of a blob container."
   },
   "schemas:279": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ImmutabilityPolicyProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ImmutabilityPolicyProperties"
     ]
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "description": "The properties of an ImmutabilityPolicy of a blob container.",
      "$ref": "#/components/schemas/schemas:277"
     },
     "etag": {
      "description": "ImmutabilityPolicy Etag.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:280"
     },
     "updateHistory": {
      "description": "The ImmutabilityPolicy update history of the blob container.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:281"
     }
    },
    "description": "The properties of an ImmutabilityPolicy of a blob container."
   },
   "schemas:280": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ImmutabilityPolicyProperties-etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ImmutabilityPolicyProperties-etag"
     ]
    },
    "type": "string",
    "readOnly": true,
    "description": "ImmutabilityPolicy Etag."
   },
   "schemas:281": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ImmutabilityPolicyProperties-updateHistory",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ImmutabilityPolicyProperties-updateHistory"
     ]
    },
    "type": "array",
    "readOnly": true,
    "items": {
     "$ref": "#/components/schemas/schemas:283"
    },
    "description": "The ImmutabilityPolicy update history of the blob container."
   },
   "schemas:282": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ImmutabilityPolicy",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ImmutabilityPolicy"
     ]
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "description": "The properties of an ImmutabilityPolicy of a blob container.",
      "$ref": "#/components/schemas/schemas:277"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:345"
     }
    ],
    "description": "The ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.",
    "required": [
     "properties"
    ]
   },
   "schemas:283": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "UpdateHistoryProperty",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/UpdateHistoryProperty"
     ]
    },
    "properties": {
     "update": {
      "description": "The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.",
      "readOnly": true,
      "$ref": "#/components/schemas/ImmutabilityPolicyUpdateType"
     },
     "immutabilityPeriodSinceCreationInDays": {
      "type": "integer",
      "readOnly": true,
      "description": "The immutability period for the blobs in the container since the policy creation, in days."
     },
     "timestamp": {
      "description": "Returns the date and time the ImmutabilityPolicy was updated.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:285"
     },
     "objectIdentifier": {
      "description": "Returns the Object ID of the user who updated the ImmutabilityPolicy.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:286"
     },
     "tenantId": {
      "description": "Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:287"
     },
     "upn": {
      "description": "Returns the User Principal Name of the user who updated the ImmutabilityPolicy.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:288"
     }
    },
    "description": "An update history of the ImmutabilityPolicy of a blob container."
   },
   "schemas:285": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "UpdateHistoryProperty-timestamp",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/UpdateHistoryProperty-timestamp"
     ]
    },
    "type": "string",
    "format": "date-time",
    "readOnly": true,
    "description": "Returns the date and time the ImmutabilityPolicy was updated."
   },
   "schemas:286": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "UpdateHistoryProperty-objectIdentifier",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/UpdateHistoryProperty-objectIdentifier"
     ]
    },
    "type": "string",
    "readOnly": true,
    "description": "Returns the Object ID of the user who updated the ImmutabilityPolicy."
   },
   "schemas:287": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "UpdateHistoryProperty-tenantId",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/UpdateHistoryProperty-tenantId"
     ]
    },
    "type": "string",
    "readOnly": true,
    "description": "Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy."
   },
   "schemas:288": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "UpdateHistoryProperty-upn",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/UpdateHistoryProperty-upn"
     ]
    },
    "type": "string",
    "readOnly": true,
    "description": "Returns the User Principal Name of the user who updated the ImmutabilityPolicy."
   },
   "schemas:289": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LegalHoldProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/LegalHoldProperties"
     ]
    },
    "properties": {
     "hasLegalHold": {
      "type": "boolean",
      "readOnly": true,
      "description": "The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account."
     },
     "tags": {
      "description": "The list of LegalHold tags of a blob container.",
      "$ref": "#/components/schemas/schemas:290"
     }
    },
    "description": "The LegalHold property of a blob container."
   },
   "schemas:290": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LegalHoldProperties-tags",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/LegalHoldProperties-tags"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:291"
    },
    "description": "The list of LegalHold tags of a blob container."
   },
   "schemas:291": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "TagProperty",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/TagProperty"
     ]
    },
    "properties": {
     "tag": {
      "description": "The tag value.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:292"
     },
     "timestamp": {
      "description": "Returns the date and time the tag was added.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:293"
     },
     "objectIdentifier": {
      "description": "Returns the Object ID of the user who added the tag.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:294"
     },
     "tenantId": {
      "description": "Returns the Tenant ID that issued the token for the user who added the tag.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:295"
     },
     "upn": {
      "description": "Returns the User Principal Name of the user who added the tag.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:296"
     }
    },
    "description": "A tag of the LegalHold of a blob container."
   },
   "schemas:292": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "TagProperty-tag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/TagProperty-tag"
     ]
    },
    "type": "string",
    "readOnly": true,
    "description": "The tag value."
   },
   "schemas:293": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "TagProperty-timestamp",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/TagProperty-timestamp"
     ]
    },
    "type": "string",
    "format": "date-time",
    "readOnly": true,
    "description": "Returns the date and time the tag was added."
   },
   "schemas:294": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "TagProperty-objectIdentifier",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/TagProperty-objectIdentifier"
     ]
    },
    "type": "string",
    "readOnly": true,
    "description": "Returns the Object ID of the user who added the tag."
   },
   "schemas:295": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "TagProperty-tenantId",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/TagProperty-tenantId"
     ]
    },
    "type": "string",
    "readOnly": true,
    "description": "Returns the Tenant ID that issued the token for the user who added the tag."
   },
   "schemas:296": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "TagProperty-upn",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/TagProperty-upn"
     ]
    },
    "type": "string",
    "readOnly": true,
    "description": "Returns the User Principal Name of the user who added the tag."
   },
   "schemas:297": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LegalHold",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/LegalHold"
     ]
    },
    "properties": {
     "hasLegalHold": {
      "type": "boolean",
      "readOnly": true,
      "description": "The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account."
     },
     "tags": {
      "description": "Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.",
      "$ref": "#/components/schemas/schemas:298"
     }
    },
    "description": "The LegalHold property of a blob container.",
    "required": [
     "tags"
    ]
   },
   "schemas:298": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LegalHold-tags",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/LegalHold-tags"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:299"
    },
    "description": "Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP."
   },
   "schemas:299": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LegalHold-tagsItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/LegalHold-tagsItem"
     ]
    },
    "type": "string",
    "maxLength": 23,
    "minLength": 3
   },
   "schemas:300": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ListContainerItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ListContainerItem"
     ]
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "description": "The blob container properties be listed out.",
      "$ref": "#/components/schemas/schemas:268"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:345"
     }
    ],
    "description": "The blob container properties be listed out."
   },
   "schemas:301": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ListContainerItems",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ListContainerItems"
     ]
    },
    "properties": {
     "value": {
      "description": "List of blobs containers returned.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:302"
     },
     "nextLink": {
      "description": "Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:303"
     }
    },
    "description": "Response schema. Contains list of blobs returned, and if paging is requested or required, a URL to next page of containers."
   },
   "schemas:302": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ListContainerItems-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ListContainerItems-value"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:300"
    },
    "description": "List of blobs containers returned.",
    "readOnly": true
   },
   "schemas:303": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ListContainerItems-nextLink",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ListContainerItems-nextLink"
     ]
    },
    "type": "string",
    "description": "Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.",
    "readOnly": true
   },
   "schemas:304": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "BlobServiceProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/BlobServiceProperties"
     ]
    },
    "properties": {
     "properties": {
      "description": "The properties of a storage account’s Blob service.",
      "x-ms-client-flatten": true,
      "x-ms-client-name": "BlobServiceProperties",
      "$ref": "#/components/schemas/schemas:305"
     },
     "sku": {
      "readOnly": true,
      "description": "Sku name and tier.",
      "$ref": "#/components/schemas/schemas:421"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:341"
     }
    ],
    "description": "The properties of a storage account’s Blob service."
   },
   "schemas:305": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "BlobServiceProperties-properties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/BlobServiceProperties-properties"
     ]
    },
    "properties": {
     "cors": {
      "description": "Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.",
      "$ref": "#/components/schemas/schemas:409"
     },
     "defaultServiceVersion": {
      "description": "DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.",
      "$ref": "#/components/schemas/schemas:306"
     },
     "deleteRetentionPolicy": {
      "description": "The blob service properties for blob soft delete.",
      "$ref": "#/components/schemas/schemas:420"
     },
     "isVersioningEnabled": {
      "type": "boolean",
      "description": "Versioning is enabled if set to true."
     },
     "automaticSnapshotPolicyEnabled": {
      "type": "boolean",
      "description": "Deprecated in favor of isVersioningEnabled property."
     },
     "changeFeed": {
      "description": "The blob service properties for change feed events.",
      "$ref": "#/components/schemas/schemas:309"
     },
     "restorePolicy": {
      "description": "The blob service properties for blob restore policy.",
      "$ref": "#/components/schemas/schemas:310"
     },
     "containerDeleteRetentionPolicy": {
      "description": "The blob service properties for container soft delete.",
      "$ref": "#/components/schemas/schemas:420"
     }
    },
    "x-ms-client-flatten": true,
    "x-ms-client-name": "BlobServiceProperties",
    "description": "The properties of a storage account’s Blob service."
   },
   "schemas:306": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "BlobServiceProperties-properties-defaultServiceVersion",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/BlobServiceProperties-properties-defaultServiceVersion"
     ]
    },
    "type": "string",
    "description": "DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions."
   },
   "schemas:307": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "BlobServiceItems",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/BlobServiceItems"
     ]
    },
    "properties": {
     "value": {
      "description": "List of blob services returned.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:308"
     }
    }
   },
   "schemas:308": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "BlobServiceItems-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/BlobServiceItems-value"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:304"
    },
    "description": "List of blob services returned.",
    "readOnly": true
   },
   "schemas:309": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ChangeFeed",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ChangeFeed"
     ]
    },
    "properties": {
     "enabled": {
      "type": "boolean",
      "description": "Indicates whether change feed event logging is enabled for the Blob service."
     }
    },
    "description": "The blob service properties for change feed events."
   },
   "schemas:310": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "RestorePolicyProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/RestorePolicyProperties"
     ]
    },
    "properties": {
     "enabled": {
      "type": "boolean",
      "description": "Blob restore is enabled if set to true."
     },
     "days": {
      "type": "integer",
      "minimum": 1,
      "maximum": 365,
      "description": "how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days."
     }
    },
    "description": "The blob service properties for blob restore policy",
    "required": [
     "enabled"
    ]
   },
   "schemas:311": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LeaseContainerRequest",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/LeaseContainerRequest"
     ]
    },
    "properties": {
     "action": {
      "description": "Specifies the lease action. Can be one of the available actions.",
      "$ref": "#/components/schemas/LeaseContainerRequest-action"
     },
     "leaseId": {
      "description": "Identifies the lease. Can be specified in any valid GUID string format.",
      "$ref": "#/components/schemas/schemas:313"
     },
     "breakPeriod": {
      "type": "integer",
      "description": "Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60."
     },
     "leaseDuration": {
      "type": "integer",
      "description": "Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires."
     },
     "proposedLeaseId": {
      "description": "Optional for acquire, required for change. Proposed lease ID, in a GUID string format.",
      "$ref": "#/components/schemas/schemas:314"
     }
    },
    "description": "Lease Container request schema.",
    "required": [
     "action"
    ]
   },
   "schemas:313": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LeaseContainerRequest-leaseId",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/LeaseContainerRequest-leaseId"
     ]
    },
    "type": "string",
    "description": "Identifies the lease. Can be specified in any valid GUID string format."
   },
   "schemas:314": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LeaseContainerRequest-proposedLeaseId",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/LeaseContainerRequest-proposedLeaseId"
     ]
    },
    "type": "string",
    "description": "Optional for acquire, required for change. Proposed lease ID, in a GUID string format."
   },
   "schemas:315": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LeaseContainerResponse",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/LeaseContainerResponse"
     ]
    },
    "properties": {
     "leaseId": {
      "description": "Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease.",
      "$ref": "#/components/schemas/schemas:316"
     },
     "leaseTimeSeconds": {
      "description": "Approximate time remaining in the lease period, in seconds.",
      "$ref": "#/components/schemas/schemas:317"
     }
    },
    "description": "Lease Container response schema."
   },
   "schemas:316": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LeaseContainerResponse-leaseId",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/LeaseContainerResponse-leaseId"
     ]
    },
    "type": "string",
    "description": "Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease."
   },
   "schemas:317": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LeaseContainerResponse-leaseTimeSeconds",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/LeaseContainerResponse-leaseTimeSeconds"
     ]
    },
    "type": "string",
    "description": "Approximate time remaining in the lease period, in seconds."
   },
   "schemas:318": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "components·z2wrh8·parameters·containername·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/components·z2wrh8·parameters·containername·schema"
     ]
    },
    "maxLength": 63,
    "minLength": 3,
    "type": "string"
   },
   "schemas:319": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·9ndkyn·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares·get·parameters·4·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/paths·9ndkyn·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares·get·parameters·4·schema"
     ]
    },
    "type": "string"
   },
   "schemas:320": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·e40je0·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares·get·parameters·5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/paths·e40je0·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares·get·parameters·5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:321": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileServiceItems",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/FileServiceItems"
     ]
    },
    "properties": {
     "value": {
      "description": "List of file services returned.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:322"
     }
    }
   },
   "schemas:322": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileServiceItems-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/FileServiceItems-value"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:323"
    },
    "description": "List of file services returned.",
    "readOnly": true
   },
   "schemas:323": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileServiceProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/FileServiceProperties"
     ]
    },
    "properties": {
     "properties": {
      "description": "The properties of File services in storage account.",
      "x-ms-client-flatten": true,
      "x-ms-client-name": "FileServiceProperties",
      "$ref": "#/components/schemas/schemas:324"
     },
     "sku": {
      "readOnly": true,
      "description": "Sku name and tier.",
      "$ref": "#/components/schemas/schemas:421"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:341"
     }
    ],
    "description": "The properties of File services in storage account."
   },
   "schemas:324": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileServiceProperties-properties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/FileServiceProperties-properties"
     ]
    },
    "properties": {
     "cors": {
      "description": "Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.",
      "$ref": "#/components/schemas/schemas:409"
     },
     "shareDeleteRetentionPolicy": {
      "description": "The file service properties for share soft delete.",
      "$ref": "#/components/schemas/schemas:420"
     }
    },
    "x-ms-client-flatten": true,
    "x-ms-client-name": "FileServiceProperties",
    "description": "The properties of File services in storage account."
   },
   "schemas:325": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileShare",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/FileShare"
     ]
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "x-ms-client-name": "FileShareProperties",
      "description": "Properties of the file share.",
      "$ref": "#/components/schemas/schemas:330"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:345"
     }
    ],
    "description": "Properties of the file share, including Id, resource name, resource type, Etag."
   },
   "schemas:326": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileShareItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/FileShareItem"
     ]
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "description": "The file share properties be listed out.",
      "$ref": "#/components/schemas/schemas:330"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:345"
     }
    ],
    "description": "The file share properties be listed out."
   },
   "schemas:327": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileShareItems",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/FileShareItems"
     ]
    },
    "properties": {
     "value": {
      "description": "List of file shares returned.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:328"
     },
     "nextLink": {
      "description": "Request URL that can be used to query next page of shares. Returned when total number of requested shares exceed maximum page size.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:329"
     }
    },
    "description": "Response schema. Contains list of shares returned, and if paging is requested or required, a URL to next page of shares."
   },
   "schemas:328": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileShareItems-value",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/FileShareItems-value"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:326"
    },
    "description": "List of file shares returned.",
    "readOnly": true
   },
   "schemas:329": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileShareItems-nextLink",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/FileShareItems-nextLink"
     ]
    },
    "type": "string",
    "description": "Request URL that can be used to query next page of shares. Returned when total number of requested shares exceed maximum page size.",
    "readOnly": true
   },
   "schemas:330": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileShareProperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/FileShareProperties"
     ]
    },
    "properties": {
     "lastModifiedTime": {
      "description": "Returns the date and time the share was last modified.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:331"
     },
     "metadata": {
      "description": "A name-value pair to associate with the share as metadata.",
      "$ref": "#/components/schemas/schemas:332"
     },
     "shareQuota": {
      "type": "integer",
      "minimum": 1,
      "maximum": 102400,
      "description": "The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400."
     }
    },
    "description": "The properties of the file share."
   },
   "schemas:331": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileShareProperties-lastModifiedTime",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/FileShareProperties-lastModifiedTime"
     ]
    },
    "type": "string",
    "format": "date-time",
    "readOnly": true,
    "description": "Returns the date and time the share was last modified."
   },
   "schemas:332": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "FileShareProperties-metadata",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/FileShareProperties-metadata"
     ]
    },
    "type": "object",
    "additionalProperties": {
     "$ref": "#/components/schemas/schemas:333"
    },
    "description": "A name-value pair to associate with the share as metadata."
   },
   "schemas:333": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "components·w1culg·schemas·fileshareproperties·properties·metadata·additionalproperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/components·w1culg·schemas·fileshareproperties·properties·metadata·additionalproperties"
     ]
    },
    "type": "string"
   },
   "schemas:334": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "CloudError",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/CloudError"
     ]
    },
    "x-ms-external": true,
    "properties": {
     "error": {
      "$ref": "#/components/schemas/schemas:335"
     }
    },
    "description": "An error response from the Storage service."
   },
   "schemas:335": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "CloudErrorBody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/CloudErrorBody"
     ]
    },
    "x-ms-external": true,
    "properties": {
     "code": {
      "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
      "$ref": "#/components/schemas/schemas:336"
     },
     "message": {
      "description": "A message describing the error, intended to be suitable for display in a user interface.",
      "$ref": "#/components/schemas/schemas:337"
     },
     "target": {
      "description": "The target of the particular error. For example, the name of the property in error.",
      "$ref": "#/components/schemas/schemas:338"
     },
     "details": {
      "description": "A list of additional details about the error.",
      "$ref": "#/components/schemas/schemas:339"
     }
    },
    "description": "An error response from the Storage service."
   },
   "schemas:336": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "CloudErrorBody-code",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/CloudErrorBody-code"
     ]
    },
    "type": "string",
    "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
   },
   "schemas:337": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "CloudErrorBody-message",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/CloudErrorBody-message"
     ]
    },
    "type": "string",
    "description": "A message describing the error, intended to be suitable for display in a user interface."
   },
   "schemas:338": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "CloudErrorBody-target",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/CloudErrorBody-target"
     ]
    },
    "type": "string",
    "description": "The target of the particular error. For example, the name of the property in error."
   },
   "schemas:339": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "CloudErrorBody-details",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/CloudErrorBody-details"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:335"
    },
    "description": "A list of additional details about the error."
   },
   "schemas:340": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "components·5xdu4q·parameters·sharename·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/schemas/components·5xdu4q·parameters·sharename·schema"
     ]
    },
    "maxLength": 63,
    "minLength": 3,
    "type": "string"
   },
   "schemas:341": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "Resource",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/Resource"
     ]
    },
    "properties": {
     "id": {
      "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:342"
     },
     "name": {
      "description": "The name of the resource",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:343"
     },
     "type": {
      "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:344"
     }
    },
    "x-ms-azure-resource": true
   },
   "schemas:342": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "Resource-id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/Resource-id"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   },
   "schemas:343": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "Resource-name",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/Resource-name"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "The name of the resource"
   },
   "schemas:344": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "Resource-type",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/Resource-type"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
   },
   "schemas:345": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "AzureEntityResource",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/AzureEntityResource"
     ]
    },
    "x-ms-client-name": "AzureEntityResource",
    "description": "The resource model definition for a Azure Resource Manager resource with an etag.",
    "properties": {
     "etag": {
      "description": "Resource Etag.",
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:346"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:341"
     }
    ]
   },
   "schemas:346": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "AzureEntityResource-etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/AzureEntityResource-etag"
     ]
    },
    "type": "string",
    "readOnly": true,
    "description": "Resource Etag."
   },
   "schemas:347": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "TrackedResource",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/TrackedResource"
     ]
    },
    "description": "The resource model definition for a ARM tracked top level resource",
    "properties": {
     "tags": {
      "description": "Resource tags.",
      "$ref": "#/components/schemas/schemas:348"
     },
     "location": {
      "description": "The geo-location where the resource lives",
      "$ref": "#/components/schemas/schemas:350"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:341"
     }
    ],
    "required": [
     "location"
    ]
   },
   "schemas:348": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "TrackedResource-tags",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/TrackedResource-tags"
     ]
    },
    "type": "object",
    "additionalProperties": {
     "$ref": "#/components/schemas/schemas:349"
    },
    "x-ms-mutability": [
     "read",
     "create",
     "update"
    ],
    "description": "Resource tags."
   },
   "schemas:349": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "components·gjm290·schemas·trackedresource·properties·tags·additionalproperties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/components·gjm290·schemas·trackedresource·properties·tags·additionalproperties"
     ]
    },
    "type": "string"
   },
   "schemas:350": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "TrackedResource-location",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/TrackedResource-location"
     ]
    },
    "type": "string",
    "x-ms-mutability": [
     "read",
     "create"
    ],
    "description": "The geo-location where the resource lives"
   },
   "schemas:351": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "ProxyResource",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/ProxyResource"
     ]
    },
    "description": "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:341"
     }
    ]
   },
   "schemas:406": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "components·gsdxl2·parameters·subscriptionidparameter·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/components·gsdxl2·parameters·subscriptionidparameter·schema"
     ]
    },
    "minLength": 1,
    "type": "string"
   },
   "schemas:407": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///234?oai3.shaken.json"
     ],
     "name": "components·18mzsjh·parameters·apiversionparameter·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/common-types/resource-management/v1/types.json#/components/schemas/components·18mzsjh·parameters·apiversionparameter·schema"
     ]
    },
    "minLength": 1,
    "type": "string"
   },
   "schemas:409": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "CorsRules",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/CorsRules"
     ]
    },
    "properties": {
     "corsRules": {
      "description": "The List of CORS rules. You can include up to five CorsRule elements in the request. ",
      "$ref": "#/components/schemas/schemas:410"
     }
    },
    "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. "
   },
   "schemas:410": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "CorsRules-corsRules",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/CorsRules-corsRules"
     ]
    },
    "type": "array",
    "items": {
     "description": "Specifies a CORS rule for the Blob service. ",
     "$ref": "#/components/schemas/schemas:411"
    },
    "description": "The List of CORS rules. You can include up to five CorsRule elements in the request. "
   },
   "schemas:411": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "CorsRule",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/CorsRule"
     ]
    },
    "properties": {
     "allowedOrigins": {
      "description": "Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains",
      "$ref": "#/components/schemas/schemas:412"
     },
     "allowedMethods": {
      "description": "Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.",
      "$ref": "#/components/schemas/schemas:414"
     },
     "maxAgeInSeconds": {
      "type": "integer",
      "description": "Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response."
     },
     "exposedHeaders": {
      "description": "Required if CorsRule element is present. A list of response headers to expose to CORS clients.",
      "$ref": "#/components/schemas/schemas:416"
     },
     "allowedHeaders": {
      "description": "Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.",
      "$ref": "#/components/schemas/schemas:418"
     }
    },
    "description": "Specifies a CORS rule for the Blob service.",
    "required": [
     "allowedOrigins",
     "allowedMethods",
     "maxAgeInSeconds",
     "exposedHeaders",
     "allowedHeaders"
    ]
   },
   "schemas:412": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "CorsRule-allowedOrigins",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/CorsRule-allowedOrigins"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:413"
    },
    "description": "Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains"
   },
   "schemas:413": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "CorsRule-allowedOriginsItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/CorsRule-allowedOriginsItem"
     ]
    },
    "type": "string"
   },
   "schemas:414": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "CorsRule-allowedMethods",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/CorsRule-allowedMethods"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/CorsRule-allowedMethodsItem"
    },
    "description": "Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin."
   },
   "schemas:416": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "CorsRule-exposedHeaders",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/CorsRule-exposedHeaders"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:417"
    },
    "description": "Required if CorsRule element is present. A list of response headers to expose to CORS clients."
   },
   "schemas:417": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "CorsRule-exposedHeadersItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/CorsRule-exposedHeadersItem"
     ]
    },
    "type": "string"
   },
   "schemas:418": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "CorsRule-allowedHeaders",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/CorsRule-allowedHeaders"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:419"
    },
    "description": "Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request."
   },
   "schemas:419": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "CorsRule-allowedHeadersItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/CorsRule-allowedHeadersItem"
     ]
    },
    "type": "string"
   },
   "schemas:420": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "DeleteRetentionPolicy",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/DeleteRetentionPolicy"
     ]
    },
    "properties": {
     "enabled": {
      "type": "boolean",
      "description": "Indicates whether DeleteRetentionPolicy is enabled."
     },
     "days": {
      "type": "integer",
      "minimum": 1,
      "maximum": 365,
      "description": "Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365."
     }
    },
    "description": "The service properties for soft delete."
   },
   "schemas:421": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "Sku",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/Sku"
     ]
    },
    "properties": {
     "name": {
      "$ref": "#/components/schemas/SkuName"
     },
     "tier": {
      "$ref": "#/components/schemas/SkuTier"
     }
    },
    "description": "The SKU of the storage account.",
    "required": [
     "name"
    ]
   },
   "StorageAccountExpand": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "StorageAccountExpand",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/paths·37nx48·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·get·parameters·4·schema"
     ]
    },
    "enum": [
     "geoReplicationStats",
     "blobRestoreStatus"
    ],
    "x-ms-enum": {
     "name": "StorageAccountExpand",
     "modelAsString": false
    },
    "type": "string"
   },
   "ListKeyExpand": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ListKeyExpand",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/paths·1u0almw·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listkeys·post·parameters·4·schema"
     ]
    },
    "enum": [
     "kerb"
    ],
    "x-ms-enum": {
     "name": "ListKeyExpand"
    },
    "type": "string"
   },
   "Type": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Type",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountCheckNameAvailabilityParameters-type"
     ]
    },
    "type": "string",
    "enum": [
     "Microsoft.Storage/storageAccounts"
    ],
    "x-ms-enum": {
     "name": "Type",
     "modelAsString": false
    },
    "description": "The type of resource, Microsoft.Storage/storageAccounts"
   },
   "ReasonCode": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ReasonCode",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Restriction-reasonCode"
     ]
    },
    "type": "string",
    "enum": [
     "QuotaId",
     "NotAvailableForSubscription"
    ],
    "x-ms-enum": {
     "name": "ReasonCode",
     "modelAsString": true
    },
    "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC."
   },
   "Reason": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Reason",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/CheckNameAvailabilityResult-reason"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.",
    "enum": [
     "AccountNameInvalid",
     "AlreadyExists"
    ],
    "x-ms-enum": {
     "name": "Reason",
     "modelAsString": false
    }
   },
   "Kind": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Kind",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/SkuInformation-kind",
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccount-kind"
     ]
    },
    "description": "Indicates the type of storage account.",
    "x-ms-enum": {
     "name": "Kind",
     "modelAsString": true
    },
    "type": "string",
    "enum": [
     "Storage",
     "StorageV2",
     "BlobStorage",
     "FileStorage",
     "BlockBlobStorage"
    ]
   },
   "KeyType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "KeyType",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionService-keyType"
     ]
    },
    "type": "string",
    "description": "Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.",
    "enum": [
     "Service",
     "Account"
    ],
    "x-ms-enum": {
     "name": "KeyType",
     "modelAsString": true
    },
    "x-ms-mutability": [
     "create",
     "read"
    ]
   },
   "KeySource": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "KeySource",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Encryption-keySource"
     ]
    },
    "type": "string",
    "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault",
    "enum": [
     "Microsoft.Storage",
     "Microsoft.Keyvault"
    ],
    "x-ms-enum": {
     "name": "KeySource",
     "modelAsString": true
    },
    "default": "Microsoft.Storage"
   },
   "Action": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Action",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/VirtualNetworkRule-action",
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/IPRule-action"
     ]
    },
    "type": "string",
    "enum": [
     "Allow"
    ],
    "x-ms-enum": {
     "name": "Action",
     "modelAsString": false
    },
    "default": "Allow",
    "description": "The action of virtual network rule."
   },
   "State": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "State",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/VirtualNetworkRule-state"
     ]
    },
    "type": "string",
    "enum": [
     "provisioning",
     "deprovisioning",
     "succeeded",
     "failed",
     "networkSourceDeleted"
    ],
    "x-ms-enum": {
     "name": "State",
     "modelAsString": false
    },
    "description": "Gets the state of virtual network rule."
   },
   "Bypass": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Bypass",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/NetworkRuleSet-bypass"
     ]
    },
    "type": "string",
    "enum": [
     "None",
     "Logging",
     "Metrics",
     "AzureServices"
    ],
    "x-ms-enum": {
     "name": "Bypass",
     "modelAsString": true
    },
    "x-ms-client-name": "Bypass",
    "default": "AzureServices",
    "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics."
   },
   "DefaultAction": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "DefaultAction",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/NetworkRuleSet-defaultAction"
     ]
    },
    "type": "string",
    "enum": [
     "Allow",
     "Deny"
    ],
    "x-ms-enum": {
     "name": "DefaultAction",
     "modelAsString": false
    },
    "default": "Allow",
    "description": "Specifies the default action of allow or deny when no other rules match."
   },
   "DirectoryServiceOptions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "DirectoryServiceOptions",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/AzureFilesIdentityBasedAuthentication-directoryServiceOptions"
     ]
    },
    "type": "string",
    "description": "Indicates the directory service used.",
    "enum": [
     "None",
     "AADDS",
     "AD"
    ],
    "x-ms-enum": {
     "name": "DirectoryServiceOptions",
     "modelAsString": true
    }
   },
   "AccessTier": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "AccessTier",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountPropertiesCreateParameters-accessTier",
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountPropertiesUpdateParameters-accessTier"
     ]
    },
    "description": "Required for storage accounts where kind = BlobStorage. The access tier used for billing.",
    "x-ms-enum": {
     "name": "AccessTier",
     "modelAsString": false
    },
    "type": "string",
    "enum": [
     "Hot",
     "Cool"
    ]
   },
   "IdentityType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "IdentityType",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Identity-type"
     ]
    },
    "type": "string",
    "description": "The identity type.",
    "enum": [
     "SystemAssigned"
    ],
    "x-ms-enum": {
     "name": "IdentityType",
     "modelAsString": false
    }
   },
   "GeoReplicationStatus": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "GeoReplicationStatus",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/GeoReplicationStats-status"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.",
    "enum": [
     "Live",
     "Bootstrap",
     "Unavailable"
    ],
    "x-ms-enum": {
     "name": "GeoReplicationStatus",
     "modelAsString": true
    }
   },
   "RoutingChoice": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "RoutingChoice",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/RoutingPreference-routingChoice"
     ]
    },
    "type": "string",
    "description": "Routing Choice defines the kind of network routing opted by the user.",
    "enum": [
     "MicrosoftRouting",
     "InternetRouting"
    ],
    "x-ms-enum": {
     "name": "RoutingChoice",
     "modelAsString": true
    }
   },
   "BlobRestoreProgressStatus": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "BlobRestoreProgressStatus",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/BlobRestoreStatus-status"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.",
    "enum": [
     "InProgress",
     "Complete",
     "Failed"
    ],
    "x-ms-enum": {
     "name": "BlobRestoreProgressStatus",
     "modelAsString": true
    }
   },
   "ProvisioningState": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "ProvisioningState",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountProperties-provisioningState"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the status of the storage account at the time the operation was called.",
    "enum": [
     "Creating",
     "ResolvingDNS",
     "Succeeded"
    ],
    "x-ms-enum": {
     "name": "ProvisioningState",
     "modelAsString": false
    }
   },
   "AccountStatus": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "AccountStatus",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountProperties-statusOfPrimary",
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountProperties-statusOfSecondary"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the status indicating whether the primary location of the storage account is available or unavailable.",
    "enum": [
     "available",
     "unavailable"
    ],
    "x-ms-enum": {
     "name": "AccountStatus",
     "modelAsString": false
    }
   },
   "LargeFileSharesState": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "LargeFileSharesState",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountProperties-largeFileSharesState",
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountPropertiesCreateParameters-largeFileSharesState",
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountPropertiesUpdateParameters-largeFileSharesState"
     ]
    },
    "type": "string",
    "enum": [
     "Disabled",
     "Enabled"
    ],
    "x-ms-enum": {
     "name": "LargeFileSharesState",
     "modelAsString": true
    },
    "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled."
   },
   "KeyPermission": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "KeyPermission",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/StorageAccountKey-permissions"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Permissions for the key -- read-only or full permissions.",
    "enum": [
     "Read",
     "Full"
    ],
    "x-ms-enum": {
     "name": "KeyPermission",
     "modelAsString": false
    }
   },
   "UsageUnit": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "UsageUnit",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/Usage-unit"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the unit of measurement.",
    "enum": [
     "Count",
     "Bytes",
     "Seconds",
     "Percent",
     "CountsPerSecond",
     "BytesPerSecond"
    ],
    "x-ms-enum": {
     "name": "UsageUnit",
     "modelAsString": false
    }
   },
   "Services": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Services",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/AccountSasParameters-signedServices"
     ]
    },
    "type": "string",
    "enum": [
     "b",
     "q",
     "t",
     "f"
    ],
    "x-ms-enum": {
     "name": "Services",
     "modelAsString": true
    },
    "x-ms-client-name": "Services",
    "description": "The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f)."
   },
   "SignedResourceTypes": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "SignedResourceTypes",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/AccountSasParameters-signedResourceTypes"
     ]
    },
    "type": "string",
    "enum": [
     "s",
     "c",
     "o"
    ],
    "x-ms-enum": {
     "name": "SignedResourceTypes",
     "modelAsString": true
    },
    "x-ms-client-name": "ResourceTypes",
    "description": "The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files."
   },
   "Permissions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "Permissions",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/AccountSasParameters-signedPermission",
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-signedPermission"
     ]
    },
    "type": "string",
    "enum": [
     "r",
     "d",
     "w",
     "l",
     "a",
     "c",
     "u",
     "p"
    ],
    "x-ms-enum": {
     "name": "Permissions",
     "modelAsString": true
    },
    "x-ms-client-name": "Permissions",
    "description": "The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p)."
   },
   "HttpProtocol": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "HttpProtocol",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/AccountSasParameters-signedProtocol",
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-signedProtocol"
     ]
    },
    "type": "string",
    "enum": [
     "https,http",
     "https"
    ],
    "x-ms-enum": {
     "name": "HttpProtocol",
     "modelAsString": false
    },
    "x-ms-client-name": "Protocols",
    "description": "The protocol permitted for a request made with the account SAS."
   },
   "signedResource": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "signedResource",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ServiceSasParameters-signedResource"
     ]
    },
    "type": "string",
    "enum": [
     "b",
     "c",
     "f",
     "s"
    ],
    "x-ms-enum": {
     "name": "signedResource",
     "modelAsString": true
    },
    "x-ms-client-name": "Resource",
    "description": "The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s)."
   },
   "RuleType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "RuleType",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/ManagementPolicyRule-type"
     ]
    },
    "type": "string",
    "description": "The valid value is Lifecycle",
    "enum": [
     "Lifecycle"
    ],
    "x-ms-enum": {
     "name": "RuleType",
     "modelAsString": true
    }
   },
   "PrivateEndpointServiceConnectionStatus": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateEndpointServiceConnectionStatus",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateEndpointServiceConnectionStatus"
     ]
    },
    "type": "string",
    "description": "The private endpoint connection status.",
    "enum": [
     "Pending",
     "Approved",
     "Rejected"
    ],
    "x-ms-enum": {
     "name": "PrivateEndpointServiceConnectionStatus",
     "modelAsString": true
    }
   },
   "PrivateEndpointConnectionProvisioningState": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "PrivateEndpointConnectionProvisioningState",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/PrivateEndpointConnectionProvisioningState"
     ]
    },
    "type": "string",
    "readOnly": true,
    "description": "The current provisioning state.",
    "enum": [
     "Succeeded",
     "Creating",
     "Deleting",
     "Failed"
    ],
    "x-ms-enum": {
     "name": "PrivateEndpointConnectionProvisioningState",
     "modelAsString": true
    }
   },
   "EncryptionScopeSource": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionScopeSource",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionScopeProperties-source"
     ]
    },
    "type": "string",
    "enum": [
     "Microsoft.Storage",
     "Microsoft.KeyVault"
    ],
    "x-ms-enum": {
     "name": "EncryptionScopeSource",
     "modelAsString": true
    },
    "description": "The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault."
   },
   "EncryptionScopeState": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "EncryptionScopeState",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/schemas/EncryptionScopeProperties-state"
     ]
    },
    "type": "string",
    "enum": [
     "Enabled",
     "Disabled"
    ],
    "x-ms-enum": {
     "name": "EncryptionScopeState",
     "modelAsString": true
    },
    "description": "The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled."
   },
   "PublicAccess": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "PublicAccess",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ContainerProperties-publicAccess"
     ]
    },
    "type": "string",
    "enum": [
     "Container",
     "Blob",
     "None"
    ],
    "x-ms-enum": {
     "name": "PublicAccess",
     "modelAsString": false
    },
    "description": "Specifies whether data in the container may be accessed publicly and the level of access."
   },
   "LeaseStatus": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LeaseStatus",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ContainerProperties-leaseStatus"
     ]
    },
    "type": "string",
    "readOnly": true,
    "enum": [
     "Locked",
     "Unlocked"
    ],
    "x-ms-enum": {
     "name": "LeaseStatus",
     "modelAsString": true
    },
    "description": "The lease status of the container."
   },
   "LeaseState": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LeaseState",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ContainerProperties-leaseState"
     ]
    },
    "type": "string",
    "readOnly": true,
    "enum": [
     "Available",
     "Leased",
     "Expired",
     "Breaking",
     "Broken"
    ],
    "x-ms-enum": {
     "name": "LeaseState",
     "modelAsString": true
    },
    "description": "Lease state of the container."
   },
   "LeaseDuration": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LeaseDuration",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ContainerProperties-leaseDuration"
     ]
    },
    "type": "string",
    "readOnly": true,
    "enum": [
     "Infinite",
     "Fixed"
    ],
    "x-ms-enum": {
     "name": "LeaseDuration",
     "modelAsString": true
    },
    "description": "Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased."
   },
   "ImmutabilityPolicyState": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ImmutabilityPolicyState",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/ImmutabilityPolicyProperty-state"
     ]
    },
    "type": "string",
    "readOnly": true,
    "enum": [
     "Locked",
     "Unlocked"
    ],
    "x-ms-enum": {
     "name": "ImmutabilityPolicyState",
     "modelAsString": true
    },
    "description": "The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked."
   },
   "ImmutabilityPolicyUpdateType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "ImmutabilityPolicyUpdateType",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/UpdateHistoryProperty-update"
     ]
    },
    "type": "string",
    "readOnly": true,
    "enum": [
     "put",
     "lock",
     "extend"
    ],
    "x-ms-enum": {
     "name": "ImmutabilityPolicyUpdateType",
     "modelAsString": true
    },
    "description": "The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend."
   },
   "LeaseContainerRequest-action": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "LeaseContainerRequest-action",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/schemas/LeaseContainerRequest-action"
     ]
    },
    "type": "string",
    "enum": [
     "Acquire",
     "Renew",
     "Change",
     "Release",
     "Break"
    ],
    "description": "Specifies the lease action. Can be one of the available actions."
   },
   "CorsRule-allowedMethodsItem": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "CorsRule-allowedMethodsItem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/CorsRule-allowedMethodsItem"
     ]
    },
    "type": "string",
    "enum": [
     "DELETE",
     "GET",
     "HEAD",
     "MERGE",
     "POST",
     "OPTIONS",
     "PUT"
    ]
   },
   "SkuName": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "SkuName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/SkuName"
     ]
    },
    "type": "string",
    "description": "The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.",
    "enum": [
     "Standard_LRS",
     "Standard_GRS",
     "Standard_RAGRS",
     "Standard_ZRS",
     "Premium_LRS",
     "Premium_ZRS",
     "Standard_GZRS",
     "Standard_RAGZRS"
    ],
    "x-ms-enum": {
     "name": "SkuName",
     "modelAsString": true
    }
   },
   "SkuTier": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///235?oai3.shaken.json"
     ],
     "name": "SkuTier",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/common.json#/components/schemas/Tier"
     ]
    },
    "readOnly": true,
    "type": "string",
    "description": "The SKU tier. This is based on the SKU name.",
    "enum": [
     "Standard",
     "Premium"
    ],
    "x-ms-enum": {
     "name": "SkuTier",
     "modelAsString": false
    }
   }
  },
  "requestBodies": {
   "requestBodies:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·b4oid5·subscriptions-subscriptionid-providers-microsoft-storage-checknameavailability·post·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/requestBodies/paths·b4oid5·subscriptions-subscriptionid-providers-microsoft-storage-checknameavailability·post·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:29"
      }
     }
    },
    "required": true,
    "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
    "x-ms-requestBody-name": "accountName"
   },
   "requestBodies:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·pwrcgq·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/requestBodies/paths·pwrcgq·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:92"
      }
     }
    },
    "required": true,
    "description": "The parameters to provide for the created account.",
    "x-ms-requestBody-name": "parameters"
   },
   "requestBodies:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1fecaun·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·patch·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/requestBodies/paths·1fecaun·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·patch·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:152"
      }
     }
    },
    "required": true,
    "description": "The parameters to provide for the updated account.",
    "x-ms-requestBody-name": "parameters"
   },
   "requestBodies:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·xee0vu·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-regeneratekey·post·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/requestBodies/paths·xee0vu·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-regeneratekey·post·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:147"
      }
     }
    },
    "required": true,
    "description": "Specifies name of the key which should be regenerated -- key1, key2, kerb1, kerb2.",
    "x-ms-requestBody-name": "regenerateKey"
   },
   "requestBodies:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·cys8m6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listaccountsas·post·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/requestBodies/paths·cys8m6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listaccountsas·post·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:169"
      }
     }
    },
    "required": true,
    "description": "The parameters to provide to list SAS credentials for the storage account.",
    "x-ms-requestBody-name": "parameters"
   },
   "requestBodies:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·ms2qqp·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listservicesas·post·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/requestBodies/paths·ms2qqp·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listservicesas·post·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:180"
      }
     }
    },
    "required": true,
    "description": "The parameters to provide to list service SAS credentials.",
    "x-ms-requestBody-name": "parameters"
   },
   "requestBodies:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·2y2v90·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-restoreblobranges·post·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/requestBodies/paths·2y2v90·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-restoreblobranges·post·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:156"
      }
     }
    },
    "required": true,
    "description": "The parameters to provide for restore blob ranges.",
    "x-ms-requestBody-name": "parameters"
   },
   "requestBodies:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·ft7q7j·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·put·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/requestBodies/paths·ft7q7j·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·put·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:201"
      }
     }
    },
    "required": true,
    "description": "The ManagementPolicy set to a storage account.",
    "x-ms-requestBody-name": "properties"
   },
   "requestBodies:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·19y1sm2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·put·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/requestBodies/paths·19y1sm2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·put·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:220"
      }
     }
    },
    "required": true,
    "description": "The private endpoint connection properties.",
    "x-ms-requestBody-name": "properties"
   },
   "requestBodies:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·twe8qb·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/requestBodies/paths·twe8qb·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:238"
      }
     }
    },
    "required": true,
    "description": "Encryption scope properties to be used for the create or update.",
    "x-ms-requestBody-name": "encryptionScope"
   },
   "requestBodies:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///231?oai3.shaken.json"
     ],
     "name": "paths·1krc6wc·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·patch·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/storage.json#/components/requestBodies/paths·1krc6wc·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·patch·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:238"
      }
     }
    },
    "required": true,
    "description": "Encryption scope properties to be used for the update.",
    "x-ms-requestBody-name": "encryptionScope"
   },
   "requestBodies:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·lvujkw·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-blobservicesname·put·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/requestBodies/paths·lvujkw·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-blobservicesname·put·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:304"
      }
     }
    },
    "required": true,
    "description": "The properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
    "x-ms-requestBody-name": "parameters"
   },
   "requestBodies:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·155t5o1·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·put·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/requestBodies/paths·155t5o1·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·put·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:276"
      }
     }
    },
    "required": true,
    "description": "Properties of the blob container to create.",
    "x-ms-requestBody-name": "blobContainer"
   },
   "requestBodies:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·ai0plt·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·patch·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/requestBodies/paths·ai0plt·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername·patch·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:276"
      }
     }
    },
    "required": true,
    "description": "Properties to update for the blob container.",
    "x-ms-requestBody-name": "blobContainer"
   },
   "requestBodies:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·1a2aczd·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-setlegalhold·post·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/requestBodies/paths·1a2aczd·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-setlegalhold·post·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:297"
      }
     }
    },
    "required": true,
    "description": "The LegalHold property that will be set to a blob container.",
    "x-ms-requestBody-name": "LegalHold"
   },
   "requestBodies:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·jikb2u·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-clearlegalhold·post·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/requestBodies/paths·jikb2u·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-clearlegalhold·post·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:297"
      }
     }
    },
    "required": true,
    "description": "The LegalHold property that will be clear from a blob container.",
    "x-ms-requestBody-name": "LegalHold"
   },
   "requestBodies:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·1qzacqw·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·put·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/requestBodies/paths·1qzacqw·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·put·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:282"
      }
     }
    },
    "description": "The ImmutabilityPolicy Properties that will be created or updated to a blob container.",
    "x-ms-requestBody-name": "parameters"
   },
   "requestBodies:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·u8kycd·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-extend·post·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/requestBodies/paths·u8kycd·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-extend·post·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:282"
      }
     }
    },
    "description": "The ImmutabilityPolicy Properties that will be extended for a blob container.",
    "x-ms-requestBody-name": "parameters"
   },
   "requestBodies:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·w4a8e8·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-lease·post·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/requestBodies/paths·w4a8e8·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-lease·post·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:311"
      }
     }
    },
    "description": "Lease Container request body.",
    "x-ms-requestBody-name": "parameters"
   },
   "requestBodies:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·cjsdcv·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-fileservicesname·put·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/requestBodies/paths·cjsdcv·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-fileservicesname·put·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:323"
      }
     }
    },
    "required": true,
    "description": "The properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.",
    "x-ms-requestBody-name": "parameters"
   },
   "requestBodies:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·g5239y·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·put·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/requestBodies/paths·g5239y·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·put·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:325"
      }
     }
    },
    "required": true,
    "description": "Properties of the file share to create.",
    "x-ms-requestBody-name": "fileShare"
   },
   "requestBodies:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///233?oai3.shaken.json"
     ],
     "name": "paths·183dr1t·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·patch·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/file.json#/components/requestBodies/paths·183dr1t·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-fileservices-default-shares-sharename·patch·requestbody"
     ]
    },
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:325"
      }
     }
    },
    "required": true,
    "description": "Properties to update for the file share.",
    "x-ms-requestBody-name": "fileShare"
   }
  },
  "headers": {
   "headers:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·c0rkxh·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·put·responses·200·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/headers/paths·c0rkxh·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·put·responses·200·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:259"
    },
    "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers."
   },
   "headers:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·16yvrt5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·get·responses·200·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/headers/paths·16yvrt5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·get·responses·200·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:261"
    },
    "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers."
   },
   "headers:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·cwtb70·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·delete·responses·200·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/headers/paths·cwtb70·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-immutabilitypolicyname·delete·responses·200·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:263"
    },
    "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers."
   },
   "headers:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·sm9d9h·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-lock·post·responses·200·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/headers/paths·sm9d9h·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-lock·post·responses·200·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:265"
    },
    "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers."
   },
   "headers:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-06-01"
     ],
     "filename": [
      "mem:///232?oai3.shaken.json"
     ],
     "name": "paths·1ti4u6f·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-extend·post·responses·200·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#/components/headers/paths·1ti4u6f·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-blobservices-default-containers-containername-immutabilitypolicies-default-extend·post·responses·200·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:267"
    },
    "description": "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers."
   }
  }
 },
 "security": [
  {
   "azure_auth": [
    "user_impersonation"
   ]
  }
 ],
 "servers": [
  {
   "url": "https://management.azure.com/"
  }
 ]
}