!<!CodeModel> 
info: !<!Info> 
  description: Service client for multiapi client testing
  title: multiapi-v3
schemas: !<!Schemas> 
  numbers:
  - !<!NumberSchema> &ref_2
    type: integer
    precision: 32
    language: !<!Languages> 
      default:
        name: integer
        description: ''
    protocol: !<!Protocols> {}
  strings:
  - !<!StringSchema> &ref_0
    type: string
    language: !<!Languages> 
      default:
        name: string
        description: simple string
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_1
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 3.0.0
    language: !<!Languages> 
      default:
        name: ModelThree-optionalProperty
        description: ''
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_3
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 3.0.0
    language: !<!Languages> 
      default:
        name: Error-message
        description: ''
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_4
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 3.0.0
    maxLength: 2048
    language: !<!Languages> 
      default:
        name: SourcePath-source
        description: File source path.
    protocol: !<!Protocols> {}
  - !<!StringSchema> 
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 3.0.0
    minLength: 1
    language: !<!Languages> 
      default:
        name: string
        description: ''
    protocol: !<!Protocols> {}
  sealedChoices:
  - !<!SealedChoiceSchema> &ref_13
    choices:
    - !<!ChoiceValue> 
      value: application/pdf
      language:
        default:
          name: application/pdf
          description: Content Type 'application/pdf'
    - !<!ChoiceValue> 
      value: image/jpeg
      language:
        default:
          name: image/jpeg
          description: Content Type 'image/jpeg'
    - !<!ChoiceValue> 
      value: image/png
      language:
        default:
          name: image/png
          description: Content Type 'image/png'
    - !<!ChoiceValue> 
      value: image/tiff
      language:
        default:
          name: image/tiff
          description: Content Type 'image/tiff'
    type: sealed-choice
    language: !<!Languages> 
      default:
        name: ContentType
        description: Content type for upload
    protocol: !<!Protocols> {}
  constants:
  - !<!ConstantSchema> &ref_5
    type: constant
    value: !<!ConstantValue> 
      value: 3.0.0
    valueType: *ref_0
    language: !<!Languages> 
      default:
        name: ApiVersion-3.0.0
        description: Api Version (3.0.0)
    protocol: !<!Protocols> {}
  binaries:
  - !<!BinarySchema> &ref_14
    type: binary
    apiVersions:
    - !<!ApiVersion> 
      version: 3.0.0
    language: !<!Languages> 
      default:
        name: binary
        description: Uri or local path to source data.
    protocol: !<!Protocols> {}
  objects:
  - !<!ObjectSchema> &ref_8
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 3.0.0
    properties:
    - !<!Property> &ref_10
      schema: *ref_1
      serializedName: optionalProperty
      language: !<!Languages> 
        default:
          name: optionalProperty
          description: ''
      protocol: !<!Protocols> {}
    serializationFormats:
    - json
    usage:
    - input
    - output
    language: !<!Languages> 
      default:
        name: ModelThree
        description: Only exists in api version 3.0.0
        namespace: ''
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_12
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 3.0.0
    properties:
    - !<!Property> 
      schema: *ref_2
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: ''
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_3
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: ''
      protocol: !<!Protocols> {}
    serializationFormats:
    - json
    usage:
    - output
    language: !<!Languages> 
      default:
        name: Error
        description: ''
        namespace: ''
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_17
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 3.0.0
    properties:
    - !<!Property> &ref_19
      schema: *ref_4
      serializedName: source
      language: !<!Languages> 
        default:
          name: source
          description: File source path.
      protocol: !<!Protocols> {}
    serializationFormats:
    - json
    usage:
    - input
    language: !<!Languages> 
      default:
        name: SourcePath
        description: Uri or local path to source data.
        namespace: ''
    protocol: !<!Protocols> {}
globalParameters:
- !<!Parameter> &ref_6
  schema: *ref_0
  clientDefaultValue: ''
  implementation: Client
  origin: 'modelerfour:synthesized/host'
  required: true
  extensions:
    x-ms-skip-url-encoding: true
  language: !<!Languages> 
    default:
      name: $host
      description: server parameter
      serializedName: $host
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: uri
- !<!Parameter> &ref_7
  schema: *ref_5
  implementation: Client
  origin: 'modelerfour:synthesized/api-version'
  required: true
  language: !<!Languages> 
    default:
      name: ApiVersion
      description: Api Version
      serializedName: api-version
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: query
operationGroups:
- !<!OperationGroup> 
  $key: OperationGroupOne
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 3.0.0
    parameters:
    - *ref_6
    - *ref_7
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_9
        schema: *ref_8
        flattened: true
        implementation: Method
        required: false
        language: !<!Languages> 
          default:
            name: parameterOne
            description: A ModelThree parameter
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!VirtualParameter> &ref_11
        schema: *ref_1
        implementation: Method
        originalParameter: *ref_9
        pathToProperty: []
        targetProperty: *ref_10
        language: !<!Languages> 
          default:
            name: optionalProperty
            description: ''
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_11
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /multiapi/one/testTwoEndpoint
          method: get
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!SchemaResponse> 
      schema: *ref_8
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: testTwo
        description: TestTwo should be in OperationGroupOneOperations. Takes in ModelThree and ouputs ModelThree
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: OperationGroupOne
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: OperationGroupTwo
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 3.0.0
    parameters:
    - *ref_6
    - *ref_7
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_15
        schema: *ref_13
        implementation: Method
        origin: 'modelerfour:synthesized/content-type'
        required: true
        language: !<!Languages> 
          default:
            name: content-type
            description: Upload file type
            serializedName: Content-Type
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: header
      - !<!Parameter> &ref_16
        schema: *ref_14
        implementation: Method
        required: true
        language: !<!Languages> 
          default:
            name: input
            description: Input parameter.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: binary
      signatureParameters:
      - *ref_15
      - *ref_16
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpBinaryRequest> 
          path: /multiapi/two/testFourEndpoint
          method: post
          binary: true
          knownMediaType: binary
          mediaTypes:
          - application/pdf
          - image/jpeg
          - image/png
          - image/tiff
          uri: '{$host}'
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_18
        schema: *ref_17
        flattened: true
        implementation: Method
        required: false
        language: !<!Languages> 
          default:
            name: input
            description: Input parameter.
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!VirtualParameter> &ref_20
        schema: *ref_4
        implementation: Method
        originalParameter: *ref_18
        pathToProperty: []
        targetProperty: *ref_19
        language: !<!Languages> 
          default:
            name: source
            description: File source path.
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_20
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /multiapi/two/testFourEndpoint
          method: post
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-request-id: request-id
    language: !<!Languages> 
      default:
        name: testFour
        description: TestFour should be in OperationGroupTwoOperations
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 3.0.0
    parameters:
    - *ref_6
    - *ref_7
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpRequest> 
          path: /multiapi/two/testFiveEndpoint
          method: put
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: testFive
        description: TestFive should be in OperationGroupTwoOperations.
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: OperationGroupTwo
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
