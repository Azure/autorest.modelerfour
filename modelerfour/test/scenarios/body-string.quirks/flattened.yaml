!<!CodeModel> 
info: !<!Info> 
  description: Test Infrastructure for AutoRest Swagger BAT
  title: body-string.quirks
schemas: !<!Schemas> 
  numbers:
    - !<!NumberSchema> &ref_1
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: integer
          description: ''
      protocol: !<!Protocols> {}
  strings:
    - !<!StringSchema> &ref_0
      type: string
      language: !<!Languages> 
        default:
          name: string
          description: simple string
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_2
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: Error-message
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_7
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: string
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_4
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: RefColorConstant-field1
          description: Sample string.
      protocol: !<!Protocols> {}
  sealedChoices:
    - !<!SealedChoiceSchema> &ref_14
      choices:
        - !<!ChoiceValue> 
          value: red color
          language:
            default:
              name: red color
              description: ''
        - !<!ChoiceValue> 
          value: green-color
          language:
            default:
              name: green-color
              description: ''
        - !<!ChoiceValue> 
          value: blue_color
          language:
            default:
              name: blue_color
              description: ''
      type: sealed-choice
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: Colors
          description: ''
      protocol: !<!Protocols> {}
  constants:
    - !<!ConstantSchema> 
      type: constant
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      value: !<!ConstantValue> 
        value: null
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: paths·1p4myr3·string-null·get·responses·200·content·application-json·schema
          description: ''
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> 
      type: constant
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      value: !<!ConstantValue> 
        value: ''
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: paths·uadw8r·string-empty·get·responses·200·content·application-json·schema
          description: ''
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> 
      type: constant
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      value: !<!ConstantValue> 
        value: 啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: paths·16uxhh2·string-mbcs·get·responses·200·content·application-json·schema
          description: ''
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> 
      type: constant
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      value: !<!ConstantValue> 
        value: '    Now is the time for all good men to come to the aid of their country    '
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: paths·ka9kc·string-whitespace·get·responses·200·content·application-json·schema
          description: ''
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_3
      type: constant
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      value: !<!ConstantValue> 
        value: green-color
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: ColorConstant
          description: Referenced Color Constant Description.
      protocol: !<!Protocols> {}
  byteArrays:
    - !<!ByteArraySchema> &ref_12
      type: byte-array
      format: base64url
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: paths·q42kx1·string-base64encoding·get·responses·200·content·application-json·schema
          description: ''
      protocol: !<!Protocols> {}
  objects:
    - !<!ObjectSchema> &ref_6
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_1
          serializedName: status
          language: !<!Languages> 
            default:
              name: status
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_2
          serializedName: message
          language: !<!Languages> 
            default:
              name: message
              description: ''
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: Error
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_17
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> &ref_19
          schema: *ref_3
          required: true
          serializedName: ColorConstant
          language: !<!Languages> 
            default:
              name: ColorConstant
              description: Referenced Color Constant Description.
          protocol: !<!Protocols> {}
        - !<!Property> &ref_20
          schema: *ref_4
          required: false
          serializedName: field1
          language: !<!Languages> 
            default:
              name: field1
              description: Sample string.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
        - input
      language: !<!Languages> 
        default:
          name: RefColorConstant
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
globalParameters:
  - !<!Parameter> &ref_5
    schema: *ref_0
    clientDefaultValue: 'http://localhost:3000'
    implementation: Client
    origin: 'modelerfour:synthesized/host'
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !<!Languages> 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: uri
operationGroups:
  - !<!OperationGroup> 
    $key: string
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /string/null
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_0
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getNull
            description: Get null string value value
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_8
                schema: *ref_7
                implementation: Method
                required: false
                language: !<!Languages> 
                  default:
                    name: stringBody
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_8
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /string/null
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: putNull
            description: Set string value null
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /string/empty
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_0
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getEmpty
            description: Get empty string value value ''
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_9
                schema: *ref_7
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: stringBody
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_9
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /string/empty
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: putEmpty
            description: Set string value empty ''
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /string/mbcs
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_0
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getMbcs
            description: Get mbcs string value '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_10
                schema: *ref_7
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: stringBody
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_10
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /string/mbcs
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: putMbcs
            description: Set string value mbcs '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /string/whitespace
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_0
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getWhitespace
            description: Get string value with leading and trailing whitespace '<tab><space><space>Now is the time for all good men to come to the aid of their country<tab><space><space>'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_11
                schema: *ref_7
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: stringBody
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_11
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /string/whitespace
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: putWhitespace
            description: Set String value with leading and trailing whitespace '<tab><space><space>Now is the time for all good men to come to the aid of their country<tab><space><space>'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /string/notProvided
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_7
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getNotProvided
            description: Get String value when no string value is sent in response payload
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /string/base64Encoding
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_12
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getBase64Encoded
            description: Get value that is base64 encoded
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /string/base64UrlEncoding
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_12
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getBase64UrlEncoded
            description: Get value that is base64url encoded
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_13
                schema: *ref_12
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: stringBody
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_13
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /string/base64UrlEncoding
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: putBase64UrlEncoded
            description: Put value that is base64url encoded
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /string/nullBase64UrlEncoding
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_12
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getNullBase64UrlEncoded
            description: Get null value that is expected to be base64url encoded
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: string
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: enum
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /string/enum/notExpandable
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_14
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getNotExpandable
            description: 'Get enum value ''red color'' from enumeration of ''red color'', ''green-color'', ''blue_color''.'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_15
                schema: *ref_14
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: stringBody
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_15
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /string/enum/notExpandable
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: putNotExpandable
            description: 'Sends value ''red color'' from enumeration of ''red color'', ''green-color'', ''blue_color'''
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /string/enum/Referenced
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_14
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getReferenced
            description: 'Get enum value ''red color'' from enumeration of ''red color'', ''green-color'', ''blue_color''.'
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_16
                schema: *ref_14
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: enumStringBody
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_16
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /string/enum/Referenced
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: putReferenced
            description: 'Sends value ''red color'' from enumeration of ''red color'', ''green-color'', ''blue_color'''
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /string/enum/ReferencedConstant
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_17
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: getReferencedConstant
            description: Get value 'green-color' from the constant.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_5
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> &ref_18
                schema: *ref_17
                flattened: true
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: enumStringBody
                    description: ''
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!VirtualParameter> 
                schema: *ref_3
                implementation: Method
                originalParameter: *ref_18
                pathToProperty: []
                required: true
                targetProperty: *ref_19
                language: !<!Languages> 
                  default:
                    name: ColorConstant
                    description: Referenced Color Constant Description.
                protocol: !<!Protocols> {}
              - !<!VirtualParameter> &ref_21
                schema: *ref_4
                implementation: Method
                originalParameter: *ref_18
                pathToProperty: []
                required: false
                targetProperty: *ref_20
                language: !<!Languages> 
                  default:
                    name: field1
                    description: Sample string.
                protocol: !<!Protocols> {}
            signatureParameters:
              - *ref_21
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /string/enum/ReferencedConstant
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: putReferencedConstant
            description: Sends value 'green-color' from a constant
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: enum
        description: ''
    protocol: !<!Protocols> {}
security: !<!Security> 
  authenticationRequired: false
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
