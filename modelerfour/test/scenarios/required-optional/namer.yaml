!<!CodeModel> 
schemas: !<!Schemas> 
  objects:
  - !<!ObjectSchema> &ref_17
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> 
      schema: !<!NumberSchema> &ref_0
        type: integer
        precision: 32
        language: !<!Languages> 
          default:
            name: Integer
            description: ''
        protocol: !<!Protocols> {}
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: ''
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: !<!StringSchema> &ref_5
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: ErrorMessage
            description: ''
        protocol: !<!Protocols> {}
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Error
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_26
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> &ref_28
      schema: *ref_0
      required: true
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: IntWrapper
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_30
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> &ref_32
      schema: *ref_0
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: IntOptionalWrapper
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_38
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> &ref_40
      schema: !<!StringSchema> &ref_6
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: StringWrapperValue
            description: ''
        protocol: !<!Protocols> {}
      required: true
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: StringWrapper
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_42
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> &ref_44
      schema: !<!StringSchema> &ref_7
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: StringOptionalWrapperValue
            description: ''
        protocol: !<!Protocols> {}
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: StringOptionalWrapper
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_1
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> &ref_49
      schema: *ref_0
      required: true
      serializedName: id
      language: !<!Languages> 
        default:
          name: id
          description: ''
      protocol: !<!Protocols> {}
    - !<!Property> &ref_50
      schema: !<!StringSchema> &ref_8
        type: string
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        language: !<!Languages> 
          default:
            name: ProductName
            description: ''
        protocol: !<!Protocols> {}
      required: false
      serializedName: name
      language: !<!Languages> 
        default:
          name: name
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Product
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_56
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> &ref_58
      schema: *ref_1
      required: true
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ClassWrapper
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_60
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> &ref_62
      schema: *ref_1
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ClassOptionalWrapper
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_68
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> &ref_70
      schema: !<!ArraySchema> &ref_2
        type: array
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        elementType: !<!StringSchema> &ref_10
          type: string
          apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
          language: !<!Languages> 
            default:
              name: ArrayWrapperValueItem
              description: ''
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: ArrayWrapperValue
            description: Array of ArrayWrapperValueItem
        protocol: !<!Protocols> {}
      required: true
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ArrayWrapper
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  - !<!ObjectSchema> &ref_72
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    properties:
    - !<!Property> &ref_74
      schema: !<!ArraySchema> &ref_3
        type: array
        apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
        elementType: !<!StringSchema> &ref_11
          type: string
          apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
          language: !<!Languages> 
            default:
              name: ArrayOptionalWrapperValueItem
              description: ''
          protocol: !<!Protocols> {}
        language: !<!Languages> 
          default:
            name: ArrayOptionalWrapperValue
            description: Array of ArrayOptionalWrapperValueItem
        protocol: !<!Protocols> {}
      serializedName: value
      language: !<!Languages> 
        default:
          name: value
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ArrayOptionalWrapper
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  arrays:
  - !<!ArraySchema> &ref_64
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: !<!StringSchema> &ref_9
      type: string
      apiVersions:
      - !<!ApiVersion> 
        version: 1.0.0
      language: !<!Languages> 
        default:
          name: PostContentSchemaItem
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ArrayOfPostContentSchemaItem
        description: Array of PostContentSchemaItem
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_66
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: !<!StringSchema> &ref_4
      type: string
      apiVersions:
      - !<!ApiVersion> 
        version: 1.0.0
      language: !<!Languages> 
        default:
          name: String
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ArrayOfString
        description: Array of String
    protocol: !<!Protocols> {}
  - *ref_2
  - *ref_3
  - !<!ArraySchema> &ref_76
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: !<!StringSchema> &ref_12
      type: string
      apiVersions:
      - !<!ApiVersion> 
        version: 1.0.0
      language: !<!Languages> 
        default:
          name: Post0ItemsItem
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ArrayOfPost0ItemsItem
        description: Array of Post0ItemsItem
    protocol: !<!Protocols> {}
  numbers:
  - *ref_0
  - !<!NumberSchema> &ref_13
    type: integer
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: Integer
        description: ''
    protocol: !<!Protocols> {}
  strings:
  - !<!StringSchema> &ref_14
    type: string
    language: !<!Languages> 
      default:
        name: String
        description: simple string
    protocol: !<!Protocols> {}
  - *ref_4
  - *ref_5
  - *ref_6
  - *ref_7
  - *ref_8
  - *ref_9
  - *ref_10
  - *ref_11
  - *ref_12
globalParameters:
- !<!Parameter> &ref_21
  schema: *ref_4
  implementation: Client
  required: true
  extensions:
    x-ms-priority: 0
  language: !<!Languages> 
    default:
      name: RequiredGlobalPath
      description: number of items to skip
      serializedName: required-global-path
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: path
- !<!Parameter> &ref_22
  schema: *ref_4
  implementation: Client
  required: true
  extensions:
    x-ms-priority: 1
  language: !<!Languages> 
    default:
      name: RequiredGlobalQuery
      description: number of items to skip
      serializedName: required-global-query
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: query
- !<!Parameter> &ref_23
  schema: *ref_13
  implementation: Client
  extensions:
    x-ms-priority: 2
  language: !<!Languages> 
    default:
      name: OptionalGlobalQuery
      description: number of items to skip
      serializedName: optional-global-query
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: query
- !<!Parameter> &ref_15
  schema: *ref_14
  clientDefaultValue: 'http://localhost:3000'
  implementation: Client
  required: true
  extensions:
    x-ms-skip-url-encoding: true
  language: !<!Languages> 
    default:
      name: $host
      description: server parameter
      serializedName: $host
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: uri
info: !<!Info> 
  description: Test Infrastructure for AutoRest
  title: required-optional
operationGroups:
- !<!OperationGroup> 
  $key: implicit
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    - !<!Parameter> &ref_16
      schema: *ref_4
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: pathParameter
          description: ''
          serializedName: pathParameter
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/reqopt/implicit/required/path/{pathParameter}'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_16
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetRequiredPath
        description: Test implicitly required path parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    - !<!Parameter> &ref_18
      schema: *ref_4
      implementation: Method
      language: !<!Languages> 
        default:
          name: queryParameter
          description: ''
          serializedName: queryParameter
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /reqopt/implicit/optional/query
          method: put
          uri: '{$host}'
    signatureParameters:
    - *ref_18
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PutOptionalQuery
        description: Test implicitly optional query parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    - !<!Parameter> &ref_19
      schema: *ref_4
      implementation: Method
      language: !<!Languages> 
        default:
          name: queryParameter
          description: ''
          serializedName: queryParameter
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: header
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /reqopt/implicit/optional/header
          method: put
          uri: '{$host}'
    signatureParameters:
    - *ref_19
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PutOptionalHeader
        description: Test implicitly optional header parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_20
        schema: *ref_4
        implementation: Method
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_20
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/implicit/optional/body
          method: put
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PutOptionalBody
        description: Test implicitly optional body parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    - *ref_21
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/reqopt/global/required/path/{required-global-path}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetRequiredGlobalPath
        description: Test implicitly required path parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    - *ref_22
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /reqopt/global/required/query
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetRequiredGlobalQuery
        description: Test implicitly required query parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    - *ref_23
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /reqopt/global/optional/query
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: GetOptionalGlobalQuery
        description: Test implicitly optional query parameter
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: Implicit
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: explicit
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_24
        schema: *ref_13
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_24
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/requied/integer/parameter
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostRequiredIntegerParameter
        description: Test explicitly required integer. Please put null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_25
        schema: *ref_13
        implementation: Method
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_25
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/optional/integer/parameter
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostOptionalIntegerParameter
        description: Test explicitly optional integer. Please put null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_27
        schema: *ref_26
        flattened: true
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: _bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> &ref_29
        schema: *ref_0
        implementation: Method
        originalParameter: *ref_27
        pathToProperty: []
        required: true
        serializedName: value
        targetProperty: *ref_28
        language: !<!Languages> 
          default:
            name: value
            description: ''
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_29
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/requied/integer/property
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostRequiredIntegerProperty
        description: Test explicitly required integer. Please put a valid int-wrapper with 'value' = null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_31
        schema: *ref_30
        flattened: true
        implementation: Method
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: _bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> &ref_33
        schema: *ref_0
        implementation: Method
        originalParameter: *ref_31
        pathToProperty: []
        serializedName: value
        targetProperty: *ref_32
        language: !<!Languages> 
          default:
            name: value
            description: ''
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_33
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/optional/integer/property
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostOptionalIntegerProperty
        description: Test explicitly optional integer. Please put a valid int-wrapper with 'value' = null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    - !<!Parameter> &ref_34
      schema: *ref_13
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: headerParameter
          description: ''
          serializedName: headerParameter
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: header
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /reqopt/requied/integer/header
          method: post
          uri: '{$host}'
    signatureParameters:
    - *ref_34
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostRequiredIntegerHeader
        description: Test explicitly required integer. Please put a header 'headerParameter' => null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    - !<!Parameter> &ref_35
      schema: *ref_13
      implementation: Method
      language: !<!Languages> 
        default:
          name: headerParameter
          description: ''
          serializedName: headerParameter
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: header
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /reqopt/optional/integer/header
          method: post
          uri: '{$host}'
    signatureParameters:
    - *ref_35
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostOptionalIntegerHeader
        description: Test explicitly optional integer. Please put a header 'headerParameter' => null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_36
        schema: *ref_4
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_36
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/requied/string/parameter
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostRequiredStringParameter
        description: Test explicitly required string. Please put null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_37
        schema: *ref_4
        implementation: Method
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_37
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/optional/string/parameter
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostOptionalStringParameter
        description: Test explicitly optional string. Please put null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_39
        schema: *ref_38
        flattened: true
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: _bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> &ref_41
        schema: *ref_6
        implementation: Method
        originalParameter: *ref_39
        pathToProperty: []
        required: true
        serializedName: value
        targetProperty: *ref_40
        language: !<!Languages> 
          default:
            name: value
            description: ''
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_41
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/requied/string/property
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostRequiredStringProperty
        description: Test explicitly required string. Please put a valid string-wrapper with 'value' = null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_43
        schema: *ref_42
        flattened: true
        implementation: Method
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: _bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> &ref_45
        schema: *ref_7
        implementation: Method
        originalParameter: *ref_43
        pathToProperty: []
        serializedName: value
        targetProperty: *ref_44
        language: !<!Languages> 
          default:
            name: value
            description: ''
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_45
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/optional/string/property
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostOptionalStringProperty
        description: Test explicitly optional integer. Please put a valid string-wrapper with 'value' = null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    - !<!Parameter> &ref_46
      schema: *ref_4
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: headerParameter
          description: ''
          serializedName: headerParameter
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: header
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /reqopt/requied/string/header
          method: post
          uri: '{$host}'
    signatureParameters:
    - *ref_46
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostRequiredStringHeader
        description: Test explicitly required string. Please put a header 'headerParameter' => null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    - !<!Parameter> &ref_47
      schema: *ref_4
      implementation: Method
      language: !<!Languages> 
        default:
          name: bodyParameter
          description: ''
          serializedName: bodyParameter
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: header
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /reqopt/optional/string/header
          method: post
          uri: '{$host}'
    signatureParameters:
    - *ref_47
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostOptionalStringHeader
        description: Test explicitly optional string. Please put a header 'headerParameter' => null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_48
        schema: *ref_1
        flattened: true
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: _bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> &ref_51
        schema: *ref_0
        implementation: Method
        originalParameter: *ref_48
        pathToProperty: []
        required: true
        serializedName: id
        targetProperty: *ref_49
        language: !<!Languages> 
          default:
            name: id
            description: ''
        protocol: !<!Protocols> {}
      - !<!Parameter> &ref_52
        schema: *ref_8
        implementation: Method
        originalParameter: *ref_48
        pathToProperty: []
        required: false
        serializedName: name
        targetProperty: *ref_50
        language: !<!Languages> 
          default:
            name: name
            description: ''
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_51
      - *ref_52
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/requied/class/parameter
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostRequiredClassParameter
        description: Test explicitly required complex object. Please put null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_53
        schema: *ref_1
        flattened: true
        implementation: Method
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: _bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> &ref_54
        schema: *ref_0
        implementation: Method
        originalParameter: *ref_53
        pathToProperty: []
        required: true
        serializedName: id
        targetProperty: *ref_49
        language: !<!Languages> 
          default:
            name: id
            description: ''
        protocol: !<!Protocols> {}
      - !<!Parameter> &ref_55
        schema: *ref_8
        implementation: Method
        originalParameter: *ref_53
        pathToProperty: []
        required: false
        serializedName: name
        targetProperty: *ref_50
        language: !<!Languages> 
          default:
            name: name
            description: ''
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_54
      - *ref_55
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/optional/class/parameter
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostOptionalClassParameter
        description: Test explicitly optional complex object. Please put null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_57
        schema: *ref_56
        flattened: true
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: _bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> &ref_59
        schema: *ref_1
        implementation: Method
        originalParameter: *ref_57
        pathToProperty: []
        required: true
        serializedName: value
        targetProperty: *ref_58
        language: !<!Languages> 
          default:
            name: value
            description: ''
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_59
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/requied/class/property
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostRequiredClassProperty
        description: Test explicitly required complex object. Please put a valid class-wrapper with 'value' = null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_61
        schema: *ref_60
        flattened: true
        implementation: Method
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: _bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> &ref_63
        schema: *ref_1
        implementation: Method
        originalParameter: *ref_61
        pathToProperty: []
        serializedName: value
        targetProperty: *ref_62
        language: !<!Languages> 
          default:
            name: value
            description: ''
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_63
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/optional/class/property
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostOptionalClassProperty
        description: Test explicitly optional complex object. Please put a valid class-wrapper with 'value' = null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_65
        schema: *ref_64
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_65
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/requied/array/parameter
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostRequiredArrayParameter
        description: Test explicitly required array. Please put null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_67
        schema: *ref_66
        implementation: Method
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      signatureParameters:
      - *ref_67
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/optional/array/parameter
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostOptionalArrayParameter
        description: Test explicitly optional array. Please put null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_69
        schema: *ref_68
        flattened: true
        implementation: Method
        required: true
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: _bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> &ref_71
        schema: *ref_2
        implementation: Method
        originalParameter: *ref_69
        pathToProperty: []
        required: true
        serializedName: value
        targetProperty: *ref_70
        language: !<!Languages> 
          default:
            name: value
            description: ''
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_71
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/requied/array/property
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostRequiredArrayProperty
        description: Test explicitly required array. Please put a valid array-wrapper with 'value' = null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    requests:
    - !<!Request> 
      parameters:
      - !<!Parameter> &ref_73
        schema: *ref_72
        flattened: true
        implementation: Method
        extensions:
          x-ms-requestBody-name: bodyParameter
        language: !<!Languages> 
          default:
            name: _bodyParameter
            description: ''
        protocol: !<!Protocols> 
          http: !<!HttpParameter> 
            in: body
            style: json
      - !<!Parameter> &ref_75
        schema: *ref_3
        implementation: Method
        originalParameter: *ref_73
        pathToProperty: []
        serializedName: value
        targetProperty: *ref_74
        language: !<!Languages> 
          default:
            name: value
            description: ''
        protocol: !<!Protocols> {}
      signatureParameters:
      - *ref_75
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpWithBodyRequest> 
          path: /reqopt/optional/array/property
          method: post
          binary: true
          knownMediaType: json
          mediaTypes:
          - application/json
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    extensions:
      x-ms-requestBody-index: 0
    language: !<!Languages> 
      default:
        name: PostOptionalArrayProperty
        description: Test explicitly optional array. Please put a valid array-wrapper with 'value' = null.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    - !<!Parameter> &ref_77
      schema: *ref_76
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: headerParameter
          description: ''
          serializedName: headerParameter
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: header
          style: simple
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /reqopt/requied/array/header
          method: post
          uri: '{$host}'
    signatureParameters:
    - *ref_77
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostRequiredArrayHeader
        description: Test explicitly required array. Please put a header 'headerParameter' => null and the client library should throw before the request is sent.
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_15
    - !<!Parameter> &ref_78
      schema: *ref_66
      implementation: Method
      language: !<!Languages> 
        default:
          name: headerParameter
          description: ''
          serializedName: headerParameter
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: header
          style: simple
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /reqopt/optional/array/header
          method: post
          uri: '{$host}'
    signatureParameters:
    - *ref_78
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_17
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: PostOptionalArrayHeader
        description: Test explicitly optional integer. Please put a header 'headerParameter' => null.
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: Explicit
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: RequiredOptional
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
