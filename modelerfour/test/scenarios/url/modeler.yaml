!<!CodeModel> 
info: !<!Info> 
  description: Test Infrastructure for AutoRest
  title: url
schemas: !<!Schemas> 
  booleans:
  - !<!BooleanSchema> &ref_0
    type: boolean
    language: !<!Languages> 
      default:
        name: bool
        description: simple boolean
    protocol: !<!Protocols> {}
  - !<!BooleanSchema> &ref_47
    type: boolean
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: boolean
        description: ''
    protocol: !<!Protocols> {}
  numbers:
  - !<!NumberSchema> &ref_5
    type: integer
    precision: 32
    language: !<!Languages> 
      default:
        name: integer
        description: ''
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_1
    type: number
    precision: 32
    language: !<!Languages> 
      default:
        name: number
        description: ''
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_2
    type: number
    precision: 64
    language: !<!Languages> 
      default:
        name: number
        description: ''
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_49
    type: integer
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: integer
        description: ''
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_51
    type: integer
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 64
    language: !<!Languages> 
      default:
        name: integer
        description: ''
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_53
    type: number
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 32
    language: !<!Languages> 
      default:
        name: number
        description: ''
    protocol: !<!Protocols> {}
  - !<!NumberSchema> &ref_55
    type: number
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    precision: 64
    language: !<!Languages> 
      default:
        name: number
        description: ''
    protocol: !<!Protocols> {}
  strings:
  - !<!StringSchema> &ref_3
    type: string
    language: !<!Languages> 
      default:
        name: string
        description: simple string
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_4
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: Error-message
        description: ''
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_10
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: string
        description: ''
    protocol: !<!Protocols> {}
  - !<!StringSchema> &ref_9
    type: string
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: get-0-itemsItem
        description: ''
    protocol: !<!Protocols> {}
  sealedChoices:
  - !<!SealedChoiceSchema> &ref_28
    choices:
    - !<!ChoiceValue> 
      value: red color
      language:
        default:
          name: red color
          description: ''
    - !<!ChoiceValue> 
      value: green color
      language:
        default:
          name: green color
          description: ''
    - !<!ChoiceValue> 
      value: blue color
      language:
        default:
          name: blue color
          description: ''
    type: sealed-choice
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    choiceType: *ref_3
    language: !<!Languages> 
      default:
        name: UriColor
        description: ''
    protocol: !<!Protocols> {}
  constants:
  - !<!ConstantSchema> &ref_11
    type: constant
    value: !<!ConstantValue> 
      value: true
    valueType: *ref_0
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_14
    type: constant
    value: !<!ConstantValue> 
      value: false
    valueType: *ref_0
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_15
    type: constant
    value: !<!ConstantValue> 
      value: 1000000
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_16
    type: constant
    value: !<!ConstantValue> 
      value: -1000000
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_17
    type: constant
    value: !<!ConstantValue> 
      value: 10000000000
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_18
    type: constant
    value: !<!ConstantValue> 
      value: -10000000000
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_19
    type: constant
    value: !<!ConstantValue> 
      value: 103400000000000000000
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_20
    type: constant
    value: !<!ConstantValue> 
      value: -1.034e-20
    valueType: *ref_1
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_21
    type: constant
    value: !<!ConstantValue> 
      value: 9999999.999
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_22
    type: constant
    value: !<!ConstantValue> 
      value: -9999999.999
    valueType: *ref_2
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_23
    type: constant
    value: !<!ConstantValue> 
      value: 啊齄丂狛狜隣郎隣兀﨩
    valueType: *ref_3
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_24
    type: constant
    value: !<!ConstantValue> 
      value: 'begin!*''();:@ &=+$,/?#[]end'
    valueType: *ref_3
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_25
    type: constant
    value: !<!ConstantValue> 
      value: 'begin!*''();:@&=+$,end'
    valueType: *ref_3
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_26
    type: constant
    value: !<!ConstantValue> 
      value: ''
    valueType: *ref_3
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_33
    type: constant
    value: !<!ConstantValue> 
      value: ''
    valueType: !<!ByteArraySchema> &ref_6
      type: byte-array
      format: byte
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_35
    type: constant
    value: !<!ConstantValue> 
      value: '2012-01-01'
    valueType: !<!DateSchema> &ref_7
      type: date
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  - !<!ConstantSchema> &ref_38
    type: constant
    value: !<!ConstantValue> 
      value: '2012-01-01T01:01:01Z'
    valueType: !<!DateTimeSchema> &ref_8
      type: date-time
      format: date-time
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
  byteArrays:
  - !<!ByteArraySchema> &ref_31
    type: byte-array
    format: byte
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·sn681j·paths-byte-multibyte-bytepath·get·parameters·0·schema
        description: ''
    protocol: !<!Protocols> {}
  - *ref_6
  - !<!ByteArraySchema> &ref_41
    type: byte-array
    format: base64url
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: paths·3ys2i0·paths-string-bg9yzw0-base64urlpath·get·parameters·0·schema
        description: ''
    protocol: !<!Protocols> {}
  dateTimes:
  - *ref_8
  - !<!DateTimeSchema> &ref_39
    type: date-time
    format: date-time
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: date-time
        description: ''
    protocol: !<!Protocols> {}
  dates:
  - *ref_7
  - !<!DateSchema> &ref_36
    type: date
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: date
        description: ''
    protocol: !<!Protocols> {}
  unixtimes:
  - !<!UnixTimeSchema> &ref_45
    type: unixtime
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    language: !<!Languages> 
      default:
        name: unixtime
        description: ''
    protocol: !<!Protocols> {}
  objects:
  - !<!ObjectSchema> &ref_12
    type: object
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    contexts:
    - output
    knownMediaTypes:
    - json
    properties:
    - !<!Property> 
      schema: *ref_5
      serializedName: status
      language: !<!Languages> 
        default:
          name: status
          description: ''
      protocol: !<!Protocols> {}
    - !<!Property> 
      schema: *ref_4
      serializedName: message
      language: !<!Languages> 
        default:
          name: message
          description: ''
      protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Error
        description: ''
        namespace: Api100
    protocol: !<!Protocols> {}
  arrays:
  - !<!ArraySchema> &ref_43
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_9
    language: !<!Languages> 
      default:
        name: paths·15pc9hp·paths-array-arraypath1-2cbegin-21-2a-27-28-29-3b-3a-40-20-26-3d-2b-24-2c-2f-3f-23-5b-5dend-2c-2c-arraypath·get·parameters·0·schema
        description: ''
    protocol: !<!Protocols> {}
  - !<!ArraySchema> &ref_64
    type: array
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    elementType: *ref_10
    language: !<!Languages> 
      default:
        name: paths·udmgc4·queries-array-csv-string-valid·get·parameters·0·schema
        description: ''
    protocol: !<!Protocols> {}
globalParameters:
- !<!Parameter> &ref_75
  schema: *ref_10
  implementation: Client
  required: true
  extensions:
    x-ms-priority: 0
  language: !<!Languages> 
    default:
      name: globalStringPath
      description: A string value 'globalItemStringPath' that appears in the path
      serializedName: globalStringPath
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: path
- !<!Parameter> &ref_76
  schema: *ref_10
  implementation: Client
  extensions:
    x-ms-priority: 1
  language: !<!Languages> 
    default:
      name: globalStringQuery
      description: should contain value null
      serializedName: globalStringQuery
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: query
- !<!Parameter> &ref_13
  schema: *ref_3
  clientDefaultValue: 'http://localhost:3000'
  implementation: Client
  required: true
  extensions:
    x-ms-skip-url-encoding: true
  language: !<!Languages> 
    default:
      name: $host
      description: server parameter
      serializedName: $host
  protocol: !<!Protocols> 
    http: !<!HttpParameter> 
      in: uri
operationGroups:
- !<!OperationGroup> 
  $key: paths
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_11
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: boolPath
          description: true boolean value
          serializedName: boolPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/bool/true/{boolPath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getBooleanTrue
        description: Get true Boolean value on path
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_14
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: boolPath
          description: false boolean value
          serializedName: boolPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/bool/false/{boolPath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getBooleanFalse
        description: Get false Boolean value on path
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_15
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: intPath
          description: '''1000000'' integer value'
          serializedName: intPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/int/1000000/{intPath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getIntOneMillion
        description: Get '1000000' integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_16
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: intPath
          description: '''-1000000'' integer value'
          serializedName: intPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/int/-1000000/{intPath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getIntNegativeOneMillion
        description: Get '-1000000' integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_17
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: longPath
          description: '''10000000000'' 64 bit integer value'
          serializedName: longPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/long/10000000000/{longPath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getTenBillion
        description: Get '10000000000' 64 bit integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_18
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: longPath
          description: '''-10000000000'' 64 bit integer value'
          serializedName: longPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/long/-10000000000/{longPath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getNegativeTenBillion
        description: Get '-10000000000' 64 bit integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_19
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: floatPath
          description: '''1.034E+20''numeric value'
          serializedName: floatPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/float/1.034E+20/{floatPath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: floatScientificPositive
        description: Get '1.034E+20' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_20
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: floatPath
          description: '''-1.034E-20''numeric value'
          serializedName: floatPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/float/-1.034E-20/{floatPath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: floatScientificNegative
        description: Get '-1.034E-20' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_21
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: doublePath
          description: '''9999999.999''numeric value'
          serializedName: doublePath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/double/9999999.999/{doublePath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: doubleDecimalPositive
        description: Get '9999999.999' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_22
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: doublePath
          description: '''-9999999.999''numeric value'
          serializedName: doublePath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/double/-9999999.999/{doublePath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: doubleDecimalNegative
        description: Get '-9999999.999' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_23
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: stringPath
          description: '''啊齄丂狛狜隣郎隣兀﨩''multi-byte string value'
          serializedName: stringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/string/unicode/{stringPath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringUnicode
        description: Get '啊齄丂狛狜隣郎隣兀﨩' multi-byte string value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_24
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: stringPath
          description: '''begin!*''();:@ &=+$,/?#[]end'' url encoded string value'
          serializedName: stringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/string/begin%21%2A%27%28%29%3B%3A%40%20%26%3D%2B%24%2C%2F%3F%23%5B%5Dend/{stringPath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringUrlEncoded
        description: 'Get ''begin!*''();:@ &=+$,/?#[]end'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_25
      implementation: Method
      required: true
      extensions:
        x-ms-skip-url-encoding: true
      language: !<!Languages> 
        default:
          name: stringPath
          description: '''begin!*''();:@&=+$,end'' url encoded string value'
          serializedName: stringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/string/begin!*''();:@&=+$,end/{stringPath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringUrlNonEncoded
        description: 'Get ''begin!*''();:@&=+$,end'
        summary: 'https://tools.ietf.org/html/rfc3986#appendix-A ''path'' accept any ''pchar'' not encoded'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_26
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: stringPath
          description: ''''' string value'
          serializedName: stringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/string/empty/{stringPath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringEmpty
        description: Get ''
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_27
      schema: *ref_10
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: stringPath
          description: null string value
          serializedName: stringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/string/null/{stringPath}'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_27
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '400'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringNull
        description: Get null (should throw)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_29
      schema: *ref_28
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: enumPath
          description: send the value green
          serializedName: enumPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/enum/green%20color/{enumPath}'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_29
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: enumValid
        description: Get using uri with 'green color' in path parameter
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_30
      schema: *ref_28
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: enumPath
          description: send the value green
          serializedName: enumPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/string/null/{enumPath}'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_30
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '400'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: enumNull
        description: Get null (should throw on the client before the request is sent on wire)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_32
      schema: *ref_31
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: bytePath
          description: '''啊齄丂狛狜隣郎隣兀﨩'' multibyte value as utf-8 encoded byte array'
          serializedName: bytePath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/byte/multibyte/{bytePath}'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_32
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: byteMultiByte
        description: Get '啊齄丂狛狜隣郎隣兀﨩' multibyte value as utf-8 encoded byte array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_33
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: bytePath
          description: ''''' as byte array'
          serializedName: bytePath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/byte/empty/{bytePath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: byteEmpty
        description: Get '' as byte array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_34
      schema: *ref_31
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: bytePath
          description: '''啊齄丂狛狜隣郎隣兀﨩'' multibyte value as utf-8 encoded byte array'
          serializedName: bytePath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/byte/null/{bytePath}'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_34
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '400'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: byteNull
        description: Get null as byte array (should throw)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_35
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: datePath
          description: '''2012-01-01'' as date'
          serializedName: datePath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/date/2012-01-01/{datePath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateValid
        description: Get '2012-01-01' as date
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_37
      schema: *ref_36
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: datePath
          description: null as date (should throw)
          serializedName: datePath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/date/null/{datePath}'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_37
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '400'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateNull
        description: 'Get null as date - this should throw or be unusable on the client side, depending on date representation'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_38
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: dateTimePath
          description: '''2012-01-01T01:01:01Z'' as date-time'
          serializedName: dateTimePath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/datetime/2012-01-01T01%3A01%3A01Z/{dateTimePath}'
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateTimeValid
        description: 'Get ''2012-01-01T01:01:01Z'' as date-time'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_40
      schema: *ref_39
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: dateTimePath
          description: null as date-time
          serializedName: dateTimePath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/datetime/null/{dateTimePath}'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_40
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '400'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateTimeNull
        description: 'Get null as date-time, should be disallowed or throw depending on representation of date-time'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_42
      schema: *ref_41
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: base64UrlPath
          description: base64url encoded value
          serializedName: base64UrlPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/string/bG9yZW0/{base64UrlPath}'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_42
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: base64Url
        description: Get 'lorem' encoded value as 'bG9yZW0' (base64url)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_44
      schema: *ref_43
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: arrayPath
          description: 'an array of string [''ArrayPath1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
          serializedName: arrayPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
          style: simple
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/array/ArrayPath1%2cbegin%21%2A%27%28%29%3B%3A%40%20%26%3D%2B%24%2C%2F%3F%23%5B%5Dend%2c%2c/{arrayPath}'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_44
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayCsvInPath
        description: 'Get an array of string [''ArrayPath1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_46
      schema: *ref_45
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: unixTimeUrlPath
          description: Unix time encoded value
          serializedName: unixTimeUrlPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/paths/int/1460505600/{unixTimeUrlPath}'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_46
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: unixTimeUrl
        description: Get the date 2016-04-13 encoded value as '1460505600' (Unix time)
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: paths
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: queries
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_11
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: boolQuery
          description: true boolean value
          serializedName: boolQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/bool/true
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getBooleanTrue
        description: Get true Boolean value on path
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_14
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: boolQuery
          description: false boolean value
          serializedName: boolQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/bool/false
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getBooleanFalse
        description: Get false Boolean value on path
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_48
      schema: *ref_47
      implementation: Method
      language: !<!Languages> 
        default:
          name: boolQuery
          description: null boolean value
          serializedName: boolQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/bool/null
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_48
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getBooleanNull
        description: Get null Boolean value on query (query string should be absent)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_15
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: intQuery
          description: '''1000000'' integer value'
          serializedName: intQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/int/1000000
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getIntOneMillion
        description: Get '1000000' integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_16
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: intQuery
          description: '''-1000000'' integer value'
          serializedName: intQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/int/-1000000
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getIntNegativeOneMillion
        description: Get '-1000000' integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_50
      schema: *ref_49
      implementation: Method
      language: !<!Languages> 
        default:
          name: intQuery
          description: null integer value
          serializedName: intQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/int/null
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_50
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getIntNull
        description: Get null integer value (no query parameter)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_17
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: longQuery
          description: '''10000000000'' 64 bit integer value'
          serializedName: longQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/long/10000000000
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getTenBillion
        description: Get '10000000000' 64 bit integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_18
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: longQuery
          description: '''-10000000000'' 64 bit integer value'
          serializedName: longQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/long/-10000000000
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getNegativeTenBillion
        description: Get '-10000000000' 64 bit integer value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_52
      schema: *ref_51
      implementation: Method
      language: !<!Languages> 
        default:
          name: longQuery
          description: null 64 bit integer value
          serializedName: longQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/long/null
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_52
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getLongNull
        description: Get 'null 64 bit integer value (no query param in uri)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_19
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: floatQuery
          description: '''1.034E+20''numeric value'
          serializedName: floatQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/float/1.034E+20
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: floatScientificPositive
        description: Get '1.034E+20' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_20
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: floatQuery
          description: '''-1.034E-20''numeric value'
          serializedName: floatQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/float/-1.034E-20
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: floatScientificNegative
        description: Get '-1.034E-20' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_54
      schema: *ref_53
      implementation: Method
      language: !<!Languages> 
        default:
          name: floatQuery
          description: null numeric value
          serializedName: floatQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/float/null
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_54
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: floatNull
        description: Get null numeric value (no query parameter)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_21
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: doubleQuery
          description: '''9999999.999''numeric value'
          serializedName: doubleQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/double/9999999.999
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: doubleDecimalPositive
        description: Get '9999999.999' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_22
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: doubleQuery
          description: '''-9999999.999''numeric value'
          serializedName: doubleQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/double/-9999999.999
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: doubleDecimalNegative
        description: Get '-9999999.999' numeric value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_56
      schema: *ref_55
      implementation: Method
      language: !<!Languages> 
        default:
          name: doubleQuery
          description: null numeric value
          serializedName: doubleQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/double/null
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_56
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: doubleNull
        description: Get null numeric value (no query parameter)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_23
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: stringQuery
          description: '''啊齄丂狛狜隣郎隣兀﨩''multi-byte string value'
          serializedName: stringQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/string/unicode/
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringUnicode
        description: Get '啊齄丂狛狜隣郎隣兀﨩' multi-byte string value
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_24
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: stringQuery
          description: '''begin!*''();:@ &=+$,/?#[]end'' url encoded string value'
          serializedName: stringQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/string/begin%21%2A%27%28%29%3B%3A%40%20%26%3D%2B%24%2C%2F%3F%23%5B%5Dend
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringUrlEncoded
        description: 'Get ''begin!*''();:@ &=+$,/?#[]end'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_26
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: stringQuery
          description: ''''' string value'
          serializedName: stringQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/string/empty
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringEmpty
        description: Get ''
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_57
      schema: *ref_10
      implementation: Method
      language: !<!Languages> 
        default:
          name: stringQuery
          description: null string value
          serializedName: stringQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/string/null
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_57
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: stringNull
        description: Get null (no query parameter in url)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_58
      schema: *ref_28
      implementation: Method
      language: !<!Languages> 
        default:
          name: enumQuery
          description: '''green color'' enum value'
          serializedName: enumQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/enum/green%20color
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_58
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: enumValid
        description: Get using uri with query parameter 'green color'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_59
      schema: *ref_28
      implementation: Method
      language: !<!Languages> 
        default:
          name: enumQuery
          description: '''green color'' enum value'
          serializedName: enumQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/enum/null
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_59
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: enumNull
        description: Get null (no query parameter in url)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_60
      schema: *ref_31
      implementation: Method
      language: !<!Languages> 
        default:
          name: byteQuery
          description: '''啊齄丂狛狜隣郎隣兀﨩'' multibyte value as utf-8 encoded byte array'
          serializedName: byteQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/byte/multibyte
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_60
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: byteMultiByte
        description: Get '啊齄丂狛狜隣郎隣兀﨩' multibyte value as utf-8 encoded byte array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_33
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: byteQuery
          description: ''''' as byte array'
          serializedName: byteQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/byte/empty
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: byteEmpty
        description: Get '' as byte array
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_61
      schema: *ref_31
      implementation: Method
      language: !<!Languages> 
        default:
          name: byteQuery
          description: '''啊齄丂狛狜隣郎隣兀﨩'' multibyte value as utf-8 encoded byte array'
          serializedName: byteQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/byte/null
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_61
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: byteNull
        description: Get null as byte array (no query parameters in uri)
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_35
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: dateQuery
          description: '''2012-01-01'' as date'
          serializedName: dateQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/date/2012-01-01
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateValid
        description: Get '2012-01-01' as date
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_62
      schema: *ref_36
      implementation: Method
      language: !<!Languages> 
        default:
          name: dateQuery
          description: null as date (no query parameters in uri)
          serializedName: dateQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/date/null
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_62
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateNull
        description: Get null as date - this should result in no query parameters in uri
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> 
      schema: *ref_38
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: dateTimeQuery
          description: '''2012-01-01T01:01:01Z'' as date-time'
          serializedName: dateTimeQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/datetime/2012-01-01T01%3A01%3A01Z
          method: get
          uri: '{$host}'
    signatureParameters: []
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateTimeValid
        description: 'Get ''2012-01-01T01:01:01Z'' as date-time'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_63
      schema: *ref_39
      implementation: Method
      language: !<!Languages> 
        default:
          name: dateTimeQuery
          description: null as date-time (no query parameters)
          serializedName: dateTimeQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/datetime/null
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_63
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: DateTimeNull
        description: 'Get null as date-time, should result in no query parameters in uri'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_65
      schema: *ref_64
      implementation: Method
      language: !<!Languages> 
        default:
          name: arrayQuery
          description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
          serializedName: arrayQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
          style: form
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/array/csv/string/valid
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_65
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayStringCsvValid
        description: 'Get an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_66
      schema: *ref_64
      implementation: Method
      language: !<!Languages> 
        default:
          name: arrayQuery
          description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
          serializedName: arrayQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
          style: form
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/array/csv/string/null
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_66
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayStringCsvNull
        description: Get a null array of string using the csv-array format
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_67
      schema: *ref_64
      implementation: Method
      language: !<!Languages> 
        default:
          name: arrayQuery
          description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the csv-array format'
          serializedName: arrayQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
          style: form
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/array/csv/string/empty
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_67
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayStringCsvEmpty
        description: 'Get an empty array [] of string using the csv-array format'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_68
      schema: *ref_64
      implementation: Method
      language: !<!Languages> 
        default:
          name: arrayQuery
          description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the ssv-array format'
          serializedName: arrayQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
          style: spaceDelimited
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/array/ssv/string/valid
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_68
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayStringSsvValid
        description: 'Get an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the ssv-array format'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_69
      schema: *ref_64
      implementation: Method
      language: !<!Languages> 
        default:
          name: arrayQuery
          description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the tsv-array format'
          serializedName: arrayQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
          style: tabDelimited
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/array/tsv/string/valid
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_69
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayStringTsvValid
        description: 'Get an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the tsv-array format'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_70
      schema: *ref_64
      implementation: Method
      language: !<!Languages> 
        default:
          name: arrayQuery
          description: 'an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the pipes-array format'
          serializedName: arrayQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
          style: pipeDelimited
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: /queries/array/pipes/string/valid
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_70
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: ArrayStringPipesValid
        description: 'Get an array of string [''ArrayQuery1'', ''begin!*''();:@ &=+$,/?#[]end'' , null, ''''] using the pipes-array format'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: queries
      description: ''
  protocol: !<!Protocols> {}
- !<!OperationGroup> 
  $key: pathItems
  operations:
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_71
      schema: *ref_10
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: pathItemStringPath
          description: A string value 'pathItemStringPath' that appears in the path
          serializedName: pathItemStringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    - !<!Parameter> &ref_72
      schema: *ref_10
      implementation: Method
      language: !<!Languages> 
        default:
          name: pathItemStringQuery
          description: A string value 'pathItemStringQuery' that appears as a query parameter
          serializedName: pathItemStringQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    - *ref_75
    - *ref_76
    - !<!Parameter> &ref_73
      schema: *ref_10
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: localStringPath
          description: should contain value 'localStringPath'
          serializedName: localStringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    - !<!Parameter> &ref_74
      schema: *ref_10
      implementation: Method
      language: !<!Languages> 
        default:
          name: localStringQuery
          description: should contain value 'localStringQuery'
          serializedName: localStringQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/globalStringQuery/pathItemStringQuery/localStringQuery'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_71
    - *ref_72
    - *ref_73
    - *ref_74
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getAllWithValues
        description: >-
          send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath', localStringPath='localStringPath', globalStringQuery='globalStringQuery', pathItemStringQuery='pathItemStringQuery',
          localStringQuery='localStringQuery'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_77
      schema: *ref_10
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: pathItemStringPath
          description: A string value 'pathItemStringPath' that appears in the path
          serializedName: pathItemStringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    - !<!Parameter> &ref_78
      schema: *ref_10
      implementation: Method
      language: !<!Languages> 
        default:
          name: pathItemStringQuery
          description: A string value 'pathItemStringQuery' that appears as a query parameter
          serializedName: pathItemStringQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    - *ref_75
    - *ref_76
    - !<!Parameter> &ref_79
      schema: *ref_10
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: localStringPath
          description: should contain value 'localStringPath'
          serializedName: localStringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    - !<!Parameter> &ref_80
      schema: *ref_10
      implementation: Method
      language: !<!Languages> 
        default:
          name: localStringQuery
          description: should contain value 'localStringQuery'
          serializedName: localStringQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/null/pathItemStringQuery/localStringQuery'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_77
    - *ref_78
    - *ref_79
    - *ref_80
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getGlobalQueryNull
        description: 'send globalStringPath=''globalStringPath'', pathItemStringPath=''pathItemStringPath'', localStringPath=''localStringPath'', globalStringQuery=null, pathItemStringQuery=''pathItemStringQuery'', localStringQuery=''localStringQuery'''
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_81
      schema: *ref_10
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: pathItemStringPath
          description: A string value 'pathItemStringPath' that appears in the path
          serializedName: pathItemStringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    - !<!Parameter> &ref_82
      schema: *ref_10
      implementation: Method
      language: !<!Languages> 
        default:
          name: pathItemStringQuery
          description: A string value 'pathItemStringQuery' that appears as a query parameter
          serializedName: pathItemStringQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    - *ref_75
    - *ref_76
    - !<!Parameter> &ref_83
      schema: *ref_10
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: localStringPath
          description: should contain value 'localStringPath'
          serializedName: localStringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    - !<!Parameter> &ref_84
      schema: *ref_10
      implementation: Method
      language: !<!Languages> 
        default:
          name: localStringQuery
          description: should contain value 'localStringQuery'
          serializedName: localStringQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/null/pathItemStringQuery/null'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_81
    - *ref_82
    - *ref_83
    - *ref_84
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getGlobalAndLocalQueryNull
        description: 'send globalStringPath=globalStringPath, pathItemStringPath=''pathItemStringPath'', localStringPath=''localStringPath'', globalStringQuery=null, pathItemStringQuery=''pathItemStringQuery'', localStringQuery=null'
    protocol: !<!Protocols> {}
  - !<!Operation> 
    apiVersions:
    - !<!ApiVersion> 
      version: 1.0.0
    parameters:
    - *ref_13
    - !<!Parameter> &ref_85
      schema: *ref_10
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: pathItemStringPath
          description: A string value 'pathItemStringPath' that appears in the path
          serializedName: pathItemStringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    - !<!Parameter> &ref_86
      schema: *ref_10
      implementation: Method
      language: !<!Languages> 
        default:
          name: pathItemStringQuery
          description: A string value 'pathItemStringQuery' that appears as a query parameter
          serializedName: pathItemStringQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    - *ref_75
    - *ref_76
    - !<!Parameter> &ref_87
      schema: *ref_10
      implementation: Method
      required: true
      language: !<!Languages> 
        default:
          name: localStringPath
          description: should contain value 'localStringPath'
          serializedName: localStringPath
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: path
    - !<!Parameter> &ref_88
      schema: *ref_10
      implementation: Method
      language: !<!Languages> 
        default:
          name: localStringQuery
          description: should contain value 'localStringQuery'
          serializedName: localStringQuery
      protocol: !<!Protocols> 
        http: !<!HttpParameter> 
          in: query
    requests:
    - !<!Request> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http:
          path: '/pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/globalStringQuery/null/null'
          method: get
          uri: '{$host}'
    signatureParameters:
    - *ref_85
    - *ref_86
    - *ref_87
    - *ref_88
    responses:
    - !<!Response> 
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          statusCodes:
          - '200'
    exceptions:
    - !<!SchemaResponse> 
      schema: *ref_12
      language: !<!Languages> 
        default:
          name: ''
          description: ''
      protocol: !<!Protocols> 
        http: !<!HttpResponse> 
          knownMediaType: json
          mediaTypes:
          - application/json
          statusCodes:
          - default
    language: !<!Languages> 
      default:
        name: getLocalPathItemQueryNull
        description: 'send globalStringPath=''globalStringPath'', pathItemStringPath=''pathItemStringPath'', localStringPath=''localStringPath'', globalStringQuery=''globalStringQuery'', pathItemStringQuery=null, localStringQuery=null'
    protocol: !<!Protocols> {}
  language: !<!Languages> 
    default:
      name: pathItems
      description: ''
  protocol: !<!Protocols> {}
language: !<!Languages> 
  default:
    name: ''
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
