{
 "openapi": "3.0.0",
 "info": {
  "x-ms-code-generation-settings": {
   "internalConstructors": true,
   "name": "DataLakeStorageClient"
  },
  "title": "Azure Data Lake Storage REST API",
  "description": "Azure Data Lake Storage provides storage for Hadoop and other big data workloads.",
  "x-ms-metadata": {
   "apiVersions": [
    "2019-10-31"
   ]
  },
  "version": "2019-10-31"
 },
 "tags": [
  {
   "name": "Account Operations"
  },
  {
   "name": "Filesystem Operations"
  },
  {
   "name": "File and Directory Operations"
  }
 ],
 "components": {
  "parameters": {
   "parameters:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "Version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/Version"
     ]
    },
    "name": "x-ms-version",
    "in": "header",
    "description": "Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.",
    "x-ms-parameter-location": "client",
    "schema": {
     "$ref": "#/components/schemas/schemas:0"
    },
    "required": false
   },
   "parameters:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "accountName",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/accountName"
     ]
    },
    "name": "accountName",
    "in": "path",
    "description": "The Azure Storage account name.",
    "x-ms-parameter-location": "client",
    "x-ms-skip-url-encoding": true,
    "schema": {
     "$ref": "#/components/schemas/schemas:1"
    },
    "required": true
   },
   "parameters:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "dnsSuffix",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/dnsSuffix"
     ]
    },
    "name": "dnsSuffix",
    "in": "path",
    "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
    "x-ms-parameter-location": "client",
    "x-ms-skip-url-encoding": true,
    "schema": {
     "$ref": "#/components/schemas/schemas:2"
    },
    "required": true
   },
   "parameters:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·get·parameters·0"
     ]
    },
    "name": "resource",
    "in": "query",
    "description": "The value must be \"account\" for all account operations.",
    "schema": {
     "enum": [
      "account"
     ],
     "x-ms-enum": {
      "name": "AccountResourceType",
      "modelAsString": false
     },
     "type": "string"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·1",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·get·parameters·1"
     ]
    },
    "name": "prefix",
    "in": "query",
    "description": "Filters results to filesystems within the specified prefix.",
    "schema": {
     "$ref": "#/components/schemas/schemas:29"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·get·parameters·2"
     ]
    },
    "name": "continuation",
    "in": "query",
    "description": "The number of filesystems returned with each invocation is limited. If the number of filesystems to be returned exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is  returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the filesystems.",
    "schema": {
     "$ref": "#/components/schemas/schemas:30"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·3",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·get·parameters·3"
     ]
    },
    "name": "maxResults",
    "in": "query",
    "description": "An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items.",
    "schema": {
     "$ref": "#/components/schemas/schemas:31"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·4",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·get·parameters·4"
     ]
    },
    "name": "x-ms-client-request-id",
    "in": "header",
    "description": "A UUID recorded in the analytics logs for troubleshooting and correlation.",
    "x-ms-client-request-id": true,
    "schema": {
     "$ref": "#/components/schemas/schemas:32"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·get·parameters·5"
     ]
    },
    "name": "timeout",
    "in": "query",
    "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.",
    "schema": {
     "$ref": "#/components/schemas/schemas:33"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·6",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·get·parameters·6"
     ]
    },
    "name": "x-ms-date",
    "in": "header",
    "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.",
    "schema": {
     "$ref": "#/components/schemas/schemas:34"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·parameters·0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem·put·parameters·0"
     ]
    },
    "name": "x-ms-properties",
    "in": "header",
    "description": "User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.",
    "schema": {
     "$ref": "#/components/schemas/schemas:41"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·parameters·0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem·patch·parameters·0"
     ]
    },
    "name": "x-ms-properties",
    "in": "header",
    "description": "Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties.",
    "schema": {
     "$ref": "#/components/schemas/schemas:47"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·parameters·1",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem·patch·parameters·1"
     ]
    },
    "name": "If-Modified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:48"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·parameters·2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem·patch·parameters·2"
     ]
    },
    "name": "If-Unmodified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:49"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·parameters·0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem·get·parameters·0"
     ]
    },
    "name": "directory",
    "in": "query",
    "description": "Filters results to paths within the specified directory. An error occurs if the directory does not exist.",
    "schema": {
     "$ref": "#/components/schemas/schemas:56"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·parameters·1",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem·get·parameters·1"
     ]
    },
    "name": "recursive",
    "in": "query",
    "description": "If \"true\", all paths are listed; otherwise, only paths at the root of the filesystem are listed.  If \"directory\" is specified, the list will only include paths that share the same root.",
    "schema": {
     "$ref": "#/components/schemas/schemas:57"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·parameters·2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem·get·parameters·2"
     ]
    },
    "name": "continuation",
    "in": "query",
    "description": "The number of paths returned with each invocation is limited. If the number of paths to be returned exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is  returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the paths.",
    "schema": {
     "$ref": "#/components/schemas/schemas:58"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·parameters·3",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem·get·parameters·3"
     ]
    },
    "name": "maxResults",
    "in": "query",
    "description": "An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items.",
    "schema": {
     "$ref": "#/components/schemas/schemas:59"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·parameters·4",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem·get·parameters·4"
     ]
    },
    "name": "upn",
    "in": "query",
    "description": "Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the owner and group fields of each list entry will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names.",
    "schema": {
     "$ref": "#/components/schemas/schemas:60"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·delete·parameters·0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem·delete·parameters·0"
     ]
    },
    "name": "If-Modified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:71"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·delete·parameters·1",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem·delete·parameters·1"
     ]
    },
    "name": "If-Unmodified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:72"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·0"
     ]
    },
    "name": "resource",
    "in": "query",
    "description": "Required only for Create File and Create Directory. The value must be \"file\" or \"directory\".",
    "schema": {
     "$ref": "#/components/schemas/schemas:80"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·1",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·1"
     ]
    },
    "name": "continuation",
    "in": "query",
    "description": "Optional.  When renaming a directory, the number of paths that are renamed with each invocation is limited.  If the number of paths to be renamed exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the rename operation to continue renaming the directory.",
    "schema": {
     "$ref": "#/components/schemas/schemas:81"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·2"
     ]
    },
    "name": "mode",
    "in": "query",
    "description": "Optional. Valid only when namespace is enabled. This parameter determines the behavior of the rename operation. The value must be \"legacy\" or \"posix\", and the default value will be \"posix\". ",
    "schema": {
     "$ref": "#/components/schemas/schemas:82"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·3",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·3"
     ]
    },
    "name": "Cache-Control",
    "in": "header",
    "description": "Optional.  The service stores this value and includes it in the \"Cache-Control\" response header for \"Read File\" operations for \"Read File\" operations.",
    "schema": {
     "$ref": "#/components/schemas/schemas:83"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:25": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·4",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·4"
     ]
    },
    "name": "Content-Encoding",
    "in": "header",
    "description": "Optional.  Specifies which content encodings have been applied to the file. This value is returned to the client when the \"Read File\" operation is performed.",
    "schema": {
     "$ref": "#/components/schemas/schemas:84"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:26": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·5"
     ]
    },
    "name": "Content-Language",
    "in": "header",
    "description": "Optional.  Specifies the natural language used by the intended audience for the file.",
    "schema": {
     "$ref": "#/components/schemas/schemas:85"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:27": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·6",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·6"
     ]
    },
    "name": "Content-Disposition",
    "in": "header",
    "description": "Optional.  The service stores this value and includes it in the \"Content-Disposition\" response header for \"Read File\" operations.",
    "schema": {
     "$ref": "#/components/schemas/schemas:86"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:28": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·7",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·7"
     ]
    },
    "name": "x-ms-cache-control",
    "in": "header",
    "description": "Optional.  The service stores this value and includes it in the \"Cache-Control\" response header for \"Read File\" operations.",
    "schema": {
     "$ref": "#/components/schemas/schemas:87"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:29": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·8",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·8"
     ]
    },
    "name": "x-ms-content-type",
    "in": "header",
    "description": "Optional.  The service stores this value and includes it in the \"Content-Type\" response header for \"Read File\" operations.",
    "schema": {
     "$ref": "#/components/schemas/schemas:88"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:30": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·9",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·9"
     ]
    },
    "name": "x-ms-content-encoding",
    "in": "header",
    "description": "Optional.  The service stores this value and includes it in the \"Content-Encoding\" response header for \"Read File\" operations.",
    "schema": {
     "$ref": "#/components/schemas/schemas:89"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:31": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·10",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·10"
     ]
    },
    "name": "x-ms-content-language",
    "in": "header",
    "description": "Optional.  The service stores this value and includes it in the \"Content-Language\" response header for \"Read File\" operations.",
    "schema": {
     "$ref": "#/components/schemas/schemas:90"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:32": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·11",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·11"
     ]
    },
    "name": "x-ms-content-disposition",
    "in": "header",
    "description": "Optional.  The service stores this value and includes it in the \"Content-Disposition\" response header for \"Read File\" operations.",
    "schema": {
     "$ref": "#/components/schemas/schemas:91"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:33": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·12",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·12"
     ]
    },
    "name": "x-ms-rename-source",
    "in": "header",
    "description": "An optional file or directory to be renamed.  The value must have the following format: \"/{filesystem}/{path}\".  If \"x-ms-properties\" is specified, the properties will overwrite the existing properties; otherwise, the existing properties will be preserved. This value must be a URL percent-encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.",
    "schema": {
     "$ref": "#/components/schemas/schemas:92"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:34": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·13",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·13"
     ]
    },
    "name": "x-ms-lease-id",
    "in": "header",
    "description": "Optional.  A lease ID for the path specified in the URI.  The path to be overwritten must have an active lease and the lease ID must match.",
    "schema": {
     "$ref": "#/components/schemas/schemas:93"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:35": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·14",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·14"
     ]
    },
    "name": "x-ms-source-lease-id",
    "in": "header",
    "description": "Optional for rename operations.  A lease ID for the source path.  The source path must have an active lease and the lease ID must match.",
    "schema": {
     "$ref": "#/components/schemas/schemas:94"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:36": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·15",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·15"
     ]
    },
    "name": "x-ms-properties",
    "in": "header",
    "description": "Optional.  User-defined properties to be stored with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.",
    "schema": {
     "$ref": "#/components/schemas/schemas:95"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:37": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·16",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·16"
     ]
    },
    "name": "x-ms-permissions",
    "in": "header",
    "description": "Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.",
    "schema": {
     "$ref": "#/components/schemas/schemas:96"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:38": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·17",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·17"
     ]
    },
    "name": "x-ms-umask",
    "in": "header",
    "description": "Optional and only valid if Hierarchical Namespace is enabled for the account. When creating a file or directory and the parent folder does not have a default ACL, the umask restricts the permissions of the file or directory to be created.  The resulting permission is given by p & ^u, where p is the permission and u is the umask.  For example, if p is 0777 and u is 0057, then the resulting permission is 0720.  The default permission is 0777 for a directory and 0666 for a file.  The default umask is 0027.  The umask must be specified in 4-digit octal notation (e.g. 0766).",
    "schema": {
     "$ref": "#/components/schemas/schemas:97"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:39": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·18",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·18"
     ]
    },
    "name": "If-Match",
    "in": "header",
    "description": "Optional.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:98"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:40": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·19",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·19"
     ]
    },
    "name": "If-None-Match",
    "in": "header",
    "description": "Optional.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:99"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:41": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·20",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·20"
     ]
    },
    "name": "If-Modified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:100"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:42": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·21",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·21"
     ]
    },
    "name": "If-Unmodified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:101"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:43": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·22",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·22"
     ]
    },
    "name": "x-ms-source-if-match",
    "in": "header",
    "description": "Optional.  An ETag value. Specify this header to perform the rename operation only if the source's ETag matches the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:102"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:44": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·23",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·23"
     ]
    },
    "name": "x-ms-source-if-none-match",
    "in": "header",
    "description": "Optional.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the rename operation only if the source's ETag does not match the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:103"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:45": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·24",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·24"
     ]
    },
    "name": "x-ms-source-if-modified-since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the rename operation only if the source has been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:104"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:46": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·25",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·put·parameters·25"
     ]
    },
    "name": "x-ms-source-if-unmodified-since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the rename operation only if the source has not been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:105"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:47": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·0"
     ]
    },
    "name": "action",
    "in": "query",
    "description": "The action must be \"append\" to upload data to be appended to a file, \"flush\" to flush previously uploaded data to a file, \"setProperties\" to set the properties of a file or directory, or \"setAccessControl\" to set the owner, group, permissions, or access control list for a file or directory.  Note that Hierarchical Namespace must be enabled for the account in order to use access control.  Also note that the Access Control List (ACL) includes permissions for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers are mutually exclusive.",
    "schema": {
     "$ref": "#/components/schemas/schemas:125"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:48": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·1",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·1"
     ]
    },
    "name": "position",
    "in": "query",
    "description": "This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.  It is required when uploading data to be appended to the file and when flushing previously uploaded data to the file.  The value must be the position where the data is to be appended.  Uploaded data is not immediately flushed, or written, to the file.  To flush, the previously uploaded data must be contiguous, the position parameter must be specified and equal to the length of the file after all data has been written, and there must not be a request entity body included with the request.",
    "schema": {
     "$ref": "#/components/schemas/schemas:126"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:49": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·2"
     ]
    },
    "name": "retainUncommittedData",
    "in": "query",
    "description": "Valid only for flush operations.  If \"true\", uncommitted data is retained after the flush operation completes; otherwise, the uncommitted data is deleted after the flush operation.  The default is false.  Data at offsets less than the specified position are written to the file when flush succeeds, but this optional parameter allows data after the flush position to be retained for a future flush operation.",
    "schema": {
     "$ref": "#/components/schemas/schemas:127"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:50": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·3",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·3"
     ]
    },
    "name": "close",
    "in": "query",
    "description": "Azure Storage Events allow applications to receive notifications when files change. When Azure Storage Events are enabled, a file changed event is raised. This event has a property indicating whether this is the final change to distinguish the difference between an intermediate flush to a file stream and the final close of a file stream. The close query parameter is valid only when the action is \"flush\" and change notifications are enabled. If the value of close is \"true\" and the flush operation completes successfully, the service raises a file change notification with a property indicating that this is the final update (the file stream has been closed). If \"false\" a change notification is raised indicating the file has changed. The default is false. This query parameter is set to true by the Hadoop ABFS driver to indicate that the file stream has been closed.\"",
    "schema": {
     "$ref": "#/components/schemas/schemas:128"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:51": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·4",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·4"
     ]
    },
    "name": "Content-Length",
    "in": "header",
    "description": "Required for \"Append Data\" and \"Flush Data\".  Must be 0 for \"Flush Data\".  Must be the length of the request content in bytes for \"Append Data\".",
    "schema": {
     "$ref": "#/components/schemas/schemas:129"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:52": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·5"
     ]
    },
    "name": "Content-MD5",
    "in": "header",
    "description": "Optional. An MD5 hash of the request content. This header is valid on \"Append\" and \"Flush\" operations. This hash is used to verify the integrity of the request content during transport. When this header is specified, the storage service compares the hash of the content that has arrived with this header value. If the two hashes do not match, the operation will fail with error code 400 (Bad Request). Note that this MD5 hash is not stored with the file. This header is associated with the request content, and not with the stored content of the file itself.",
    "schema": {
     "$ref": "#/components/schemas/schemas:130"
    },
    "x-ms-parameter-location": "method"
   },
   "parameters:53": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·6",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·6"
     ]
    },
    "name": "x-ms-lease-id",
    "in": "header",
    "description": "The lease ID must be specified if there is an active lease.",
    "schema": {
     "$ref": "#/components/schemas/schemas:131"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:54": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·7",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·7"
     ]
    },
    "name": "x-ms-cache-control",
    "in": "header",
    "description": "Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the \"Cache-Control\" response header for \"Read File\" operations.",
    "schema": {
     "$ref": "#/components/schemas/schemas:132"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:55": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·8",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·8"
     ]
    },
    "name": "x-ms-content-type",
    "in": "header",
    "description": "Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the \"Content-Type\" response header for \"Read File\" operations.",
    "schema": {
     "$ref": "#/components/schemas/schemas:133"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:56": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·9",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·9"
     ]
    },
    "name": "x-ms-content-disposition",
    "in": "header",
    "description": "Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the \"Content-Disposition\" response header for \"Read File\" operations.",
    "schema": {
     "$ref": "#/components/schemas/schemas:134"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:57": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·10",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·10"
     ]
    },
    "name": "x-ms-content-encoding",
    "in": "header",
    "description": "Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the \"Content-Encoding\" response header for \"Read File\" operations.",
    "schema": {
     "$ref": "#/components/schemas/schemas:135"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:58": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·11",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·11"
     ]
    },
    "name": "x-ms-content-language",
    "in": "header",
    "description": "Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the \"Content-Language\" response header for \"Read File\" operations.",
    "schema": {
     "$ref": "#/components/schemas/schemas:136"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:59": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·12",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·12"
     ]
    },
    "name": "x-ms-content-md5",
    "in": "header",
    "description": "Optional and only valid for \"Flush & Set Properties\" operations.  The service stores this value and includes it in the \"Content-Md5\" response header for \"Read & Get Properties\" operations. If this property is not specified on the request, then the property will be cleared for the file. Subsequent calls to \"Read & Get Properties\" will not return this property unless it is explicitly set on that file again.",
    "schema": {
     "$ref": "#/components/schemas/schemas:137"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:60": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·13",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·13"
     ]
    },
    "name": "x-ms-properties",
    "in": "header",
    "description": "Optional.  User-defined properties to be stored with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set. Valid only for the setProperties operation. If the file or directory exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties.",
    "schema": {
     "$ref": "#/components/schemas/schemas:138"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:61": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·14",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·14"
     ]
    },
    "name": "x-ms-owner",
    "in": "header",
    "description": "Optional and valid only for the setAccessControl operation. Sets the owner of the file or directory.",
    "schema": {
     "$ref": "#/components/schemas/schemas:139"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:62": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·15",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·15"
     ]
    },
    "name": "x-ms-group",
    "in": "header",
    "description": "Optional and valid only for the setAccessControl operation. Sets the owning group of the file or directory.",
    "schema": {
     "$ref": "#/components/schemas/schemas:140"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:63": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·16",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·16"
     ]
    },
    "name": "x-ms-permissions",
    "in": "header",
    "description": "Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported. Invalid in conjunction with x-ms-acl.",
    "schema": {
     "$ref": "#/components/schemas/schemas:141"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:64": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·17",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·17"
     ]
    },
    "name": "x-ms-acl",
    "in": "header",
    "description": "Optional and valid only for the setAccessControl operation. Sets POSIX access control rights on files and directories. The value is a comma-separated list of access control entries that fully replaces the existing access control list (ACL).  Each access control entry (ACE) consists of a scope, a type, a user or group identifier, and permissions in the format \"[scope:][type]:[id]:[permissions]\". The scope must be \"default\" to indicate the ACE belongs to the default ACL for a directory; otherwise scope is implicit and the ACE belongs to the access ACL.  There are four ACE types: \"user\" grants rights to the owner or a named user, \"group\" grants rights to the owning group or a named group, \"mask\" restricts rights granted to named users and the members of groups, and \"other\" grants rights to all users not found in any of the other entries. The user or group identifier is omitted for entries of type \"mask\" and \"other\".  The user or group identifier is also omitted for the owner and owning group.  The permission field is a 3-character sequence where the first character is 'r' to grant read access, the second character is 'w' to grant write access, and the third character is 'x' to grant execute permission.  If access is not granted, the '-' character is used to denote that the permission is denied. For example, the following ACL grants read, write, and execute rights to the file owner and john.doe@contoso, the read right to the owning group, and nothing to everyone else: \"user::rwx,user:john.doe@contoso:rwx,group::r--,other::---,mask=rwx\". Invalid in conjunction with x-ms-permissions.",
    "schema": {
     "$ref": "#/components/schemas/schemas:142"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:65": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·18",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·18"
     ]
    },
    "name": "If-Match",
    "in": "header",
    "description": "Optional for Flush Data and Set Properties, but invalid for Append Data.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:143"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:66": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·19",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·19"
     ]
    },
    "name": "If-None-Match",
    "in": "header",
    "description": "Optional for Flush Data and Set Properties, but invalid for Append Data.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:144"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:67": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·20",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·20"
     ]
    },
    "name": "If-Modified-Since",
    "in": "header",
    "description": "Optional for Flush Data and Set Properties, but invalid for Append Data. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:145"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:68": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·21",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·patch·parameters·21"
     ]
    },
    "name": "If-Unmodified-Since",
    "in": "header",
    "description": "Optional for Flush Data and Set Properties, but invalid for Append Data. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:146"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:69": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·post·parameters·0"
     ]
    },
    "name": "x-ms-lease-action",
    "in": "header",
    "description": "There are five lease actions: \"acquire\", \"break\", \"change\", \"renew\", and \"release\". Use \"acquire\" and specify the \"x-ms-proposed-lease-id\" and \"x-ms-lease-duration\" to acquire a new lease. Use \"break\" to break an existing lease. When a lease is broken, the lease break period is allowed to elapse, during which time no lease operation except break and release can be performed on the file. When a lease is successfully broken, the response indicates the interval in seconds until a new lease can be acquired. Use \"change\" and specify the current lease ID in \"x-ms-lease-id\" and the new lease ID in \"x-ms-proposed-lease-id\" to change the lease ID of an active lease. Use \"renew\" and specify the \"x-ms-lease-id\" to renew an existing lease. Use \"release\" and specify the \"x-ms-lease-id\" to release a lease.",
    "schema": {
     "$ref": "#/components/schemas/schemas:166"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:70": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·1",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·post·parameters·1"
     ]
    },
    "name": "x-ms-lease-duration",
    "in": "header",
    "description": "The lease duration is required to acquire a lease, and specifies the duration of the lease in seconds.  The lease duration must be between 15 and 60 seconds or -1 for infinite lease.",
    "schema": {
     "$ref": "#/components/schemas/schemas:167"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:71": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·post·parameters·2"
     ]
    },
    "name": "x-ms-lease-break-period",
    "in": "header",
    "description": "The lease break period duration is optional to break a lease, and  specifies the break period of the lease in seconds.  The lease break  duration must be between 0 and 60 seconds.",
    "schema": {
     "$ref": "#/components/schemas/schemas:168"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:72": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·3",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·post·parameters·3"
     ]
    },
    "name": "x-ms-lease-id",
    "in": "header",
    "description": "Required when \"x-ms-lease-action\" is \"renew\", \"change\" or \"release\". For the renew and release actions, this must match the current lease ID.",
    "schema": {
     "$ref": "#/components/schemas/schemas:169"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:73": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·4",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·post·parameters·4"
     ]
    },
    "name": "x-ms-proposed-lease-id",
    "in": "header",
    "description": "Required when \"x-ms-lease-action\" is \"acquire\" or \"change\".  A lease will be acquired with this lease ID if the operation is successful.",
    "schema": {
     "$ref": "#/components/schemas/schemas:170"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:74": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·post·parameters·5"
     ]
    },
    "name": "If-Match",
    "in": "header",
    "description": "Optional.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:171"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:75": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·6",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·post·parameters·6"
     ]
    },
    "name": "If-None-Match",
    "in": "header",
    "description": "Optional.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:172"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:76": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·7",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·post·parameters·7"
     ]
    },
    "name": "If-Modified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:173"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:77": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·8",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·post·parameters·8"
     ]
    },
    "name": "If-Unmodified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:174"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:78": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·get·parameters·0"
     ]
    },
    "name": "Range",
    "in": "header",
    "description": "The HTTP Range request header specifies one or more byte ranges of the resource to be retrieved.",
    "schema": {
     "$ref": "#/components/schemas/schemas:220"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:79": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·1",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·get·parameters·1"
     ]
    },
    "name": "x-ms-lease-id",
    "in": "header",
    "description": "Optional. If this header is specified, the operation will be performed only if both of the following conditions are met: i) the path's lease is currently active and ii) the lease ID specified in the request matches that of the path.",
    "schema": {
     "$ref": "#/components/schemas/schemas:221"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:80": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·get·parameters·2"
     ]
    },
    "name": "x-ms-range-get-content-md5",
    "in": "header",
    "description": "Optional. When this header is set to \"true\" and specified together with the Range header, the service returns the MD5 hash for the range, as long as the range is less than or equal to 4MB in size. If this header is specified without the Range header, the service returns status code 400 (Bad Request). If this header is set to true when the range exceeds 4 MB in size, the service returns status code 400 (Bad Request).",
    "schema": {
     "$ref": "#/components/schemas/schemas:222"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:81": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·3",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·get·parameters·3"
     ]
    },
    "name": "If-Match",
    "in": "header",
    "description": "Optional.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:223"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:82": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·4",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·get·parameters·4"
     ]
    },
    "name": "If-None-Match",
    "in": "header",
    "description": "Optional.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:224"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:83": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·get·parameters·5"
     ]
    },
    "name": "If-Modified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:225"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:84": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·6",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·get·parameters·6"
     ]
    },
    "name": "If-Unmodified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:226"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:85": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·head·parameters·0"
     ]
    },
    "name": "action",
    "in": "query",
    "description": "Optional. If the value is \"getStatus\" only the system defined properties for the path are returned. If the value is \"getAccessControl\" the access control list is returned in the response headers (Hierarchical Namespace must be enabled for the account), otherwise the properties are returned.",
    "schema": {
     "$ref": "#/components/schemas/schemas:250"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:86": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·1",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·head·parameters·1"
     ]
    },
    "name": "upn",
    "in": "query",
    "description": "Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names.",
    "schema": {
     "$ref": "#/components/schemas/schemas:251"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:87": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·head·parameters·2"
     ]
    },
    "name": "fsAction",
    "in": "query",
    "description": "Required only for check access action. Valid only when Hierarchical Namespace is enabled for the account. File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'",
    "schema": {
     "$ref": "#/components/schemas/schemas:252"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:88": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·3",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·head·parameters·3"
     ]
    },
    "name": "x-ms-lease-id",
    "in": "header",
    "description": "Optional. If this header is specified, the operation will be performed only if both of the following conditions are met: i) the path's lease is currently active and ii) the lease ID specified in the request matches that of the path.",
    "schema": {
     "$ref": "#/components/schemas/schemas:253"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:89": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·4",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·head·parameters·4"
     ]
    },
    "name": "If-Match",
    "in": "header",
    "description": "Optional.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:254"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:90": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·head·parameters·5"
     ]
    },
    "name": "If-None-Match",
    "in": "header",
    "description": "Optional.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:255"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:91": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·6",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·head·parameters·6"
     ]
    },
    "name": "If-Modified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:256"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:92": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·7",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·head·parameters·7"
     ]
    },
    "name": "If-Unmodified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:257"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:93": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·0",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·delete·parameters·0"
     ]
    },
    "name": "recursive",
    "in": "query",
    "description": "Required and valid only when the resource is a directory.  If \"true\", all paths beneath the directory will be deleted. If \"false\" and the directory is non-empty, an error occurs.",
    "schema": {
     "$ref": "#/components/schemas/schemas:262"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:94": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·1",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·delete·parameters·1"
     ]
    },
    "name": "continuation",
    "in": "query",
    "description": "Optional.  When deleting a directory, the number of paths that are deleted with each invocation is limited.  If the number of paths to be deleted exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the delete operation to continue deleting the directory.",
    "schema": {
     "$ref": "#/components/schemas/schemas:263"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:95": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·2",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·delete·parameters·2"
     ]
    },
    "name": "x-ms-lease-id",
    "in": "header",
    "description": "The lease ID must be specified if there is an active lease.",
    "schema": {
     "$ref": "#/components/schemas/schemas:264"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:96": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·3",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·delete·parameters·3"
     ]
    },
    "name": "If-Match",
    "in": "header",
    "description": "Optional.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:265"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:97": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·4",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·delete·parameters·4"
     ]
    },
    "name": "If-None-Match",
    "in": "header",
    "description": "Optional.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes.",
    "schema": {
     "$ref": "#/components/schemas/schemas:266"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:98": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·delete·parameters·5"
     ]
    },
    "name": "If-Modified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:267"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:99": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·6",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/parameters/paths·filesystem-path·delete·parameters·6"
     ]
    },
    "name": "If-Unmodified-Since",
    "in": "header",
    "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.",
    "schema": {
     "$ref": "#/components/schemas/schemas:268"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   }
  },
  "schemas": {
   "schemas:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "components·parameters·version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/components·parameters·version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "components·parameters·accountname·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/components·parameters·accountname·schema"
     ]
    },
    "type": "string"
   },
   "schemas:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "components·parameters·dnssuffix·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/components·parameters·dnssuffix·schema"
     ]
    },
    "default": "dfs.core.windows.net",
    "type": "string"
   },
   "schemas:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "DataLakeStorageError",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/DataLakeStorageError"
     ]
    },
    "properties": {
     "error": {
      "$ref": "#/components/schemas/schemas:4",
      "description": "The service error response object."
     }
    }
   },
   "schemas:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "DataLakeStorageError-error",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/DataLakeStorageError-error"
     ]
    },
    "description": "The service error response object.",
    "properties": {
     "code": {
      "$ref": "#/components/schemas/schemas:5",
      "description": "The service error code."
     },
     "message": {
      "$ref": "#/components/schemas/schemas:6",
      "description": "The service error message."
     }
    }
   },
   "schemas:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "DataLakeStorageError-error-code",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/DataLakeStorageError-error-code"
     ]
    },
    "description": "The service error code.",
    "type": "string"
   },
   "schemas:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "DataLakeStorageError-error-message",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/DataLakeStorageError-error-message"
     ]
    },
    "description": "The service error message.",
    "type": "string"
   },
   "schemas:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "Path",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/Path"
     ]
    },
    "properties": {
     "name": {
      "$ref": "#/components/schemas/schemas:8"
     },
     "isDirectory": {
      "default": false,
      "type": "boolean"
     },
     "lastModified": {
      "$ref": "#/components/schemas/schemas:9"
     },
     "eTag": {
      "$ref": "#/components/schemas/schemas:10"
     },
     "contentLength": {
      "type": "integer",
      "format": "int64"
     },
     "owner": {
      "$ref": "#/components/schemas/schemas:11"
     },
     "group": {
      "$ref": "#/components/schemas/schemas:12"
     },
     "permissions": {
      "$ref": "#/components/schemas/schemas:13"
     }
    }
   },
   "schemas:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "Path-name",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/Path-name"
     ]
    },
    "type": "string"
   },
   "schemas:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "Path-lastModified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/Path-lastModified"
     ]
    },
    "type": "string"
   },
   "schemas:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "Path-eTag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/Path-eTag"
     ]
    },
    "type": "string"
   },
   "schemas:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "Path-owner",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/Path-owner"
     ]
    },
    "type": "string"
   },
   "schemas:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "Path-group",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/Path-group"
     ]
    },
    "type": "string"
   },
   "schemas:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "Path-permissions",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/Path-permissions"
     ]
    },
    "type": "string"
   },
   "schemas:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "PathList",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/PathList"
     ]
    },
    "properties": {
     "paths": {
      "$ref": "#/components/schemas/schemas:15"
     }
    }
   },
   "schemas:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "PathList-paths",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/PathList-paths"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:7"
    }
   },
   "schemas:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "Filesystem",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/Filesystem"
     ]
    },
    "properties": {
     "name": {
      "$ref": "#/components/schemas/schemas:17"
     },
     "lastModified": {
      "$ref": "#/components/schemas/schemas:18"
     },
     "eTag": {
      "$ref": "#/components/schemas/schemas:19"
     }
    }
   },
   "schemas:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "Filesystem-name",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/Filesystem-name"
     ]
    },
    "type": "string"
   },
   "schemas:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "Filesystem-lastModified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/Filesystem-lastModified"
     ]
    },
    "type": "string"
   },
   "schemas:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "Filesystem-eTag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/Filesystem-eTag"
     ]
    },
    "type": "string"
   },
   "schemas:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "FilesystemList",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/FilesystemList"
     ]
    },
    "properties": {
     "filesystems": {
      "$ref": "#/components/schemas/schemas:21"
     }
    }
   },
   "schemas:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "FilesystemList-filesystems",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/FilesystemList-filesystems"
     ]
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:16"
    }
   },
   "schemas:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "components·responses·errorresponse·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/components·responses·errorresponse·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "components·responses·errorresponse·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/components·responses·errorresponse·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·responses·200·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·get·responses·200·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:25": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·responses·200·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·get·responses·200·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:26": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·responses·200·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·get·responses·200·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:27": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·responses·200·headers·x_ms_continuation·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·get·responses·200·headers·x_ms_continuation·schema"
     ]
    },
    "type": "string"
   },
   "schemas:28": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·responses·200·headers·content_type·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·get·responses·200·headers·content_type·schema"
     ]
    },
    "type": "string"
   },
   "schemas:29": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·1·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·get·parameters·1·schema"
     ]
    },
    "type": "string"
   },
   "schemas:30": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·2·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·get·parameters·2·schema"
     ]
    },
    "type": "string"
   },
   "schemas:31": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·3·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·get·parameters·3·schema"
     ]
    },
    "format": "int32",
    "minimum": 1,
    "type": "integer"
   },
   "schemas:32": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·4·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·get·parameters·4·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:33": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·get·parameters·5·schema"
     ]
    },
    "format": "int32",
    "minimum": 1,
    "type": "integer"
   },
   "schemas:34": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·parameters·6·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·get·parameters·6·schema"
     ]
    },
    "type": "string"
   },
   "schemas:35": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·put·responses·201·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:36": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·put·responses·201·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:37": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201·headers·last_modified·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·put·responses·201·headers·last_modified·schema"
     ]
    },
    "type": "string"
   },
   "schemas:38": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·put·responses·201·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:39": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·put·responses·201·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:40": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201·headers·x_ms_namespace_enabled·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·put·responses·201·headers·x_ms_namespace_enabled·schema"
     ]
    },
    "type": "string"
   },
   "schemas:41": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·parameters·0·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·put·parameters·0·schema"
     ]
    },
    "type": "string"
   },
   "schemas:42": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·responses·200·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·patch·responses·200·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:43": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·responses·200·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·patch·responses·200·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:44": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·responses·200·headers·last_modified·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·patch·responses·200·headers·last_modified·schema"
     ]
    },
    "type": "string"
   },
   "schemas:45": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·responses·200·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·patch·responses·200·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:46": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·responses·200·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·patch·responses·200·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:47": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·parameters·0·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·patch·parameters·0·schema"
     ]
    },
    "type": "string"
   },
   "schemas:48": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·parameters·1·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·patch·parameters·1·schema"
     ]
    },
    "type": "string"
   },
   "schemas:49": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·parameters·2·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·patch·parameters·2·schema"
     ]
    },
    "type": "string"
   },
   "schemas:50": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·get·responses·200·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:51": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·get·responses·200·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:52": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200·headers·last_modified·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·get·responses·200·headers·last_modified·schema"
     ]
    },
    "type": "string"
   },
   "schemas:53": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·get·responses·200·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:54": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·get·responses·200·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:55": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200·headers·x_ms_continuation·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·get·responses·200·headers·x_ms_continuation·schema"
     ]
    },
    "type": "string"
   },
   "schemas:56": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·parameters·0·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·get·parameters·0·schema"
     ]
    },
    "type": "string"
   },
   "schemas:57": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·parameters·1·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·get·parameters·1·schema"
     ]
    },
    "type": "boolean"
   },
   "schemas:58": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·parameters·2·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·get·parameters·2·schema"
     ]
    },
    "type": "string"
   },
   "schemas:59": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·parameters·3·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·get·parameters·3·schema"
     ]
    },
    "format": "int32",
    "minimum": 1,
    "type": "integer"
   },
   "schemas:60": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·parameters·4·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·get·parameters·4·schema"
     ]
    },
    "type": "boolean"
   },
   "schemas:61": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·head·responses·200·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:62": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·head·responses·200·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:63": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·last_modified·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·head·responses·200·headers·last_modified·schema"
     ]
    },
    "type": "string"
   },
   "schemas:64": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·head·responses·200·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:65": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·head·responses·200·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:66": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·x_ms_properties·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·head·responses·200·headers·x_ms_properties·schema"
     ]
    },
    "type": "string"
   },
   "schemas:67": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·x_ms_namespace_enabled·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·head·responses·200·headers·x_ms_namespace_enabled·schema"
     ]
    },
    "type": "string"
   },
   "schemas:68": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·delete·responses·202·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·delete·responses·202·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:69": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·delete·responses·202·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·delete·responses·202·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:70": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·delete·responses·202·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·delete·responses·202·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:71": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·delete·parameters·0·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·delete·parameters·0·schema"
     ]
    },
    "type": "string"
   },
   "schemas:72": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·delete·parameters·1·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem·delete·parameters·1·schema"
     ]
    },
    "type": "string"
   },
   "schemas:73": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·responses·201·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:74": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·responses·201·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:75": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·last_modified·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·responses·201·headers·last_modified·schema"
     ]
    },
    "type": "string"
   },
   "schemas:76": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·responses·201·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:77": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·responses·201·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:78": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·x_ms_continuation·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·responses·201·headers·x_ms_continuation·schema"
     ]
    },
    "type": "string"
   },
   "schemas:79": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·content_length·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·responses·201·headers·content_length·schema"
     ]
    },
    "format": "int64",
    "type": "integer"
   },
   "schemas:80": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "PathResourceType",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·0·schema"
     ]
    },
    "enum": [
     "directory",
     "file"
    ],
    "x-ms-enum": {
     "name": "PathResourceType",
     "modelAsString": false
    },
    "type": "string"
   },
   "schemas:81": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·1·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·1·schema"
     ]
    },
    "type": "string"
   },
   "schemas:82": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "PathRenameMode",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·2·schema"
     ]
    },
    "enum": [
     "legacy",
     "posix"
    ],
    "x-ms-enum": {
     "name": "PathRenameMode",
     "modelAsString": false
    },
    "type": "string"
   },
   "schemas:83": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·3·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·3·schema"
     ]
    },
    "type": "string"
   },
   "schemas:84": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·4·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·4·schema"
     ]
    },
    "type": "string"
   },
   "schemas:85": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:86": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·6·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·6·schema"
     ]
    },
    "type": "string"
   },
   "schemas:87": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·7·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·7·schema"
     ]
    },
    "type": "string"
   },
   "schemas:88": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·8·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·8·schema"
     ]
    },
    "type": "string"
   },
   "schemas:89": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·9·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·9·schema"
     ]
    },
    "type": "string"
   },
   "schemas:90": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·10·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·10·schema"
     ]
    },
    "type": "string"
   },
   "schemas:91": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·11·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·11·schema"
     ]
    },
    "type": "string"
   },
   "schemas:92": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·12·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·12·schema"
     ]
    },
    "type": "string"
   },
   "schemas:93": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·13·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·13·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:94": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·14·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·14·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:95": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·15·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·15·schema"
     ]
    },
    "type": "string"
   },
   "schemas:96": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·16·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·16·schema"
     ]
    },
    "type": "string"
   },
   "schemas:97": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·17·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·17·schema"
     ]
    },
    "type": "string"
   },
   "schemas:98": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·18·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·18·schema"
     ]
    },
    "type": "string"
   },
   "schemas:99": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·19·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·19·schema"
     ]
    },
    "type": "string"
   },
   "schemas:100": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·20·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·20·schema"
     ]
    },
    "type": "string"
   },
   "schemas:101": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·21·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·21·schema"
     ]
    },
    "type": "string"
   },
   "schemas:102": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·22·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·22·schema"
     ]
    },
    "type": "string"
   },
   "schemas:103": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·23·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·23·schema"
     ]
    },
    "type": "string"
   },
   "schemas:104": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·24·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·24·schema"
     ]
    },
    "type": "string"
   },
   "schemas:105": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·parameters·25·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·put·parameters·25·schema"
     ]
    },
    "type": "string"
   },
   "schemas:106": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:107": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:108": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·last_modified·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·last_modified·schema"
     ]
    },
    "type": "string"
   },
   "schemas:109": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·accept_ranges·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·accept_ranges·schema"
     ]
    },
    "type": "string"
   },
   "schemas:110": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·cache_control·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·cache_control·schema"
     ]
    },
    "type": "string"
   },
   "schemas:111": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_disposition·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·content_disposition·schema"
     ]
    },
    "type": "string"
   },
   "schemas:112": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_encoding·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·content_encoding·schema"
     ]
    },
    "type": "string"
   },
   "schemas:113": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_language·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·content_language·schema"
     ]
    },
    "type": "string"
   },
   "schemas:114": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_length·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·content_length·schema"
     ]
    },
    "format": "int64",
    "type": "integer"
   },
   "schemas:115": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_range·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·content_range·schema"
     ]
    },
    "type": "string"
   },
   "schemas:116": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_type·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·content_type·schema"
     ]
    },
    "type": "string"
   },
   "schemas:117": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_md5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·content_md5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:118": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·x_ms_properties·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·x_ms_properties·schema"
     ]
    },
    "type": "string"
   },
   "schemas:119": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:120": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·200·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:121": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·202·headers·content_md5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·202·headers·content_md5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:122": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·202·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·202·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:123": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·202·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·202·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:124": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·202·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·responses·202·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:125": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "PathUpdateAction",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·0·schema"
     ]
    },
    "enum": [
     "append",
     "flush",
     "setProperties",
     "setAccessControl"
    ],
    "x-ms-enum": {
     "name": "PathUpdateAction",
     "modelAsString": false
    },
    "type": "string"
   },
   "schemas:126": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·1·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·1·schema"
     ]
    },
    "format": "int64",
    "type": "integer"
   },
   "schemas:127": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·2·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·2·schema"
     ]
    },
    "type": "boolean"
   },
   "schemas:128": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·3·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·3·schema"
     ]
    },
    "type": "boolean"
   },
   "schemas:129": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·4·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·4·schema"
     ]
    },
    "minimum": 0,
    "format": "int64",
    "type": "integer"
   },
   "schemas:130": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:131": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·6·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·6·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:132": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·7·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·7·schema"
     ]
    },
    "type": "string"
   },
   "schemas:133": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·8·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·8·schema"
     ]
    },
    "type": "string"
   },
   "schemas:134": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·9·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·9·schema"
     ]
    },
    "type": "string"
   },
   "schemas:135": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·10·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·10·schema"
     ]
    },
    "type": "string"
   },
   "schemas:136": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·11·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·11·schema"
     ]
    },
    "type": "string"
   },
   "schemas:137": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·12·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·12·schema"
     ]
    },
    "type": "string"
   },
   "schemas:138": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·13·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·13·schema"
     ]
    },
    "type": "string"
   },
   "schemas:139": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·14·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·14·schema"
     ]
    },
    "type": "string"
   },
   "schemas:140": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·15·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·15·schema"
     ]
    },
    "type": "string"
   },
   "schemas:141": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·16·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·16·schema"
     ]
    },
    "type": "string"
   },
   "schemas:142": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·17·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·17·schema"
     ]
    },
    "type": "string"
   },
   "schemas:143": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·18·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·18·schema"
     ]
    },
    "type": "string"
   },
   "schemas:144": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·19·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·19·schema"
     ]
    },
    "type": "string"
   },
   "schemas:145": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·20·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·20·schema"
     ]
    },
    "type": "string"
   },
   "schemas:146": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·parameters·21·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·parameters·21·schema"
     ]
    },
    "type": "string"
   },
   "schemas:147": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·requestbody·content·application-octet_stream·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·requestbody·content·application-octet_stream·schema"
     ]
    },
    "type": "object",
    "format": "file"
   },
   "schemas:148": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·requestbody·content·text-plain·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·patch·requestbody·content·text-plain·schema"
     ]
    },
    "type": "object",
    "format": "file"
   },
   "schemas:149": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·200·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:150": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·200·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:151": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200·headers·last_modified·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·200·headers·last_modified·schema"
     ]
    },
    "type": "string"
   },
   "schemas:152": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·200·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:153": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·200·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:154": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200·headers·x_ms_lease_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·200·headers·x_ms_lease_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:155": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·201·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:156": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·201·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:157": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201·headers·last_modified·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·201·headers·last_modified·schema"
     ]
    },
    "type": "string"
   },
   "schemas:158": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·201·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:159": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·201·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:160": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201·headers·x_ms_lease_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·201·headers·x_ms_lease_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:161": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·202·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·202·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:162": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·202·headers·last_modified·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·202·headers·last_modified·schema"
     ]
    },
    "type": "string"
   },
   "schemas:163": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·202·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·202·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:164": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·202·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·202·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:165": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·202·headers·x_ms_lease_time·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·responses·202·headers·x_ms_lease_time·schema"
     ]
    },
    "type": "string"
   },
   "schemas:166": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "PathLeaseAction",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·parameters·0·schema"
     ]
    },
    "enum": [
     "acquire",
     "break",
     "change",
     "renew",
     "release"
    ],
    "x-ms-enum": {
     "name": "PathLeaseAction",
     "modelAsString": false
    },
    "type": "string"
   },
   "schemas:167": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·1·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·parameters·1·schema"
     ]
    },
    "format": "int32",
    "type": "integer"
   },
   "schemas:168": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·2·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·parameters·2·schema"
     ]
    },
    "format": "int32",
    "type": "integer"
   },
   "schemas:169": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·3·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·parameters·3·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:170": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·4·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·parameters·4·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:171": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·parameters·5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:172": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·6·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·parameters·6·schema"
     ]
    },
    "type": "string"
   },
   "schemas:173": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·7·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·parameters·7·schema"
     ]
    },
    "type": "string"
   },
   "schemas:174": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·parameters·8·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·post·parameters·8·schema"
     ]
    },
    "type": "string"
   },
   "schemas:175": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·content·application-json·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·content·application-json·schema"
     ]
    },
    "type": "file"
   },
   "schemas:176": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·content·application-octet_stream·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·content·application-octet_stream·schema"
     ]
    },
    "type": "file"
   },
   "schemas:177": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·content·text-plain·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·content·text-plain·schema"
     ]
    },
    "type": "file"
   },
   "schemas:178": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·accept_ranges·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·accept_ranges·schema"
     ]
    },
    "type": "string"
   },
   "schemas:179": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·cache_control·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·cache_control·schema"
     ]
    },
    "type": "string"
   },
   "schemas:180": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_disposition·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·content_disposition·schema"
     ]
    },
    "type": "string"
   },
   "schemas:181": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_encoding·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·content_encoding·schema"
     ]
    },
    "type": "string"
   },
   "schemas:182": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_language·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·content_language·schema"
     ]
    },
    "type": "string"
   },
   "schemas:183": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_length·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·content_length·schema"
     ]
    },
    "format": "int64",
    "type": "integer"
   },
   "schemas:184": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_range·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·content_range·schema"
     ]
    },
    "type": "string"
   },
   "schemas:185": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_type·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·content_type·schema"
     ]
    },
    "type": "string"
   },
   "schemas:186": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_md5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·content_md5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:187": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:188": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:189": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·last_modified·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·last_modified·schema"
     ]
    },
    "type": "string"
   },
   "schemas:190": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:191": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:192": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_resource_type·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·x_ms_resource_type·schema"
     ]
    },
    "type": "string"
   },
   "schemas:193": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_properties·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·x_ms_properties·schema"
     ]
    },
    "type": "string"
   },
   "schemas:194": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_lease_duration·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·x_ms_lease_duration·schema"
     ]
    },
    "type": "string"
   },
   "schemas:195": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_lease_state·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·x_ms_lease_state·schema"
     ]
    },
    "type": "string"
   },
   "schemas:196": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_lease_status·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·200·headers·x_ms_lease_status·schema"
     ]
    },
    "type": "string"
   },
   "schemas:197": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·content·application-json·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·content·application-json·schema"
     ]
    },
    "type": "file"
   },
   "schemas:198": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·content·application-octet_stream·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·content·application-octet_stream·schema"
     ]
    },
    "type": "file"
   },
   "schemas:199": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·content·text-plain·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·content·text-plain·schema"
     ]
    },
    "type": "file"
   },
   "schemas:200": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·accept_ranges·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·accept_ranges·schema"
     ]
    },
    "type": "string"
   },
   "schemas:201": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·cache_control·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·cache_control·schema"
     ]
    },
    "type": "string"
   },
   "schemas:202": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_disposition·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·content_disposition·schema"
     ]
    },
    "type": "string"
   },
   "schemas:203": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_encoding·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·content_encoding·schema"
     ]
    },
    "type": "string"
   },
   "schemas:204": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_language·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·content_language·schema"
     ]
    },
    "type": "string"
   },
   "schemas:205": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_length·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·content_length·schema"
     ]
    },
    "format": "int64",
    "type": "integer"
   },
   "schemas:206": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_range·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·content_range·schema"
     ]
    },
    "type": "string"
   },
   "schemas:207": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_type·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·content_type·schema"
     ]
    },
    "type": "string"
   },
   "schemas:208": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_md5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·content_md5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:209": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_content_md5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·x_ms_content_md5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:210": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:211": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:212": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·last_modified·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·last_modified·schema"
     ]
    },
    "type": "string"
   },
   "schemas:213": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:214": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:215": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_resource_type·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·x_ms_resource_type·schema"
     ]
    },
    "type": "string"
   },
   "schemas:216": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_properties·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·x_ms_properties·schema"
     ]
    },
    "type": "string"
   },
   "schemas:217": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_lease_duration·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·x_ms_lease_duration·schema"
     ]
    },
    "type": "string"
   },
   "schemas:218": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_lease_state·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·x_ms_lease_state·schema"
     ]
    },
    "type": "string"
   },
   "schemas:219": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_lease_status·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·responses·206·headers·x_ms_lease_status·schema"
     ]
    },
    "type": "string"
   },
   "schemas:220": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·0·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·parameters·0·schema"
     ]
    },
    "type": "string"
   },
   "schemas:221": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·1·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·parameters·1·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:222": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·2·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·parameters·2·schema"
     ]
    },
    "type": "boolean"
   },
   "schemas:223": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·3·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·parameters·3·schema"
     ]
    },
    "type": "string"
   },
   "schemas:224": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·4·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·parameters·4·schema"
     ]
    },
    "type": "string"
   },
   "schemas:225": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·parameters·5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:226": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·parameters·6·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·get·parameters·6·schema"
     ]
    },
    "type": "string"
   },
   "schemas:227": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·accept_ranges·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·accept_ranges·schema"
     ]
    },
    "type": "string"
   },
   "schemas:228": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·cache_control·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·cache_control·schema"
     ]
    },
    "type": "string"
   },
   "schemas:229": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_disposition·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·content_disposition·schema"
     ]
    },
    "type": "string"
   },
   "schemas:230": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_encoding·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·content_encoding·schema"
     ]
    },
    "type": "string"
   },
   "schemas:231": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_language·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·content_language·schema"
     ]
    },
    "type": "string"
   },
   "schemas:232": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_length·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·content_length·schema"
     ]
    },
    "format": "int64",
    "type": "integer"
   },
   "schemas:233": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_range·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·content_range·schema"
     ]
    },
    "type": "string"
   },
   "schemas:234": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_type·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·content_type·schema"
     ]
    },
    "type": "string"
   },
   "schemas:235": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_md5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·content_md5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:236": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:237": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·etag·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·etag·schema"
     ]
    },
    "type": "string"
   },
   "schemas:238": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·last_modified·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·last_modified·schema"
     ]
    },
    "type": "string"
   },
   "schemas:239": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:240": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:241": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_resource_type·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·x_ms_resource_type·schema"
     ]
    },
    "type": "string"
   },
   "schemas:242": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_properties·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·x_ms_properties·schema"
     ]
    },
    "type": "string"
   },
   "schemas:243": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_owner·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·x_ms_owner·schema"
     ]
    },
    "type": "string"
   },
   "schemas:244": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_group·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·x_ms_group·schema"
     ]
    },
    "type": "string"
   },
   "schemas:245": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_permissions·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·x_ms_permissions·schema"
     ]
    },
    "type": "string"
   },
   "schemas:246": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_acl·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·x_ms_acl·schema"
     ]
    },
    "type": "string"
   },
   "schemas:247": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_lease_duration·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·x_ms_lease_duration·schema"
     ]
    },
    "type": "string"
   },
   "schemas:248": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_lease_state·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·x_ms_lease_state·schema"
     ]
    },
    "type": "string"
   },
   "schemas:249": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_lease_status·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·responses·200·headers·x_ms_lease_status·schema"
     ]
    },
    "type": "string"
   },
   "schemas:250": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "PathGetPropertiesAction",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·parameters·0·schema"
     ]
    },
    "enum": [
     "getAccessControl",
     "getStatus",
     "checkAccess"
    ],
    "x-ms-enum": {
     "name": "PathGetPropertiesAction",
     "modelAsString": false
    },
    "type": "string"
   },
   "schemas:251": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·1·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·parameters·1·schema"
     ]
    },
    "type": "boolean"
   },
   "schemas:252": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·2·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·parameters·2·schema"
     ]
    },
    "type": "string"
   },
   "schemas:253": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·3·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·parameters·3·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:254": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·4·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·parameters·4·schema"
     ]
    },
    "type": "string"
   },
   "schemas:255": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·parameters·5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:256": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·6·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·parameters·6·schema"
     ]
    },
    "type": "string"
   },
   "schemas:257": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·parameters·7·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·head·parameters·7·schema"
     ]
    },
    "type": "string"
   },
   "schemas:258": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·responses·200·headers·date·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·delete·responses·200·headers·date·schema"
     ]
    },
    "type": "string"
   },
   "schemas:259": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·responses·200·headers·x_ms_request_id·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·delete·responses·200·headers·x_ms_request_id·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:260": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·responses·200·headers·x_ms_version·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·delete·responses·200·headers·x_ms_version·schema"
     ]
    },
    "type": "string"
   },
   "schemas:261": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·responses·200·headers·x_ms_continuation·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·delete·responses·200·headers·x_ms_continuation·schema"
     ]
    },
    "type": "string"
   },
   "schemas:262": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·0·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·delete·parameters·0·schema"
     ]
    },
    "type": "boolean"
   },
   "schemas:263": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·1·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·delete·parameters·1·schema"
     ]
    },
    "type": "string"
   },
   "schemas:264": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·2·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·delete·parameters·2·schema"
     ]
    },
    "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
    "type": "string"
   },
   "schemas:265": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·3·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·delete·parameters·3·schema"
     ]
    },
    "type": "string"
   },
   "schemas:266": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·4·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·delete·parameters·4·schema"
     ]
    },
    "type": "string"
   },
   "schemas:267": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·5·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·delete·parameters·5·schema"
     ]
    },
    "type": "string"
   },
   "schemas:268": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·parameters·6·schema",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/schemas/paths·filesystem-path·delete·parameters·6·schema"
     ]
    },
    "type": "string"
   }
  },
  "responses": {
   "responses:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "ErrorResponse",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/ErrorResponse"
     ]
    },
    "description": "An error occurred. The possible HTTP status, code, and message strings are listed below:\n* 400 Bad Request, ContentLengthMustBeZero, \"The Content-Length request header must be zero.\"\n* 400 Bad Request, InvalidAuthenticationInfo, \"Authentication information is not given in the correct format. Check the value of Authorization header.\"\n* 400 Bad Request, InvalidFlushPosition, \"The uploaded data is not contiguous or the position query parameter value is not equal to the length of the file after appending the uploaded data.\"\n* 400 Bad Request, InvalidHeaderValue, \"The value for one of the HTTP headers is not in the correct format.\"\n* 400 Bad Request, InvalidHttpVerb, \"The HTTP verb specified is invalid - it is not recognized by the server.\"\n* 400 Bad Request, InvalidInput, \"One of the request inputs is not valid.\"\n* 400 Bad Request, InvalidPropertyName, \"A property name cannot be empty.\"\n* 400 Bad Request, InvalidPropertyName, \"The property name contains invalid characters.\"\n* 400 Bad Request, InvalidQueryParameterValue, \"Value for one of the query parameters specified in the request URI is invalid.\"\n* 400 Bad Request, InvalidResourceName, \"The specified resource name contains invalid characters.\"\n* 400 Bad Request, InvalidSourceUri, \"The source URI is invalid.\"\n* 400 Bad Request, InvalidUri, \"The request URI is invalid.\"\n* 400 Bad Request, MissingRequiredHeader, \"An HTTP header that's mandatory for this request is not specified.\"\n* 400 Bad Request, MissingRequiredQueryParameter, \"A query parameter that's mandatory for this request is not specified.\"\n* 400 Bad Request, MultipleConditionHeadersNotSupported, \"Multiple condition headers are not supported.\"\n* 400 Bad Request, OutOfRangeInput, \"One of the request inputs is out of range.\"\n* 400 Bad Request, OutOfRangeQueryParameterValue, \"One of the query parameters specified in the request URI is outside the permissible range.\"\n* 400 Bad Request, UnsupportedHeader, \"One of the headers specified in the request is not supported.\"\n* 400 Bad Request, UnsupportedQueryParameter, \"One of the query parameters specified in the request URI is not supported.\"\n* 400 Bad Request, UnsupportedRestVersion, \"The specified Rest Version is Unsupported.\"\n* 403 Forbidden, AccountIsDisabled, \"The specified account is disabled.\"\n* 403 Forbidden, AuthorizationFailure, \"This request is not authorized to perform this operation.\"\n* 403 Forbidden, InsufficientAccountPermissions, \"The account being accessed does not have sufficient permissions to execute this operation.\"\n* 404 Not Found, FilesystemNotFound, \"The specified filesystem does not exist.\"\n* 404 Not Found, PathNotFound, \"The specified path does not exist.\"\n* 404 Not Found, RenameDestinationParentPathNotFound, \"The parent directory of the destination path does not exist.\"\n* 404 Not Found, ResourceNotFound, \"The specified resource does not exist.\"\n* 404 Not Found, SourcePathNotFound, \"The source path for a rename operation does not exist.\"\n* 405 Method Not Allowed, UnsupportedHttpVerb, \"The resource doesn't support the specified HTTP verb.\"\n* 409 Conflict, DestinationPathIsBeingDeleted, \"The specified destination path is marked to be deleted.\"\n* 409 Conflict, DirectoryNotEmpty, \"The recursive query parameter value must be true to delete a non-empty directory.\"\n* 409 Conflict, FilesystemAlreadyExists, \"The specified filesystem already exists.\"\n* 409 Conflict, FilesystemBeingDeleted, \"The specified filesystem is being deleted.\"\n* 409 Conflict, InvalidDestinationPath, \"The specified path, or an element of the path, exists and its resource type is invalid for this operation.\"* 409 Conflict, InvalidFlushOperation, \"The resource was created or modified by the Blob Service API and cannot be written to by the Data Lake Storage Service API.\"\n* 409 Conflict, InvalidRenameSourcePath, \"The source directory cannot be the same as the destination directory, nor can the destination be a subdirectory of the source directory.\"\n* 409 Conflict, InvalidSourceOrDestinationResourceType, \"The source and destination resource type must be identical.\"\n* 409 Conflict, LeaseAlreadyPresent, \"There is already a lease present.\"\n* 409 Conflict, LeaseIdMismatchWithLeaseOperation, \"The lease ID specified did not match the lease ID for the resource with the specified lease operation.\"\n* 409 Conflict, LeaseIsAlreadyBroken, \"The lease has already been broken and cannot be broken again.\"\n* 409 Conflict, LeaseIsBreakingAndCannotBeAcquired, \"The lease ID matched, but the lease is currently in breaking state and cannot be acquired until it is broken.\"\n* 409 Conflict, LeaseIsBreakingAndCannotBeChanged, \"The lease ID matched, but the lease is currently in breaking state and cannot be changed.\"\n* 409 Conflict, LeaseIsBrokenAndCannotBeRenewed, \"The lease ID matched, but the lease has been broken explicitly and cannot be renewed.\"\n* 409 Conflict, LeaseNameMismatch, \"The lease name specified did not match the existing lease name.\"\n* 409 Conflict, LeaseNotPresentWithLeaseOperation, \"The lease ID is not present with the specified lease operation.\"\n* 409 Conflict, PathAlreadyExists, \"The specified path already exists.\"\n* 409 Conflict, PathConflict, \"The specified path, or an element of the path, exists and its resource type is invalid for this operation.\"\n* 409 Conflict, SourcePathIsBeingDeleted, \"The specified source path is marked to be deleted.\"\n* 409 Conflict, ResourceTypeMismatch, \"The resource type specified in the request does not match the type of the resource.\"\n* 412 Precondition Failed, ConditionNotMet, \"The condition specified using HTTP conditional header(s) is not met.\"\n* 412 Precondition Failed, LeaseIdMismatch, \"The lease ID specified did not match the lease ID for the resource.\"\n* 412 Precondition Failed, LeaseIdMissing, \"There is currently a lease on the resource and no lease ID was specified in the request.\"\n* 412 Precondition Failed, LeaseNotPresent, \"There is currently no lease on the resource.\"\n* 412 Precondition Failed, LeaseLost, \"A lease ID was specified, but the lease for the resource has expired.\"\n* 412 Precondition Failed, SourceConditionNotMet, \"The source condition specified using HTTP conditional header(s) is not met.\"\n* 413 Request Entity Too Large, RequestBodyTooLarge, \"The request body is too large and exceeds the maximum permissible limit.\"\n* 416 Requested Range Not Satisfiable, InvalidRange, \"The range specified is invalid for the current size of the resource.\"\n* 500 Internal Server Error, InternalError, \"The server encountered an internal error. Please retry the request.\"\n* 500 Internal Server Error, OperationTimedOut, \"The operation could not be completed within the permitted time.\"\n* 503 Service Unavailable, ServerBusy, \"Egress is over the account limit.\"\n* 503 Service Unavailable, ServerBusy, \"Ingress is over the account limit.\"\n* 503 Service Unavailable, ServerBusy, \"Operations per second is over the account limit.\"\n* 503 Service Unavailable, ServerBusy, \"The server is currently unable to receive requests. Please retry your request.\"",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:3"
      }
     }
    },
    "headers": {
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:0",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:1",
      "description": "The version of the REST protocol used to process the request."
     }
    }
   },
   "responses:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·get·responses·200"
     ]
    },
    "description": "OK",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:20"
      }
     }
    },
    "headers": {
     "Date": {
      "$ref": "#/components/headers/headers:2",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:3",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:4",
      "description": "The version of the REST protocol used to process the request."
     },
     "x-ms-continuation": {
      "$ref": "#/components/headers/headers:5",
      "description": "If the number of filesystems to be listed exceeds the maxResults limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the filesystems."
     },
     "Content-Type": {
      "$ref": "#/components/headers/headers:6",
      "description": "The content type of list filesystem response. The default content type is application/json."
     }
    }
   },
   "responses:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem·put·responses·201"
     ]
    },
    "description": "Created",
    "headers": {
     "Date": {
      "$ref": "#/components/headers/headers:7",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "ETag": {
      "$ref": "#/components/headers/headers:8",
      "description": "An HTTP entity tag associated with the filesystem."
     },
     "Last-Modified": {
      "$ref": "#/components/headers/headers:9",
      "description": "The data and time the filesystem was last modified.  Operations on files and directories do not affect the last modified time."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:10",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:11",
      "description": "The version of the REST protocol used to process the request."
     },
     "x-ms-namespace-enabled": {
      "$ref": "#/components/headers/headers:12",
      "description": "A bool string indicates whether the namespace feature is enabled. If \"true\", the namespace is enabled for the filesystem.  "
     }
    }
   },
   "responses:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem·patch·responses·200"
     ]
    },
    "description": "Ok",
    "headers": {
     "Date": {
      "$ref": "#/components/headers/headers:13",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "ETag": {
      "$ref": "#/components/headers/headers:14",
      "description": "An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect the entity tag, but operations on files and directories do not."
     },
     "Last-Modified": {
      "$ref": "#/components/headers/headers:15",
      "description": "The data and time the filesystem was last modified.  Changes to filesystem properties update the last modified time, but operations on files and directories do not."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:16",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:17",
      "description": "The version of the REST protocol used to process the request."
     }
    }
   },
   "responses:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem·get·responses·200"
     ]
    },
    "description": "Ok",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:14"
      }
     }
    },
    "headers": {
     "Date": {
      "$ref": "#/components/headers/headers:18",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "ETag": {
      "$ref": "#/components/headers/headers:19",
      "description": "An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect the entity tag, but operations on files and directories do not."
     },
     "Last-Modified": {
      "$ref": "#/components/headers/headers:20",
      "description": "The data and time the filesystem was last modified.  Changes to filesystem properties update the last modified time, but operations on files and directories do not."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:21",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:22",
      "description": "The version of the REST protocol used to process the request."
     },
     "x-ms-continuation": {
      "$ref": "#/components/headers/headers:23",
      "description": "If the number of paths to be listed exceeds the maxResults limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the paths."
     }
    }
   },
   "responses:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem·head·responses·200"
     ]
    },
    "description": "Ok",
    "headers": {
     "Date": {
      "$ref": "#/components/headers/headers:24",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "ETag": {
      "$ref": "#/components/headers/headers:25",
      "description": "An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect the entity tag, but operations on files and directories do not."
     },
     "Last-Modified": {
      "$ref": "#/components/headers/headers:26",
      "description": "The data and time the filesystem was last modified.  Changes to filesystem properties update the last modified time, but operations on files and directories do not."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:27",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:28",
      "description": "The version of the REST protocol used to process the request."
     },
     "x-ms-properties": {
      "$ref": "#/components/headers/headers:29",
      "description": "The user-defined properties associated with the filesystem.  A comma-separated list of name and value pairs in the format \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
     },
     "x-ms-namespace-enabled": {
      "$ref": "#/components/headers/headers:30",
      "description": "A bool string indicates whether the namespace feature is enabled. If \"true\", the namespace is enabled for the filesystem.  "
     }
    }
   },
   "responses:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·delete·responses·202",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem·delete·responses·202"
     ]
    },
    "description": "Accepted",
    "headers": {
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:31",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:32",
      "description": "The version of the REST protocol used to process the request."
     },
     "Date": {
      "$ref": "#/components/headers/headers:33",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     }
    }
   },
   "responses:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem-path·put·responses·201"
     ]
    },
    "description": "The file or directory was created.",
    "headers": {
     "Date": {
      "$ref": "#/components/headers/headers:34",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "ETag": {
      "$ref": "#/components/headers/headers:35",
      "description": "An HTTP entity tag associated with the file or directory."
     },
     "Last-Modified": {
      "$ref": "#/components/headers/headers:36",
      "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:37",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:38",
      "description": "The version of the REST protocol used to process the request."
     },
     "x-ms-continuation": {
      "$ref": "#/components/headers/headers:39",
      "description": "When renaming a directory, the number of paths that are renamed with each invocation is limited.  If the number of paths to be renamed exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the rename operation to continue renaming the directory."
     },
     "Content-Length": {
      "$ref": "#/components/headers/headers:40",
      "description": "The size of the resource in bytes."
     }
    }
   },
   "responses:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem-path·patch·responses·200"
     ]
    },
    "description": "The data was flushed (written) to the file or the properties were set successfully.",
    "headers": {
     "Date": {
      "$ref": "#/components/headers/headers:41",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "ETag": {
      "$ref": "#/components/headers/headers:42",
      "description": "An HTTP entity tag associated with the file or directory."
     },
     "Last-Modified": {
      "$ref": "#/components/headers/headers:43",
      "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
     },
     "Accept-Ranges": {
      "$ref": "#/components/headers/headers:44",
      "description": "Indicates that the service supports requests for partial file content."
     },
     "Cache-Control": {
      "$ref": "#/components/headers/headers:45",
      "description": "If the Cache-Control request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Disposition": {
      "$ref": "#/components/headers/headers:46",
      "description": "If the Content-Disposition request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Encoding": {
      "$ref": "#/components/headers/headers:47",
      "description": "If the Content-Encoding request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Language": {
      "$ref": "#/components/headers/headers:48",
      "description": "If the Content-Language request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Length": {
      "$ref": "#/components/headers/headers:49",
      "description": "The size of the resource in bytes."
     },
     "Content-Range": {
      "$ref": "#/components/headers/headers:50",
      "description": "Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the Range request header."
     },
     "Content-Type": {
      "$ref": "#/components/headers/headers:51",
      "description": "The content type specified for the resource. If no content type was specified, the default content type is application/octet-stream."
     },
     "Content-MD5": {
      "$ref": "#/components/headers/headers:52",
      "description": "An MD5 hash of the request content. This header is only returned for \"Flush\" operation. This header is returned so that the client can check for message content integrity. This header refers to the content of the request, not actual file content."
     },
     "x-ms-properties": {
      "$ref": "#/components/headers/headers:53",
      "description": "User-defined properties associated with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:54",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:55",
      "description": "The version of the REST protocol used to process the request."
     }
    }
   },
   "responses:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·202",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem-path·patch·responses·202"
     ]
    },
    "description": "The uploaded data was accepted.",
    "headers": {
     "Content-MD5": {
      "$ref": "#/components/headers/headers:56",
      "description": "An MD5 hash of the request content. This header is only returned for \"Append\" operation. This header is returned so that the client can check for message content integrity. The value of this header is computed by the service; it is not necessarily the same value specified in the request headers."
     },
     "Date": {
      "$ref": "#/components/headers/headers:57",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:58",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:59",
      "description": "The version of the REST protocol used to process the request."
     }
    }
   },
   "responses:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem-path·post·responses·200"
     ]
    },
    "description": "The \"renew\", \"change\" or \"release\" action was successful.",
    "headers": {
     "Date": {
      "$ref": "#/components/headers/headers:60",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "ETag": {
      "$ref": "#/components/headers/headers:61",
      "description": "An HTTP entity tag associated with the file."
     },
     "Last-Modified": {
      "$ref": "#/components/headers/headers:62",
      "description": "The data and time the file was last modified.  Write operations on the file update the last modified time."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:63",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:64",
      "description": "The version of the REST protocol used to process the request."
     },
     "x-ms-lease-id": {
      "$ref": "#/components/headers/headers:65",
      "description": "A successful \"renew\" action returns the lease ID."
     }
    }
   },
   "responses:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem-path·post·responses·201"
     ]
    },
    "description": "A new lease has been created.  The \"acquire\" action was successful.",
    "headers": {
     "Date": {
      "$ref": "#/components/headers/headers:66",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "ETag": {
      "$ref": "#/components/headers/headers:67",
      "description": "An HTTP entity tag associated with the file or directory."
     },
     "Last-Modified": {
      "$ref": "#/components/headers/headers:68",
      "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:69",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:70",
      "description": "The version of the REST protocol used to process the request."
     },
     "x-ms-lease-id": {
      "$ref": "#/components/headers/headers:71",
      "description": "A successful \"acquire\" action returns the lease ID."
     }
    }
   },
   "responses:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·202",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem-path·post·responses·202"
     ]
    },
    "description": "The \"break\" lease action was successful.",
    "headers": {
     "ETag": {
      "$ref": "#/components/headers/headers:72",
      "description": "An HTTP entity tag associated with the file or directory."
     },
     "Last-Modified": {
      "$ref": "#/components/headers/headers:73",
      "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:74",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:75",
      "description": "The version of the REST protocol used to process the request."
     },
     "x-ms-lease-time": {
      "$ref": "#/components/headers/headers:76",
      "description": "The time remaining in the lease period in seconds."
     }
    }
   },
   "responses:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem-path·get·responses·200"
     ]
    },
    "description": "Ok",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:175"
      }
     },
     "application/octet-stream": {
      "schema": {
       "$ref": "#/components/schemas/schemas:176"
      }
     },
     "text/plain": {
      "schema": {
       "$ref": "#/components/schemas/schemas:177"
      }
     }
    },
    "headers": {
     "Accept-Ranges": {
      "$ref": "#/components/headers/headers:77",
      "description": "Indicates that the service supports requests for partial file content."
     },
     "Cache-Control": {
      "$ref": "#/components/headers/headers:78",
      "description": "If the Cache-Control request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Disposition": {
      "$ref": "#/components/headers/headers:79",
      "description": "If the Content-Disposition request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Encoding": {
      "$ref": "#/components/headers/headers:80",
      "description": "If the Content-Encoding request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Language": {
      "$ref": "#/components/headers/headers:81",
      "description": "If the Content-Language request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Length": {
      "$ref": "#/components/headers/headers:82",
      "description": "The size of the resource in bytes."
     },
     "Content-Range": {
      "$ref": "#/components/headers/headers:83",
      "description": "Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the Range request header."
     },
     "Content-Type": {
      "$ref": "#/components/headers/headers:84",
      "description": "The content type specified for the resource. If no content type was specified, the default content type is application/octet-stream."
     },
     "Content-MD5": {
      "$ref": "#/components/headers/headers:85",
      "description": "The MD5 hash of complete file. If the file has an MD5 hash and this read operation is to read the complete file, this response header is returned so that the client can check for message content integrity."
     },
     "Date": {
      "$ref": "#/components/headers/headers:86",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "ETag": {
      "$ref": "#/components/headers/headers:87",
      "description": "An HTTP entity tag associated with the file or directory."
     },
     "Last-Modified": {
      "$ref": "#/components/headers/headers:88",
      "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:89",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:90",
      "description": "The version of the REST protocol used to process the request."
     },
     "x-ms-resource-type": {
      "$ref": "#/components/headers/headers:91",
      "description": "The type of the resource.  The value may be \"file\" or \"directory\".  If not set, the value is \"file\"."
     },
     "x-ms-properties": {
      "$ref": "#/components/headers/headers:92",
      "description": "The user-defined properties associated with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
     },
     "x-ms-lease-duration": {
      "$ref": "#/components/headers/headers:93",
      "description": "When a resource is leased, specifies whether the lease is of infinite or fixed duration."
     },
     "x-ms-lease-state": {
      "$ref": "#/components/headers/headers:94",
      "description": "Lease state of the resource. "
     },
     "x-ms-lease-status": {
      "$ref": "#/components/headers/headers:95",
      "description": "The lease status of the resource."
     }
    }
   },
   "responses:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem-path·get·responses·206"
     ]
    },
    "description": "Partial content",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:197"
      }
     },
     "application/octet-stream": {
      "schema": {
       "$ref": "#/components/schemas/schemas:198"
      }
     },
     "text/plain": {
      "schema": {
       "$ref": "#/components/schemas/schemas:199"
      }
     }
    },
    "headers": {
     "Accept-Ranges": {
      "$ref": "#/components/headers/headers:96",
      "description": "Indicates that the service supports requests for partial file content."
     },
     "Cache-Control": {
      "$ref": "#/components/headers/headers:97",
      "description": "If the Cache-Control request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Disposition": {
      "$ref": "#/components/headers/headers:98",
      "description": "If the Content-Disposition request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Encoding": {
      "$ref": "#/components/headers/headers:99",
      "description": "If the Content-Encoding request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Language": {
      "$ref": "#/components/headers/headers:100",
      "description": "If the Content-Language request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Length": {
      "$ref": "#/components/headers/headers:101",
      "description": "The size of the resource in bytes."
     },
     "Content-Range": {
      "$ref": "#/components/headers/headers:102",
      "description": "Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the Range request header."
     },
     "Content-Type": {
      "$ref": "#/components/headers/headers:103",
      "description": "The content type specified for the resource. If no content type was specified, the default content type is application/octet-stream."
     },
     "Content-MD5": {
      "$ref": "#/components/headers/headers:104",
      "description": "The MD5 hash of read range. If the request is to read a specified range and the \"x-ms-range-get-content-md5\" is set to true, then the request returns an MD5 hash for the range, as long as the range size is less than or equal to 4 MB."
     },
     "x-ms-content-md5": {
      "$ref": "#/components/headers/headers:105",
      "description": "The MD5 hash of complete file stored in storage. If the file has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the complete file's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range."
     },
     "Date": {
      "$ref": "#/components/headers/headers:106",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "ETag": {
      "$ref": "#/components/headers/headers:107",
      "description": "An HTTP entity tag associated with the file or directory."
     },
     "Last-Modified": {
      "$ref": "#/components/headers/headers:108",
      "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:109",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:110",
      "description": "The version of the REST protocol used to process the request."
     },
     "x-ms-resource-type": {
      "$ref": "#/components/headers/headers:111",
      "description": "The type of the resource.  The value may be \"file\" or \"directory\".  If not set, the value is \"file\"."
     },
     "x-ms-properties": {
      "$ref": "#/components/headers/headers:112",
      "description": "The user-defined properties associated with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
     },
     "x-ms-lease-duration": {
      "$ref": "#/components/headers/headers:113",
      "description": "When a resource is leased, specifies whether the lease is of infinite or fixed duration."
     },
     "x-ms-lease-state": {
      "$ref": "#/components/headers/headers:114",
      "description": "Lease state of the resource. "
     },
     "x-ms-lease-status": {
      "$ref": "#/components/headers/headers:115",
      "description": "The lease status of the resource."
     }
    }
   },
   "responses:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem-path·head·responses·200"
     ]
    },
    "description": "Returns all properties for the file or directory.",
    "headers": {
     "Accept-Ranges": {
      "$ref": "#/components/headers/headers:116",
      "description": "Indicates that the service supports requests for partial file content."
     },
     "Cache-Control": {
      "$ref": "#/components/headers/headers:117",
      "description": "If the Cache-Control request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Disposition": {
      "$ref": "#/components/headers/headers:118",
      "description": "If the Content-Disposition request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Encoding": {
      "$ref": "#/components/headers/headers:119",
      "description": "If the Content-Encoding request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Language": {
      "$ref": "#/components/headers/headers:120",
      "description": "If the Content-Language request header has previously been set for the resource, that value is returned in this header."
     },
     "Content-Length": {
      "$ref": "#/components/headers/headers:121",
      "description": "The size of the resource in bytes."
     },
     "Content-Range": {
      "$ref": "#/components/headers/headers:122",
      "description": "Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the Range request header."
     },
     "Content-Type": {
      "$ref": "#/components/headers/headers:123",
      "description": "The content type specified for the resource. If no content type was specified, the default content type is application/octet-stream."
     },
     "Content-MD5": {
      "$ref": "#/components/headers/headers:124",
      "description": "The MD5 hash of complete file stored in storage. This header is returned only for \"GetProperties\" operation. If the Content-MD5 header has been set for the file, this response header is returned for GetProperties call so that the client can check for message content integrity."
     },
     "Date": {
      "$ref": "#/components/headers/headers:125",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "ETag": {
      "$ref": "#/components/headers/headers:126",
      "description": "An HTTP entity tag associated with the file or directory."
     },
     "Last-Modified": {
      "$ref": "#/components/headers/headers:127",
      "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:128",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:129",
      "description": "The version of the REST protocol used to process the request."
     },
     "x-ms-resource-type": {
      "$ref": "#/components/headers/headers:130",
      "description": "The type of the resource.  The value may be \"file\" or \"directory\".  If not set, the value is \"file\"."
     },
     "x-ms-properties": {
      "$ref": "#/components/headers/headers:131",
      "description": "The user-defined properties associated with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
     },
     "x-ms-owner": {
      "$ref": "#/components/headers/headers:132",
      "description": "The owner of the file or directory. Included in the response if Hierarchical Namespace is enabled for the account."
     },
     "x-ms-group": {
      "$ref": "#/components/headers/headers:133",
      "description": "The owning group of the file or directory. Included in the response if Hierarchical Namespace is enabled for the account."
     },
     "x-ms-permissions": {
      "$ref": "#/components/headers/headers:134",
      "description": "The POSIX access permissions for the file owner, the file owning group, and others. Included in the response if Hierarchical Namespace is enabled for the account."
     },
     "x-ms-acl": {
      "$ref": "#/components/headers/headers:135",
      "description": "The POSIX access control list for the file or directory.  Included in the response only if the action is \"getAccessControl\" and Hierarchical Namespace is enabled for the account."
     },
     "x-ms-lease-duration": {
      "$ref": "#/components/headers/headers:136",
      "description": "When a resource is leased, specifies whether the lease is of infinite or fixed duration."
     },
     "x-ms-lease-state": {
      "$ref": "#/components/headers/headers:137",
      "description": "Lease state of the resource. "
     },
     "x-ms-lease-status": {
      "$ref": "#/components/headers/headers:138",
      "description": "The lease status of the resource."
     }
    }
   },
   "responses:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·responses·200",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/responses/paths·filesystem-path·delete·responses·200"
     ]
    },
    "description": "The file was deleted.",
    "headers": {
     "Date": {
      "$ref": "#/components/headers/headers:139",
      "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
     },
     "x-ms-request-id": {
      "$ref": "#/components/headers/headers:140",
      "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     "x-ms-version": {
      "$ref": "#/components/headers/headers:141",
      "description": "The version of the REST protocol used to process the request."
     },
     "x-ms-continuation": {
      "$ref": "#/components/headers/headers:142",
      "description": "When deleting a directory, the number of paths that are deleted with each invocation is limited.  If the number of paths to be deleted exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the delete operation to continue deleting the directory."
     }
    }
   }
  },
  "headers": {
   "headers:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "components·responses·errorresponse·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/components·responses·errorresponse·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:22"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "components·responses·errorresponse·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/components·responses·errorresponse·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:23"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·responses·200·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·get·responses·200·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:24"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·responses·200·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·get·responses·200·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:25"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·responses·200·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·get·responses·200·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:26"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·responses·200·headers·x_ms_continuation",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·get·responses·200·headers·x_ms_continuation"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:27"
    },
    "description": "If the number of filesystems to be listed exceeds the maxResults limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the filesystems."
   },
   "headers:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·get·responses·200·headers·content_type",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·get·responses·200·headers·content_type"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:28"
    },
    "description": "The content type of list filesystem response. The default content type is application/json."
   },
   "headers:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·put·responses·201·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:35"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·put·responses·201·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:36"
    },
    "description": "An HTTP entity tag associated with the filesystem."
   },
   "headers:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201·headers·last_modified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·put·responses·201·headers·last_modified"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:37"
    },
    "description": "The data and time the filesystem was last modified.  Operations on files and directories do not affect the last modified time."
   },
   "headers:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·put·responses·201·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:38"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·put·responses·201·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:39"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·put·responses·201·headers·x_ms_namespace_enabled",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·put·responses·201·headers·x_ms_namespace_enabled"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:40"
    },
    "description": "A bool string indicates whether the namespace feature is enabled. If \"true\", the namespace is enabled for the filesystem.  "
   },
   "headers:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·responses·200·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·patch·responses·200·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:42"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·responses·200·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·patch·responses·200·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:43"
    },
    "description": "An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect the entity tag, but operations on files and directories do not."
   },
   "headers:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·responses·200·headers·last_modified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·patch·responses·200·headers·last_modified"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:44"
    },
    "description": "The data and time the filesystem was last modified.  Changes to filesystem properties update the last modified time, but operations on files and directories do not."
   },
   "headers:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·responses·200·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·patch·responses·200·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:45"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·patch·responses·200·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·patch·responses·200·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:46"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·get·responses·200·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:50"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·get·responses·200·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:51"
    },
    "description": "An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect the entity tag, but operations on files and directories do not."
   },
   "headers:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200·headers·last_modified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·get·responses·200·headers·last_modified"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:52"
    },
    "description": "The data and time the filesystem was last modified.  Changes to filesystem properties update the last modified time, but operations on files and directories do not."
   },
   "headers:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·get·responses·200·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:53"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·get·responses·200·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:54"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·get·responses·200·headers·x_ms_continuation",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·get·responses·200·headers·x_ms_continuation"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:55"
    },
    "description": "If the number of paths to be listed exceeds the maxResults limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the paths."
   },
   "headers:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·head·responses·200·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:61"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:25": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·head·responses·200·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:62"
    },
    "description": "An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect the entity tag, but operations on files and directories do not."
   },
   "headers:26": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·last_modified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·head·responses·200·headers·last_modified"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:63"
    },
    "description": "The data and time the filesystem was last modified.  Changes to filesystem properties update the last modified time, but operations on files and directories do not."
   },
   "headers:27": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·head·responses·200·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:64"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:28": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·head·responses·200·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:65"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:29": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·x_ms_properties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·head·responses·200·headers·x_ms_properties"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:66"
    },
    "description": "The user-defined properties associated with the filesystem.  A comma-separated list of name and value pairs in the format \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
   },
   "headers:30": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·head·responses·200·headers·x_ms_namespace_enabled",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·head·responses·200·headers·x_ms_namespace_enabled"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:67"
    },
    "description": "A bool string indicates whether the namespace feature is enabled. If \"true\", the namespace is enabled for the filesystem.  "
   },
   "headers:31": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·delete·responses·202·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·delete·responses·202·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:68"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:32": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·delete·responses·202·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·delete·responses·202·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:69"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:33": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem·delete·responses·202·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem·delete·responses·202·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:70"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:34": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·put·responses·201·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:73"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:35": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·put·responses·201·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:74"
    },
    "description": "An HTTP entity tag associated with the file or directory."
   },
   "headers:36": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·last_modified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·put·responses·201·headers·last_modified"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:75"
    },
    "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
   },
   "headers:37": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·put·responses·201·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:76"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:38": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·put·responses·201·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:77"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:39": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·x_ms_continuation",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·put·responses·201·headers·x_ms_continuation"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:78"
    },
    "description": "When renaming a directory, the number of paths that are renamed with each invocation is limited.  If the number of paths to be renamed exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the rename operation to continue renaming the directory."
   },
   "headers:40": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·put·responses·201·headers·content_length",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·put·responses·201·headers·content_length"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:79"
    },
    "description": "The size of the resource in bytes."
   },
   "headers:41": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:106"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:42": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:107"
    },
    "description": "An HTTP entity tag associated with the file or directory."
   },
   "headers:43": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·last_modified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·last_modified"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:108"
    },
    "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
   },
   "headers:44": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·accept_ranges",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·accept_ranges"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:109"
    },
    "description": "Indicates that the service supports requests for partial file content."
   },
   "headers:45": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·cache_control",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·cache_control"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:110"
    },
    "description": "If the Cache-Control request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:46": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_disposition",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·content_disposition"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:111"
    },
    "description": "If the Content-Disposition request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:47": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_encoding",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·content_encoding"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:112"
    },
    "description": "If the Content-Encoding request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:48": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_language",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·content_language"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:113"
    },
    "description": "If the Content-Language request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:49": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_length",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·content_length"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:114"
    },
    "description": "The size of the resource in bytes."
   },
   "headers:50": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_range",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·content_range"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:115"
    },
    "description": "Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the Range request header."
   },
   "headers:51": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_type",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·content_type"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:116"
    },
    "description": "The content type specified for the resource. If no content type was specified, the default content type is application/octet-stream."
   },
   "headers:52": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·content_md5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·content_md5"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:117"
    },
    "description": "An MD5 hash of the request content. This header is only returned for \"Flush\" operation. This header is returned so that the client can check for message content integrity. This header refers to the content of the request, not actual file content."
   },
   "headers:53": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·x_ms_properties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·x_ms_properties"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:118"
    },
    "description": "User-defined properties associated with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
   },
   "headers:54": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:119"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:55": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·200·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·200·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:120"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:56": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·202·headers·content_md5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·202·headers·content_md5"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:121"
    },
    "description": "An MD5 hash of the request content. This header is only returned for \"Append\" operation. This header is returned so that the client can check for message content integrity. The value of this header is computed by the service; it is not necessarily the same value specified in the request headers."
   },
   "headers:57": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·202·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·202·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:122"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:58": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·202·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·202·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:123"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:59": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·responses·202·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·patch·responses·202·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:124"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:60": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·200·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:149"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:61": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·200·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:150"
    },
    "description": "An HTTP entity tag associated with the file."
   },
   "headers:62": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200·headers·last_modified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·200·headers·last_modified"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:151"
    },
    "description": "The data and time the file was last modified.  Write operations on the file update the last modified time."
   },
   "headers:63": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·200·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:152"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:64": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·200·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:153"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:65": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·200·headers·x_ms_lease_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·200·headers·x_ms_lease_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:154"
    },
    "description": "A successful \"renew\" action returns the lease ID."
   },
   "headers:66": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·201·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:155"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:67": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·201·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:156"
    },
    "description": "An HTTP entity tag associated with the file or directory."
   },
   "headers:68": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201·headers·last_modified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·201·headers·last_modified"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:157"
    },
    "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
   },
   "headers:69": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·201·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:158"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:70": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·201·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:159"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:71": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·201·headers·x_ms_lease_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·201·headers·x_ms_lease_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:160"
    },
    "description": "A successful \"acquire\" action returns the lease ID."
   },
   "headers:72": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·202·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·202·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:161"
    },
    "description": "An HTTP entity tag associated with the file or directory."
   },
   "headers:73": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·202·headers·last_modified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·202·headers·last_modified"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:162"
    },
    "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
   },
   "headers:74": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·202·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·202·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:163"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:75": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·202·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·202·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:164"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:76": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·post·responses·202·headers·x_ms_lease_time",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·post·responses·202·headers·x_ms_lease_time"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:165"
    },
    "description": "The time remaining in the lease period in seconds."
   },
   "headers:77": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·accept_ranges",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·accept_ranges"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:178"
    },
    "description": "Indicates that the service supports requests for partial file content."
   },
   "headers:78": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·cache_control",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·cache_control"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:179"
    },
    "description": "If the Cache-Control request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:79": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_disposition",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·content_disposition"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:180"
    },
    "description": "If the Content-Disposition request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:80": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_encoding",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·content_encoding"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:181"
    },
    "description": "If the Content-Encoding request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:81": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_language",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·content_language"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:182"
    },
    "description": "If the Content-Language request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:82": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_length",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·content_length"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:183"
    },
    "description": "The size of the resource in bytes."
   },
   "headers:83": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_range",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·content_range"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:184"
    },
    "description": "Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the Range request header."
   },
   "headers:84": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_type",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·content_type"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:185"
    },
    "description": "The content type specified for the resource. If no content type was specified, the default content type is application/octet-stream."
   },
   "headers:85": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·content_md5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·content_md5"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:186"
    },
    "description": "The MD5 hash of complete file. If the file has an MD5 hash and this read operation is to read the complete file, this response header is returned so that the client can check for message content integrity."
   },
   "headers:86": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:187"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:87": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:188"
    },
    "description": "An HTTP entity tag associated with the file or directory."
   },
   "headers:88": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·last_modified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·last_modified"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:189"
    },
    "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
   },
   "headers:89": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:190"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:90": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:191"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:91": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_resource_type",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·x_ms_resource_type"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:192"
    },
    "description": "The type of the resource.  The value may be \"file\" or \"directory\".  If not set, the value is \"file\"."
   },
   "headers:92": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_properties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·x_ms_properties"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:193"
    },
    "description": "The user-defined properties associated with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
   },
   "headers:93": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_lease_duration",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·x_ms_lease_duration"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:194"
    },
    "description": "When a resource is leased, specifies whether the lease is of infinite or fixed duration."
   },
   "headers:94": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_lease_state",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·x_ms_lease_state"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:195"
    },
    "description": "Lease state of the resource. "
   },
   "headers:95": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·200·headers·x_ms_lease_status",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·200·headers·x_ms_lease_status"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:196"
    },
    "description": "The lease status of the resource."
   },
   "headers:96": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·accept_ranges",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·accept_ranges"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:200"
    },
    "description": "Indicates that the service supports requests for partial file content."
   },
   "headers:97": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·cache_control",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·cache_control"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:201"
    },
    "description": "If the Cache-Control request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:98": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_disposition",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·content_disposition"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:202"
    },
    "description": "If the Content-Disposition request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:99": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_encoding",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·content_encoding"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:203"
    },
    "description": "If the Content-Encoding request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:100": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_language",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·content_language"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:204"
    },
    "description": "If the Content-Language request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:101": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_length",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·content_length"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:205"
    },
    "description": "The size of the resource in bytes."
   },
   "headers:102": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_range",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·content_range"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:206"
    },
    "description": "Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the Range request header."
   },
   "headers:103": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_type",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·content_type"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:207"
    },
    "description": "The content type specified for the resource. If no content type was specified, the default content type is application/octet-stream."
   },
   "headers:104": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·content_md5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·content_md5"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:208"
    },
    "description": "The MD5 hash of read range. If the request is to read a specified range and the \"x-ms-range-get-content-md5\" is set to true, then the request returns an MD5 hash for the range, as long as the range size is less than or equal to 4 MB."
   },
   "headers:105": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_content_md5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·x_ms_content_md5"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:209"
    },
    "description": "The MD5 hash of complete file stored in storage. If the file has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the complete file's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range."
   },
   "headers:106": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:210"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:107": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:211"
    },
    "description": "An HTTP entity tag associated with the file or directory."
   },
   "headers:108": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·last_modified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·last_modified"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:212"
    },
    "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
   },
   "headers:109": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:213"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:110": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:214"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:111": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_resource_type",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·x_ms_resource_type"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:215"
    },
    "description": "The type of the resource.  The value may be \"file\" or \"directory\".  If not set, the value is \"file\"."
   },
   "headers:112": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_properties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·x_ms_properties"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:216"
    },
    "description": "The user-defined properties associated with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
   },
   "headers:113": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_lease_duration",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·x_ms_lease_duration"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:217"
    },
    "description": "When a resource is leased, specifies whether the lease is of infinite or fixed duration."
   },
   "headers:114": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_lease_state",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·x_ms_lease_state"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:218"
    },
    "description": "Lease state of the resource. "
   },
   "headers:115": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·get·responses·206·headers·x_ms_lease_status",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·get·responses·206·headers·x_ms_lease_status"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:219"
    },
    "description": "The lease status of the resource."
   },
   "headers:116": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·accept_ranges",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·accept_ranges"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:227"
    },
    "description": "Indicates that the service supports requests for partial file content."
   },
   "headers:117": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·cache_control",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·cache_control"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:228"
    },
    "description": "If the Cache-Control request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:118": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_disposition",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·content_disposition"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:229"
    },
    "description": "If the Content-Disposition request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:119": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_encoding",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·content_encoding"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:230"
    },
    "description": "If the Content-Encoding request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:120": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_language",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·content_language"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:231"
    },
    "description": "If the Content-Language request header has previously been set for the resource, that value is returned in this header."
   },
   "headers:121": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_length",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·content_length"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:232"
    },
    "description": "The size of the resource in bytes."
   },
   "headers:122": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_range",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·content_range"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:233"
    },
    "description": "Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the Range request header."
   },
   "headers:123": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_type",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·content_type"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:234"
    },
    "description": "The content type specified for the resource. If no content type was specified, the default content type is application/octet-stream."
   },
   "headers:124": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·content_md5",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·content_md5"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:235"
    },
    "description": "The MD5 hash of complete file stored in storage. This header is returned only for \"GetProperties\" operation. If the Content-MD5 header has been set for the file, this response header is returned for GetProperties call so that the client can check for message content integrity."
   },
   "headers:125": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:236"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:126": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·etag",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·etag"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:237"
    },
    "description": "An HTTP entity tag associated with the file or directory."
   },
   "headers:127": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·last_modified",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·last_modified"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:238"
    },
    "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time."
   },
   "headers:128": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:239"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:129": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:240"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:130": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_resource_type",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·x_ms_resource_type"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:241"
    },
    "description": "The type of the resource.  The value may be \"file\" or \"directory\".  If not set, the value is \"file\"."
   },
   "headers:131": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_properties",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·x_ms_properties"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:242"
    },
    "description": "The user-defined properties associated with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
   },
   "headers:132": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_owner",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·x_ms_owner"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:243"
    },
    "description": "The owner of the file or directory. Included in the response if Hierarchical Namespace is enabled for the account."
   },
   "headers:133": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_group",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·x_ms_group"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:244"
    },
    "description": "The owning group of the file or directory. Included in the response if Hierarchical Namespace is enabled for the account."
   },
   "headers:134": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_permissions",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·x_ms_permissions"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:245"
    },
    "description": "The POSIX access permissions for the file owner, the file owning group, and others. Included in the response if Hierarchical Namespace is enabled for the account."
   },
   "headers:135": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_acl",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·x_ms_acl"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:246"
    },
    "description": "The POSIX access control list for the file or directory.  Included in the response only if the action is \"getAccessControl\" and Hierarchical Namespace is enabled for the account."
   },
   "headers:136": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_lease_duration",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·x_ms_lease_duration"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:247"
    },
    "description": "When a resource is leased, specifies whether the lease is of infinite or fixed duration."
   },
   "headers:137": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_lease_state",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·x_ms_lease_state"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:248"
    },
    "description": "Lease state of the resource. "
   },
   "headers:138": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·head·responses·200·headers·x_ms_lease_status",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·head·responses·200·headers·x_ms_lease_status"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:249"
    },
    "description": "The lease status of the resource."
   },
   "headers:139": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·responses·200·headers·date",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·delete·responses·200·headers·date"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:258"
    },
    "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
   },
   "headers:140": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·responses·200·headers·x_ms_request_id",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·delete·responses·200·headers·x_ms_request_id"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:259"
    },
    "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
   },
   "headers:141": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·responses·200·headers·x_ms_version",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·delete·responses·200·headers·x_ms_version"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:260"
    },
    "description": "The version of the REST protocol used to process the request."
   },
   "headers:142": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·delete·responses·200·headers·x_ms_continuation",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/headers/paths·filesystem-path·delete·responses·200·headers·x_ms_continuation"
     ]
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:261"
    },
    "description": "When deleting a directory, the number of paths that are deleted with each invocation is limited.  If the number of paths to be deleted exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the delete operation to continue deleting the directory."
   }
  },
  "requestBodies": {
   "requestBodies:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2019-10-31"
     ],
     "filename": [
      "mem:///96?oai3.shaken.json"
     ],
     "name": "paths·filesystem-path·patch·requestbody",
     "originalLocations": [
      "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/components/requestBodies/paths·filesystem-path·patch·requestbody"
     ]
    },
    "content": {
     "application/octet-stream": {
      "schema": {
       "$ref": "#/components/schemas/schemas:147"
      }
     },
     "text/plain": {
      "schema": {
       "$ref": "#/components/schemas/schemas:148"
      }
     }
    },
    "description": "Valid only for append operations.  The data to be uploaded and appended to the file.",
    "x-ms-requestBody-name": "requestBody"
   }
  }
 },
 "paths": {
  "path:0": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1"
    ]
   }
  },
  "path:0.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://{accountName}.{dnsSuffix}",
      "variables": {
       "accountName": {
        "description": "The Azure Storage account name.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client",
        "default": ""
       },
       "dnsSuffix": {
        "default": "dfs.core.windows.net",
        "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
       },
       "": {
        "default": ""
       }
      }
     }
    ],
    "operationId": "Filesystem_List",
    "summary": "List Filesystems",
    "description": "List filesystems and their properties in given account.",
    "x-ms-pageable": {
     "itemName": "filesystems",
     "nextLinkName": null
    },
    "tags": [
     "Account Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:1",
      "description": "OK"
     },
     "default": {
      "$ref": "#/components/responses/responses:0"
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:3",
      "description": "The value must be \"account\" for all account operations."
     },
     {
      "$ref": "#/components/parameters/parameters:4",
      "description": "Filters results to filesystems within the specified prefix."
     },
     {
      "$ref": "#/components/parameters/parameters:5",
      "description": "The number of filesystems returned with each invocation is limited. If the number of filesystems to be returned exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is  returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the filesystems."
     },
     {
      "$ref": "#/components/parameters/parameters:6",
      "description": "An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items."
     },
     {
      "$ref": "#/components/parameters/parameters:7",
      "description": "A UUID recorded in the analytics logs for troubleshooting and correlation."
     },
     {
      "$ref": "#/components/parameters/parameters:8",
      "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails."
     },
     {
      "$ref": "#/components/parameters/parameters:9",
      "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization."
     },
     {
      "$ref": "#/components/parameters/parameters:0"
     }
    ]
   }
  },
  "path:1": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}"
    ]
   }
  },
  "path:1.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://{accountName}.{dnsSuffix}",
      "variables": {
       "accountName": {
        "description": "The Azure Storage account name.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client",
        "default": ""
       },
       "dnsSuffix": {
        "default": "dfs.core.windows.net",
        "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
       },
       "": {
        "default": ""
       }
      }
     }
    ],
    "operationId": "Filesystem_Create",
    "summary": "Create Filesystem",
    "description": "Create a filesystem rooted at the specified location. If the filesystem already exists, the operation fails.  This operation does not support conditional HTTP requests.",
    "tags": [
     "Filesystem Operations"
    ],
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:2",
      "description": "Created"
     },
     "default": {
      "$ref": "#/components/responses/responses:0"
     }
    },
    "parameters": [
     {
      "name": "filesystem",
      "in": "path",
      "description": "The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.",
      "required": true,
      "schema": {
       "pattern": "^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$",
       "minLength": 3,
       "maxLength": 63,
       "type": "string"
      }
     },
     {
      "name": "resource",
      "in": "query",
      "description": "The value must be \"filesystem\" for all filesystem operations.",
      "required": true,
      "schema": {
       "enum": [
        "filesystem"
       ],
       "x-ms-enum": {
        "name": "FilesystemResourceType",
        "modelAsString": false
       },
       "type": "string"
      }
     },
     {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "A UUID recorded in the analytics logs for troubleshooting and correlation.",
      "required": false,
      "x-ms-client-request-id": true,
      "schema": {
       "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
       "type": "string"
      }
     },
     {
      "name": "timeout",
      "in": "query",
      "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.",
      "required": false,
      "schema": {
       "format": "int32",
       "minimum": 1,
       "type": "integer"
      }
     },
     {
      "name": "x-ms-date",
      "in": "header",
      "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:10",
      "description": "User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
     }
    ]
   }
  },
  "path:1.patch": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}"
    ]
   },
   "patch": {
    "servers": [
     {
      "url": "https://{accountName}.{dnsSuffix}",
      "variables": {
       "accountName": {
        "description": "The Azure Storage account name.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client",
        "default": ""
       },
       "dnsSuffix": {
        "default": "dfs.core.windows.net",
        "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
       },
       "": {
        "default": ""
       }
      }
     }
    ],
    "operationId": "Filesystem_SetProperties",
    "summary": "Set Filesystem Properties",
    "description": "Set properties for the filesystem.  This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
    "tags": [
     "Filesystem Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:3",
      "description": "Ok"
     },
     "default": {
      "$ref": "#/components/responses/responses:0"
     }
    },
    "parameters": [
     {
      "name": "filesystem",
      "in": "path",
      "description": "The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.",
      "required": true,
      "schema": {
       "pattern": "^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$",
       "minLength": 3,
       "maxLength": 63,
       "type": "string"
      }
     },
     {
      "name": "resource",
      "in": "query",
      "description": "The value must be \"filesystem\" for all filesystem operations.",
      "required": true,
      "schema": {
       "enum": [
        "filesystem"
       ],
       "x-ms-enum": {
        "name": "FilesystemResourceType",
        "modelAsString": false
       },
       "type": "string"
      }
     },
     {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "A UUID recorded in the analytics logs for troubleshooting and correlation.",
      "required": false,
      "x-ms-client-request-id": true,
      "schema": {
       "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
       "type": "string"
      }
     },
     {
      "name": "timeout",
      "in": "query",
      "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.",
      "required": false,
      "schema": {
       "format": "int32",
       "minimum": 1,
       "type": "integer"
      }
     },
     {
      "name": "x-ms-date",
      "in": "header",
      "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:11",
      "description": "Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties."
     },
     {
      "$ref": "#/components/parameters/parameters:12",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time."
     },
     {
      "$ref": "#/components/parameters/parameters:13",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time."
     }
    ]
   }
  },
  "path:1.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://{accountName}.{dnsSuffix}",
      "variables": {
       "accountName": {
        "description": "The Azure Storage account name.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client",
        "default": ""
       },
       "dnsSuffix": {
        "default": "dfs.core.windows.net",
        "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
       },
       "": {
        "default": ""
       }
      }
     }
    ],
    "operationId": "Path_List",
    "summary": "List Paths",
    "description": "List filesystem paths and their properties.",
    "x-ms-pageable": {
     "itemName": "paths",
     "nextLinkName": null
    },
    "tags": [
     "Filesystem Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:4",
      "description": "Ok"
     },
     "default": {
      "$ref": "#/components/responses/responses:0"
     }
    },
    "parameters": [
     {
      "name": "filesystem",
      "in": "path",
      "description": "The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.",
      "required": true,
      "schema": {
       "pattern": "^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$",
       "minLength": 3,
       "maxLength": 63,
       "type": "string"
      }
     },
     {
      "name": "resource",
      "in": "query",
      "description": "The value must be \"filesystem\" for all filesystem operations.",
      "required": true,
      "schema": {
       "enum": [
        "filesystem"
       ],
       "x-ms-enum": {
        "name": "FilesystemResourceType",
        "modelAsString": false
       },
       "type": "string"
      }
     },
     {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "A UUID recorded in the analytics logs for troubleshooting and correlation.",
      "required": false,
      "x-ms-client-request-id": true,
      "schema": {
       "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
       "type": "string"
      }
     },
     {
      "name": "timeout",
      "in": "query",
      "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.",
      "required": false,
      "schema": {
       "format": "int32",
       "minimum": 1,
       "type": "integer"
      }
     },
     {
      "name": "x-ms-date",
      "in": "header",
      "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:14",
      "description": "Filters results to paths within the specified directory. An error occurs if the directory does not exist."
     },
     {
      "$ref": "#/components/parameters/parameters:15",
      "description": "If \"true\", all paths are listed; otherwise, only paths at the root of the filesystem are listed.  If \"directory\" is specified, the list will only include paths that share the same root."
     },
     {
      "$ref": "#/components/parameters/parameters:16",
      "description": "The number of paths returned with each invocation is limited. If the number of paths to be returned exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is  returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the paths."
     },
     {
      "$ref": "#/components/parameters/parameters:17",
      "description": "An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items."
     },
     {
      "$ref": "#/components/parameters/parameters:18",
      "description": "Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the owner and group fields of each list entry will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names."
     }
    ]
   }
  },
  "path:1.head": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}"
    ]
   },
   "head": {
    "servers": [
     {
      "url": "https://{accountName}.{dnsSuffix}",
      "variables": {
       "accountName": {
        "description": "The Azure Storage account name.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client",
        "default": ""
       },
       "dnsSuffix": {
        "default": "dfs.core.windows.net",
        "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
       },
       "": {
        "default": ""
       }
      }
     }
    ],
    "operationId": "Filesystem_GetProperties",
    "summary": "Get Filesystem Properties.",
    "description": "All system and user-defined filesystem properties are specified in the response headers.",
    "tags": [
     "Filesystem Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:5",
      "description": "Ok"
     },
     "default": {
      "$ref": "#/components/responses/responses:0"
     }
    },
    "parameters": [
     {
      "name": "filesystem",
      "in": "path",
      "description": "The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.",
      "required": true,
      "schema": {
       "pattern": "^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$",
       "minLength": 3,
       "maxLength": 63,
       "type": "string"
      }
     },
     {
      "name": "resource",
      "in": "query",
      "description": "The value must be \"filesystem\" for all filesystem operations.",
      "required": true,
      "schema": {
       "enum": [
        "filesystem"
       ],
       "x-ms-enum": {
        "name": "FilesystemResourceType",
        "modelAsString": false
       },
       "type": "string"
      }
     },
     {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "A UUID recorded in the analytics logs for troubleshooting and correlation.",
      "required": false,
      "x-ms-client-request-id": true,
      "schema": {
       "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
       "type": "string"
      }
     },
     {
      "name": "timeout",
      "in": "query",
      "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.",
      "required": false,
      "schema": {
       "format": "int32",
       "minimum": 1,
       "type": "integer"
      }
     },
     {
      "name": "x-ms-date",
      "in": "header",
      "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:0"
     }
    ]
   }
  },
  "path:1.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://{accountName}.{dnsSuffix}",
      "variables": {
       "accountName": {
        "description": "The Azure Storage account name.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client",
        "default": ""
       },
       "dnsSuffix": {
        "default": "dfs.core.windows.net",
        "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
       },
       "": {
        "default": ""
       }
      }
     }
    ],
    "operationId": "Filesystem_Delete",
    "summary": "Delete Filesystem",
    "description": "Marks the filesystem for deletion.  When a filesystem is deleted, a filesystem with the same identifier cannot be created for at least 30 seconds. While the filesystem is being deleted, attempts to create a filesystem with the same identifier will fail with status code 409 (Conflict), with the service returning additional error information indicating that the filesystem is being deleted. All other operations, including operations on any files or directories within the filesystem, will fail with status code 404 (Not Found) while the filesystem is being deleted. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
    "tags": [
     "Filesystem Operations"
    ],
    "responses": {
     "202": {
      "$ref": "#/components/responses/responses:6",
      "description": "Accepted"
     },
     "default": {
      "$ref": "#/components/responses/responses:0"
     }
    },
    "parameters": [
     {
      "name": "filesystem",
      "in": "path",
      "description": "The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.",
      "required": true,
      "schema": {
       "pattern": "^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$",
       "minLength": 3,
       "maxLength": 63,
       "type": "string"
      }
     },
     {
      "name": "resource",
      "in": "query",
      "description": "The value must be \"filesystem\" for all filesystem operations.",
      "required": true,
      "schema": {
       "enum": [
        "filesystem"
       ],
       "x-ms-enum": {
        "name": "FilesystemResourceType",
        "modelAsString": false
       },
       "type": "string"
      }
     },
     {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "A UUID recorded in the analytics logs for troubleshooting and correlation.",
      "required": false,
      "x-ms-client-request-id": true,
      "schema": {
       "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
       "type": "string"
      }
     },
     {
      "name": "timeout",
      "in": "query",
      "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.",
      "required": false,
      "schema": {
       "format": "int32",
       "minimum": 1,
       "type": "integer"
      }
     },
     {
      "name": "x-ms-date",
      "in": "header",
      "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:19",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time."
     },
     {
      "$ref": "#/components/parameters/parameters:20",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time."
     }
    ]
   }
  },
  "path:2": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}/{path}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}~1{path}"
    ]
   }
  },
  "path:2.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}/{path}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}~1{path}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://{accountName}.{dnsSuffix}",
      "variables": {
       "accountName": {
        "description": "The Azure Storage account name.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client",
        "default": ""
       },
       "dnsSuffix": {
        "default": "dfs.core.windows.net",
        "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
       },
       "": {
        "default": ""
       }
      }
     }
    ],
    "operationId": "Path_Create",
    "summary": "Create File | Create Directory | Rename File | Rename Directory",
    "description": "Create or rename a file or directory.    By default, the destination is overwritten and if the destination already exists and has a lease the lease is broken.  This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).  To fail if the destination already exists, use a conditional request with If-None-Match: \"*\".",
    "tags": [
     "File and Directory Operations"
    ],
    "responses": {
     "201": {
      "$ref": "#/components/responses/responses:7",
      "description": "The file or directory was created."
     },
     "default": {
      "$ref": "#/components/responses/responses:0"
     }
    },
    "parameters": [
     {
      "name": "filesystem",
      "in": "path",
      "description": "The filesystem identifier.",
      "required": true,
      "schema": {
       "pattern": "^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$",
       "minLength": 3,
       "maxLength": 63,
       "type": "string"
      }
     },
     {
      "name": "path",
      "in": "path",
      "description": "The file or directory path.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "A UUID recorded in the analytics logs for troubleshooting and correlation.",
      "required": false,
      "x-ms-client-request-id": true,
      "schema": {
       "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
       "type": "string"
      }
     },
     {
      "name": "timeout",
      "in": "query",
      "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.",
      "required": false,
      "schema": {
       "format": "int32",
       "minimum": 1,
       "type": "integer"
      }
     },
     {
      "name": "x-ms-date",
      "in": "header",
      "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:21",
      "description": "Required only for Create File and Create Directory. The value must be \"file\" or \"directory\"."
     },
     {
      "$ref": "#/components/parameters/parameters:22",
      "description": "Optional.  When renaming a directory, the number of paths that are renamed with each invocation is limited.  If the number of paths to be renamed exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the rename operation to continue renaming the directory."
     },
     {
      "$ref": "#/components/parameters/parameters:23",
      "description": "Optional. Valid only when namespace is enabled. This parameter determines the behavior of the rename operation. The value must be \"legacy\" or \"posix\", and the default value will be \"posix\". "
     },
     {
      "$ref": "#/components/parameters/parameters:24",
      "description": "Optional.  The service stores this value and includes it in the \"Cache-Control\" response header for \"Read File\" operations for \"Read File\" operations."
     },
     {
      "$ref": "#/components/parameters/parameters:25",
      "description": "Optional.  Specifies which content encodings have been applied to the file. This value is returned to the client when the \"Read File\" operation is performed."
     },
     {
      "$ref": "#/components/parameters/parameters:26",
      "description": "Optional.  Specifies the natural language used by the intended audience for the file."
     },
     {
      "$ref": "#/components/parameters/parameters:27",
      "description": "Optional.  The service stores this value and includes it in the \"Content-Disposition\" response header for \"Read File\" operations."
     },
     {
      "$ref": "#/components/parameters/parameters:28",
      "description": "Optional.  The service stores this value and includes it in the \"Cache-Control\" response header for \"Read File\" operations."
     },
     {
      "$ref": "#/components/parameters/parameters:29",
      "description": "Optional.  The service stores this value and includes it in the \"Content-Type\" response header for \"Read File\" operations."
     },
     {
      "$ref": "#/components/parameters/parameters:30",
      "description": "Optional.  The service stores this value and includes it in the \"Content-Encoding\" response header for \"Read File\" operations."
     },
     {
      "$ref": "#/components/parameters/parameters:31",
      "description": "Optional.  The service stores this value and includes it in the \"Content-Language\" response header for \"Read File\" operations."
     },
     {
      "$ref": "#/components/parameters/parameters:32",
      "description": "Optional.  The service stores this value and includes it in the \"Content-Disposition\" response header for \"Read File\" operations."
     },
     {
      "$ref": "#/components/parameters/parameters:33",
      "description": "An optional file or directory to be renamed.  The value must have the following format: \"/{filesystem}/{path}\".  If \"x-ms-properties\" is specified, the properties will overwrite the existing properties; otherwise, the existing properties will be preserved. This value must be a URL percent-encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
     },
     {
      "$ref": "#/components/parameters/parameters:34",
      "description": "Optional.  A lease ID for the path specified in the URI.  The path to be overwritten must have an active lease and the lease ID must match."
     },
     {
      "$ref": "#/components/parameters/parameters:35",
      "description": "Optional for rename operations.  A lease ID for the source path.  The source path must have an active lease and the lease ID must match."
     },
     {
      "$ref": "#/components/parameters/parameters:36",
      "description": "Optional.  User-defined properties to be stored with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set."
     },
     {
      "$ref": "#/components/parameters/parameters:37",
      "description": "Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported."
     },
     {
      "$ref": "#/components/parameters/parameters:38",
      "description": "Optional and only valid if Hierarchical Namespace is enabled for the account. When creating a file or directory and the parent folder does not have a default ACL, the umask restricts the permissions of the file or directory to be created.  The resulting permission is given by p & ^u, where p is the permission and u is the umask.  For example, if p is 0777 and u is 0057, then the resulting permission is 0720.  The default permission is 0777 for a directory and 0666 for a file.  The default umask is 0027.  The umask must be specified in 4-digit octal notation (e.g. 0766)."
     },
     {
      "$ref": "#/components/parameters/parameters:39",
      "description": "Optional.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:40",
      "description": "Optional.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:41",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time."
     },
     {
      "$ref": "#/components/parameters/parameters:42",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time."
     },
     {
      "$ref": "#/components/parameters/parameters:43",
      "description": "Optional.  An ETag value. Specify this header to perform the rename operation only if the source's ETag matches the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:44",
      "description": "Optional.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the rename operation only if the source's ETag does not match the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:45",
      "description": "Optional. A date and time value. Specify this header to perform the rename operation only if the source has been modified since the specified date and time."
     },
     {
      "$ref": "#/components/parameters/parameters:46",
      "description": "Optional. A date and time value. Specify this header to perform the rename operation only if the source has not been modified since the specified date and time."
     }
    ]
   }
  },
  "path:2.patch": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}/{path}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}~1{path}"
    ]
   },
   "patch": {
    "servers": [
     {
      "url": "https://{accountName}.{dnsSuffix}",
      "variables": {
       "accountName": {
        "description": "The Azure Storage account name.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client",
        "default": ""
       },
       "dnsSuffix": {
        "default": "dfs.core.windows.net",
        "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
       },
       "": {
        "default": ""
       }
      }
     }
    ],
    "operationId": "Path_Update",
    "summary": "Append Data | Flush Data | Set Properties | Set Access Control",
    "description": "Uploads data to be appended to a file, flushes (writes) previously uploaded data to a file, sets properties for a file or directory, or sets access control for a file or directory. Data can only be appended to a file. This operation supports conditional HTTP requests. For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
    "tags": [
     "File and Directory Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:8",
      "description": "The data was flushed (written) to the file or the properties were set successfully."
     },
     "202": {
      "$ref": "#/components/responses/responses:9",
      "description": "The uploaded data was accepted."
     },
     "default": {
      "$ref": "#/components/responses/responses:0"
     }
    },
    "parameters": [
     {
      "name": "filesystem",
      "in": "path",
      "description": "The filesystem identifier.",
      "required": true,
      "schema": {
       "pattern": "^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$",
       "minLength": 3,
       "maxLength": 63,
       "type": "string"
      }
     },
     {
      "name": "path",
      "in": "path",
      "description": "The file or directory path.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "A UUID recorded in the analytics logs for troubleshooting and correlation.",
      "required": false,
      "x-ms-client-request-id": true,
      "schema": {
       "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
       "type": "string"
      }
     },
     {
      "name": "timeout",
      "in": "query",
      "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.",
      "required": false,
      "schema": {
       "format": "int32",
       "minimum": 1,
       "type": "integer"
      }
     },
     {
      "name": "x-ms-date",
      "in": "header",
      "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:47",
      "description": "The action must be \"append\" to upload data to be appended to a file, \"flush\" to flush previously uploaded data to a file, \"setProperties\" to set the properties of a file or directory, or \"setAccessControl\" to set the owner, group, permissions, or access control list for a file or directory.  Note that Hierarchical Namespace must be enabled for the account in order to use access control.  Also note that the Access Control List (ACL) includes permissions for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers are mutually exclusive."
     },
     {
      "$ref": "#/components/parameters/parameters:48",
      "description": "This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.  It is required when uploading data to be appended to the file and when flushing previously uploaded data to the file.  The value must be the position where the data is to be appended.  Uploaded data is not immediately flushed, or written, to the file.  To flush, the previously uploaded data must be contiguous, the position parameter must be specified and equal to the length of the file after all data has been written, and there must not be a request entity body included with the request."
     },
     {
      "$ref": "#/components/parameters/parameters:49",
      "description": "Valid only for flush operations.  If \"true\", uncommitted data is retained after the flush operation completes; otherwise, the uncommitted data is deleted after the flush operation.  The default is false.  Data at offsets less than the specified position are written to the file when flush succeeds, but this optional parameter allows data after the flush position to be retained for a future flush operation."
     },
     {
      "$ref": "#/components/parameters/parameters:50",
      "description": "Azure Storage Events allow applications to receive notifications when files change. When Azure Storage Events are enabled, a file changed event is raised. This event has a property indicating whether this is the final change to distinguish the difference between an intermediate flush to a file stream and the final close of a file stream. The close query parameter is valid only when the action is \"flush\" and change notifications are enabled. If the value of close is \"true\" and the flush operation completes successfully, the service raises a file change notification with a property indicating that this is the final update (the file stream has been closed). If \"false\" a change notification is raised indicating the file has changed. The default is false. This query parameter is set to true by the Hadoop ABFS driver to indicate that the file stream has been closed.\""
     },
     {
      "$ref": "#/components/parameters/parameters:51",
      "description": "Required for \"Append Data\" and \"Flush Data\".  Must be 0 for \"Flush Data\".  Must be the length of the request content in bytes for \"Append Data\"."
     },
     {
      "$ref": "#/components/parameters/parameters:52",
      "description": "Optional. An MD5 hash of the request content. This header is valid on \"Append\" and \"Flush\" operations. This hash is used to verify the integrity of the request content during transport. When this header is specified, the storage service compares the hash of the content that has arrived with this header value. If the two hashes do not match, the operation will fail with error code 400 (Bad Request). Note that this MD5 hash is not stored with the file. This header is associated with the request content, and not with the stored content of the file itself."
     },
     {
      "$ref": "#/components/parameters/parameters:53",
      "description": "The lease ID must be specified if there is an active lease."
     },
     {
      "$ref": "#/components/parameters/parameters:54",
      "description": "Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the \"Cache-Control\" response header for \"Read File\" operations."
     },
     {
      "$ref": "#/components/parameters/parameters:55",
      "description": "Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the \"Content-Type\" response header for \"Read File\" operations."
     },
     {
      "$ref": "#/components/parameters/parameters:56",
      "description": "Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the \"Content-Disposition\" response header for \"Read File\" operations."
     },
     {
      "$ref": "#/components/parameters/parameters:57",
      "description": "Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the \"Content-Encoding\" response header for \"Read File\" operations."
     },
     {
      "$ref": "#/components/parameters/parameters:58",
      "description": "Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the \"Content-Language\" response header for \"Read File\" operations."
     },
     {
      "$ref": "#/components/parameters/parameters:59",
      "description": "Optional and only valid for \"Flush & Set Properties\" operations.  The service stores this value and includes it in the \"Content-Md5\" response header for \"Read & Get Properties\" operations. If this property is not specified on the request, then the property will be cleared for the file. Subsequent calls to \"Read & Get Properties\" will not return this property unless it is explicitly set on that file again."
     },
     {
      "$ref": "#/components/parameters/parameters:60",
      "description": "Optional.  User-defined properties to be stored with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set. Valid only for the setProperties operation. If the file or directory exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties."
     },
     {
      "$ref": "#/components/parameters/parameters:61",
      "description": "Optional and valid only for the setAccessControl operation. Sets the owner of the file or directory."
     },
     {
      "$ref": "#/components/parameters/parameters:62",
      "description": "Optional and valid only for the setAccessControl operation. Sets the owning group of the file or directory."
     },
     {
      "$ref": "#/components/parameters/parameters:63",
      "description": "Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported. Invalid in conjunction with x-ms-acl."
     },
     {
      "$ref": "#/components/parameters/parameters:64",
      "description": "Optional and valid only for the setAccessControl operation. Sets POSIX access control rights on files and directories. The value is a comma-separated list of access control entries that fully replaces the existing access control list (ACL).  Each access control entry (ACE) consists of a scope, a type, a user or group identifier, and permissions in the format \"[scope:][type]:[id]:[permissions]\". The scope must be \"default\" to indicate the ACE belongs to the default ACL for a directory; otherwise scope is implicit and the ACE belongs to the access ACL.  There are four ACE types: \"user\" grants rights to the owner or a named user, \"group\" grants rights to the owning group or a named group, \"mask\" restricts rights granted to named users and the members of groups, and \"other\" grants rights to all users not found in any of the other entries. The user or group identifier is omitted for entries of type \"mask\" and \"other\".  The user or group identifier is also omitted for the owner and owning group.  The permission field is a 3-character sequence where the first character is 'r' to grant read access, the second character is 'w' to grant write access, and the third character is 'x' to grant execute permission.  If access is not granted, the '-' character is used to denote that the permission is denied. For example, the following ACL grants read, write, and execute rights to the file owner and john.doe@contoso, the read right to the owning group, and nothing to everyone else: \"user::rwx,user:john.doe@contoso:rwx,group::r--,other::---,mask=rwx\". Invalid in conjunction with x-ms-permissions."
     },
     {
      "$ref": "#/components/parameters/parameters:65",
      "description": "Optional for Flush Data and Set Properties, but invalid for Append Data.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:66",
      "description": "Optional for Flush Data and Set Properties, but invalid for Append Data.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:67",
      "description": "Optional for Flush Data and Set Properties, but invalid for Append Data. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time."
     },
     {
      "$ref": "#/components/parameters/parameters:68",
      "description": "Optional for Flush Data and Set Properties, but invalid for Append Data. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time."
     }
    ],
    "requestBody": {
     "$ref": "#/components/requestBodies/requestBodies:0",
     "description": "Valid only for append operations.  The data to be uploaded and appended to the file."
    },
    "x-ms-requestBody-index": 22
   }
  },
  "path:2.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}/{path}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}~1{path}"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://{accountName}.{dnsSuffix}",
      "variables": {
       "accountName": {
        "description": "The Azure Storage account name.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client",
        "default": ""
       },
       "dnsSuffix": {
        "default": "dfs.core.windows.net",
        "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
       },
       "": {
        "default": ""
       }
      }
     }
    ],
    "operationId": "Path_Lease",
    "summary": "Lease Path",
    "description": "Create and manage a lease to restrict write and delete access to the path. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
    "tags": [
     "File and Directory Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:10",
      "description": "The \"renew\", \"change\" or \"release\" action was successful."
     },
     "201": {
      "$ref": "#/components/responses/responses:11",
      "description": "A new lease has been created.  The \"acquire\" action was successful."
     },
     "202": {
      "$ref": "#/components/responses/responses:12",
      "description": "The \"break\" lease action was successful."
     },
     "default": {
      "$ref": "#/components/responses/responses:0"
     }
    },
    "parameters": [
     {
      "name": "filesystem",
      "in": "path",
      "description": "The filesystem identifier.",
      "required": true,
      "schema": {
       "pattern": "^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$",
       "minLength": 3,
       "maxLength": 63,
       "type": "string"
      }
     },
     {
      "name": "path",
      "in": "path",
      "description": "The file or directory path.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "A UUID recorded in the analytics logs for troubleshooting and correlation.",
      "required": false,
      "x-ms-client-request-id": true,
      "schema": {
       "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
       "type": "string"
      }
     },
     {
      "name": "timeout",
      "in": "query",
      "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.",
      "required": false,
      "schema": {
       "format": "int32",
       "minimum": 1,
       "type": "integer"
      }
     },
     {
      "name": "x-ms-date",
      "in": "header",
      "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:69",
      "description": "There are five lease actions: \"acquire\", \"break\", \"change\", \"renew\", and \"release\". Use \"acquire\" and specify the \"x-ms-proposed-lease-id\" and \"x-ms-lease-duration\" to acquire a new lease. Use \"break\" to break an existing lease. When a lease is broken, the lease break period is allowed to elapse, during which time no lease operation except break and release can be performed on the file. When a lease is successfully broken, the response indicates the interval in seconds until a new lease can be acquired. Use \"change\" and specify the current lease ID in \"x-ms-lease-id\" and the new lease ID in \"x-ms-proposed-lease-id\" to change the lease ID of an active lease. Use \"renew\" and specify the \"x-ms-lease-id\" to renew an existing lease. Use \"release\" and specify the \"x-ms-lease-id\" to release a lease."
     },
     {
      "$ref": "#/components/parameters/parameters:70",
      "description": "The lease duration is required to acquire a lease, and specifies the duration of the lease in seconds.  The lease duration must be between 15 and 60 seconds or -1 for infinite lease."
     },
     {
      "$ref": "#/components/parameters/parameters:71",
      "description": "The lease break period duration is optional to break a lease, and  specifies the break period of the lease in seconds.  The lease break  duration must be between 0 and 60 seconds."
     },
     {
      "$ref": "#/components/parameters/parameters:72",
      "description": "Required when \"x-ms-lease-action\" is \"renew\", \"change\" or \"release\". For the renew and release actions, this must match the current lease ID."
     },
     {
      "$ref": "#/components/parameters/parameters:73",
      "description": "Required when \"x-ms-lease-action\" is \"acquire\" or \"change\".  A lease will be acquired with this lease ID if the operation is successful."
     },
     {
      "$ref": "#/components/parameters/parameters:74",
      "description": "Optional.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:75",
      "description": "Optional.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:76",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time."
     },
     {
      "$ref": "#/components/parameters/parameters:77",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time."
     }
    ]
   }
  },
  "path:2.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}/{path}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}~1{path}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://{accountName}.{dnsSuffix}",
      "variables": {
       "accountName": {
        "description": "The Azure Storage account name.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client",
        "default": ""
       },
       "dnsSuffix": {
        "default": "dfs.core.windows.net",
        "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
       },
       "": {
        "default": ""
       }
      }
     }
    ],
    "operationId": "Path_Read",
    "summary": "Read File",
    "description": "Read the contents of a file.  For read operations, range requests are supported. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
    "tags": [
     "File and Directory Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:13",
      "description": "Ok"
     },
     "206": {
      "$ref": "#/components/responses/responses:14",
      "description": "Partial content"
     },
     "default": {
      "$ref": "#/components/responses/responses:0"
     }
    },
    "parameters": [
     {
      "name": "filesystem",
      "in": "path",
      "description": "The filesystem identifier.",
      "required": true,
      "schema": {
       "pattern": "^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$",
       "minLength": 3,
       "maxLength": 63,
       "type": "string"
      }
     },
     {
      "name": "path",
      "in": "path",
      "description": "The file or directory path.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "A UUID recorded in the analytics logs for troubleshooting and correlation.",
      "required": false,
      "x-ms-client-request-id": true,
      "schema": {
       "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
       "type": "string"
      }
     },
     {
      "name": "timeout",
      "in": "query",
      "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.",
      "required": false,
      "schema": {
       "format": "int32",
       "minimum": 1,
       "type": "integer"
      }
     },
     {
      "name": "x-ms-date",
      "in": "header",
      "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:78",
      "description": "The HTTP Range request header specifies one or more byte ranges of the resource to be retrieved."
     },
     {
      "$ref": "#/components/parameters/parameters:79",
      "description": "Optional. If this header is specified, the operation will be performed only if both of the following conditions are met: i) the path's lease is currently active and ii) the lease ID specified in the request matches that of the path."
     },
     {
      "$ref": "#/components/parameters/parameters:80",
      "description": "Optional. When this header is set to \"true\" and specified together with the Range header, the service returns the MD5 hash for the range, as long as the range is less than or equal to 4MB in size. If this header is specified without the Range header, the service returns status code 400 (Bad Request). If this header is set to true when the range exceeds 4 MB in size, the service returns status code 400 (Bad Request)."
     },
     {
      "$ref": "#/components/parameters/parameters:81",
      "description": "Optional.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:82",
      "description": "Optional.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:83",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time."
     },
     {
      "$ref": "#/components/parameters/parameters:84",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time."
     }
    ]
   }
  },
  "path:2.head": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}/{path}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}~1{path}"
    ]
   },
   "head": {
    "servers": [
     {
      "url": "https://{accountName}.{dnsSuffix}",
      "variables": {
       "accountName": {
        "description": "The Azure Storage account name.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client",
        "default": ""
       },
       "dnsSuffix": {
        "default": "dfs.core.windows.net",
        "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
       },
       "": {
        "default": ""
       }
      }
     }
    ],
    "operationId": "Path_GetProperties",
    "summary": "Get Properties | Get Status | Get Access Control List | Check Access",
    "description": "Get Properties returns all system and user defined properties for a path. Get Status returns all system defined properties for a path. Get Access Control List returns the access control list for a path. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
    "tags": [
     "File and Directory Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:15",
      "description": "Returns all properties for the file or directory."
     },
     "default": {
      "$ref": "#/components/responses/responses:0"
     }
    },
    "parameters": [
     {
      "name": "filesystem",
      "in": "path",
      "description": "The filesystem identifier.",
      "required": true,
      "schema": {
       "pattern": "^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$",
       "minLength": 3,
       "maxLength": 63,
       "type": "string"
      }
     },
     {
      "name": "path",
      "in": "path",
      "description": "The file or directory path.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "A UUID recorded in the analytics logs for troubleshooting and correlation.",
      "required": false,
      "x-ms-client-request-id": true,
      "schema": {
       "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
       "type": "string"
      }
     },
     {
      "name": "timeout",
      "in": "query",
      "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.",
      "required": false,
      "schema": {
       "format": "int32",
       "minimum": 1,
       "type": "integer"
      }
     },
     {
      "name": "x-ms-date",
      "in": "header",
      "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:85",
      "description": "Optional. If the value is \"getStatus\" only the system defined properties for the path are returned. If the value is \"getAccessControl\" the access control list is returned in the response headers (Hierarchical Namespace must be enabled for the account), otherwise the properties are returned."
     },
     {
      "$ref": "#/components/parameters/parameters:86",
      "description": "Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names."
     },
     {
      "$ref": "#/components/parameters/parameters:87",
      "description": "Required only for check access action. Valid only when Hierarchical Namespace is enabled for the account. File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'"
     },
     {
      "$ref": "#/components/parameters/parameters:88",
      "description": "Optional. If this header is specified, the operation will be performed only if both of the following conditions are met: i) the path's lease is currently active and ii) the lease ID specified in the request matches that of the path."
     },
     {
      "$ref": "#/components/parameters/parameters:89",
      "description": "Optional.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:90",
      "description": "Optional.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:91",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time."
     },
     {
      "$ref": "#/components/parameters/parameters:92",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time."
     }
    ]
   }
  },
  "path:2.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2019-10-31"
    ],
    "filename": [
     "mem:///96?oai3.shaken.json"
    ],
    "path": "/{filesystem}/{path}",
    "originalLocations": [
     "https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/data-plane/Microsoft.StorageDataLake/stable/2019-10-31/DataLakeStorage.json#/paths/~1{filesystem}~1{path}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://{accountName}.{dnsSuffix}",
      "variables": {
       "accountName": {
        "description": "The Azure Storage account name.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client",
        "default": ""
       },
       "dnsSuffix": {
        "default": "dfs.core.windows.net",
        "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
       },
       "": {
        "default": ""
       }
      }
     }
    ],
    "operationId": "Path_Delete",
    "summary": "Delete File | Delete Directory",
    "description": "Delete the file or directory. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
    "tags": [
     "File and Directory Operations"
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:16",
      "description": "The file was deleted."
     },
     "default": {
      "$ref": "#/components/responses/responses:0"
     }
    },
    "parameters": [
     {
      "name": "filesystem",
      "in": "path",
      "description": "The filesystem identifier.",
      "required": true,
      "schema": {
       "pattern": "^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$",
       "minLength": 3,
       "maxLength": 63,
       "type": "string"
      }
     },
     {
      "name": "path",
      "in": "path",
      "description": "The file or directory path.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "A UUID recorded in the analytics logs for troubleshooting and correlation.",
      "required": false,
      "x-ms-client-request-id": true,
      "schema": {
       "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
       "type": "string"
      }
     },
     {
      "name": "timeout",
      "in": "query",
      "description": "An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.",
      "required": false,
      "schema": {
       "format": "int32",
       "minimum": 1,
       "type": "integer"
      }
     },
     {
      "name": "x-ms-date",
      "in": "header",
      "description": "Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:93",
      "description": "Required and valid only when the resource is a directory.  If \"true\", all paths beneath the directory will be deleted. If \"false\" and the directory is non-empty, an error occurs."
     },
     {
      "$ref": "#/components/parameters/parameters:94",
      "description": "Optional.  When deleting a directory, the number of paths that are deleted with each invocation is limited.  If the number of paths to be deleted exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the delete operation to continue deleting the directory."
     },
     {
      "$ref": "#/components/parameters/parameters:95",
      "description": "The lease ID must be specified if there is an active lease."
     },
     {
      "$ref": "#/components/parameters/parameters:96",
      "description": "Optional.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:97",
      "description": "Optional.  An ETag value or the special wildcard (\"*\") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes."
     },
     {
      "$ref": "#/components/parameters/parameters:98",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time."
     },
     {
      "$ref": "#/components/parameters/parameters:99",
      "description": "Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time."
     }
    ]
   }
  }
 },
 "servers": [
  {
   "url": "https://{accountName}.{dnsSuffix}",
   "variables": {
    "accountName": {
     "description": "The Azure Storage account name.",
     "x-ms-skip-url-encoding": true,
     "x-ms-parameter-location": "client",
     "default": ""
    },
    "dnsSuffix": {
     "default": "dfs.core.windows.net",
     "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
     "x-ms-skip-url-encoding": true,
     "x-ms-parameter-location": "client"
    },
    "": {
     "default": ""
    }
   }
  }
 ]
}