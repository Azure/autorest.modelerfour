# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "10.x"
    displayName: "Install Node.js"

  - script: |
      npm install -g npm
      npm cache clear --force

      npx @microsoft/rush update
      rc=$?; if [ $rc -ne 0 ]; then exit $rc ; fi
      npx @microsoft/rush rebuild
      rc=$?; if [ $rc -ne 0 ]; then exit $rc ; fi
      npx @microsoft/rush test
      rc=$?; if [ $rc -ne 0 ]; then exit $rc ; fi

      # check to see if any files changed after the test run.
      git status

      # set the actual package versions
      npx @microsoft/rush set-versions
      rc=$?; if [ $rc -ne 0 ]; then exit $rc ; fi 

      npx @microsoft/rush publish --publish --pack --include-all --tag latest
      rc=$?; if [ $rc -ne 0 ]; then exit $rc ; fi 

      v=`node -e "console.log(require('./modelerfour/package.json').version)"`
      echo "##vso[task.setvariable variable=artver]$v"

    displayName: "Rush install, build and test"

  - script: npm run test:v2:ci
    workingDirectory: modelerfour
    displayName: "Test V2"

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: "$(Build.SourcesDirectory)/common/temp/artifacts/packages/autorest-modelerfour-$(artver).tgz"
      artifact: "packages"
      publishLocation: "pipeline"

  - pwsh: |
      $url = "$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/build/builds/$(Build.BuildId)/artifacts?artifactName=packages&api-version=5.1"
      $buildPipeline= Invoke-RestMethod -Uri $url -Headers @{ Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN" } -Method Get
      $ArtifactDownloadURL= $buildPipeline.resource.downloadUrl
      $ArtifactDownloadURL = $ArtifactDownloadURL  -replace "format=zip","format=file&subPath=%2Fautorest-modelerfour-$(artver).tgz" 
      echo "Raw Artifact Url: '$ArtifactDownloadURL'"
      $downurl = (iwr "http://tinyurl.com/api-create.php?url=$( [System.Web.HttpUtility]::UrlEncode($ArtifactDownloadURL))" ).Content
      echo "##vso[task.setvariable variable=DOWNURL]$downurl"

  - task: GitHubComment@0
    inputs:
      gitHubConnection: "Azure"
      repositoryName: "$(Build.Repository.Name)"
      comment: |
        You may test this build by running `autorest --reset` and then either: 
        <hr>

        add `--use:` to the command line:

        `autorest --use:$(DOWNURL) ` ...
        <hr>

        or use the following in your autorest configuration:

        ``` yaml 
        use-extension:
          "@autorest/modelerfour": "$(DOWNURL)" 
        ```
        <hr>

        If this build is good for you, give this comment a thumbs up. (üëç)

        And you should run `autorest --reset`  again once you're finished testing to remove it.

  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.x"

  - script: npm install -g @autorest/compare@~0.3.0
    displayName: Install autorest-compare

  - script: autorest-compare --compare:.scripts/regression-compare.yaml --language:python
    displayName: Regression Test - @autorest/python

  - script: autorest-compare --compare:.scripts/regression-compare.yaml --language:typescript
    displayName: Regression Test - @autorest/typescript
